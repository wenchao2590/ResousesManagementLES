<#@ include file="$(SolutionDir)\ReferenceDll\T4Template\DBEntity.SQLServer.ttinclude" #> 
<#@ output extension=".txt" #> 
<#	
    var tableNames = "TM_BAS_PART_EXTEND";              
	var MouldName = "MasterData";
	var NameSpace = "BLL." + MouldName;    
	//Output File Path
	var outputFilePath =  Path.GetDirectoryName(Host.TemplateFile);
	                
	var manager = Manager.Create(Host, GenerationEnvironment);
	var dbExporter = new DBExporter(); 
    var entities = dbExporter.LoadEntities();
    foreach(Entity tbl in entities){
		if(tableNames!="")
		{  
			if(tbl.Name.ToLower() != tableNames.ToLower())
				continue;  
		}     
		manager.StartNewFile(Helper.TableNameToPascal(tbl.Name) + "BLL.Gen.cs", outputFilePath);
#>
#region Declaim
//---------------------------------------------------------------------------
// Name:		I<#= Helper.TableNameToPascal(tbl.Name) #>
// Function: 	Expose data in table <#= tbl.Name #> from database as business object to MES system.
// Tool:		T4
// CreateDate:	<#= DateTime.Now.ToLongDateString() #>
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion

#region Imported Namespace

using Contract.<#= MouldName #>;
using DAL.<#= MouldName #>;
using DM.<#= MouldName #>;
using System.Collections.Generic;
          
#endregion
<# var paramStr="";int length=0;var index =0; foreach(Column col in tbl.Columns){  if(col.IsPrimaryKey) length++; }  index=0; foreach(Column col in tbl.Columns){  if(col.IsPrimaryKey) { if(index!=length-1) paramStr+= Helper.GetSysType(col.DataType) + ",\r\n\t\t\t\t"; else paramStr+= Helper.GetSysType(col.DataType) ;index++; } }  #>

namespace <#= NameSpace #> 
{     
	//// <summary>
    /// <#= Helper.TableNameToPascal(tbl.Name) #>BLL对应表[<#= tbl.Name #>]
    /// </summary>
    public partial class <#=Helper.TableNameToPascal(tbl.Name) #>BLL : I<#=Helper.TableNameToPascal(tbl.Name) #>
	{
		/// <summary>
        /// DAL对象
        /// </summary>
        <#=Helper.TableNameToPascal(tbl.Name) #>DAL dal = new <#=Helper.TableNameToPascal(tbl.Name) #>DAL();
        /// <summary>
        /// 根据主键获取单个数据对象
        /// </summary>
        /// <param name="key">主键</param>
        /// <returns>数据对象</returns>
        public <#=Helper.TableNameToPascal(tbl.Name) #>Info Get(<#= paramStr #> key)
        {
            return dal.GetInfo(key);
        }
        /// <summary>
        /// 根据条件参数获取数据集合并根据排序参数进行排序
        /// </summary>
        /// <param name="textWhere">条件</param>
        /// <param name="orderText">排序</param>
        /// <returns>数据集合</returns>
        public IList<<#=Helper.TableNameToPascal(tbl.Name) #>Info> GetList(string textWhere, string orderText)
        {
            return dal.GetList(textWhere, orderText);
        }
        /// <summary>
        /// 根据参数语句获取数据集合
        /// </summary>
        /// <param name="sql">语句</param>
        /// <returns>数据集合</returns>
        public IList<<#=Helper.TableNameToPascal(tbl.Name) #>Info> GetList(string sql)
        {
            return dal.GetList(sql);
        }
        /// <summary>
        /// 根据条件参数获取从页码参数开始的条数参数的数据集合并依据排序参数进行排序
        /// </summary>
        /// <param name="textWhere">条件</param>
        /// <param name="orderText">排序</param>
        /// <param name="startRowIndex">开始页码</param>
        /// <param name="maximumRows">条数</param>
        /// <returns>数据集合</returns>
        public IList<<#=Helper.TableNameToPascal(tbl.Name) #>Info> GetByPageCondition(string textWhere, string orderText, int startRowIndex, int maximumRows)
        {
            return dal.GetList(textWhere, orderText, startRowIndex, maximumRows);
        }
        /// <summary>
        /// 根据条件参数获取数据集合的数据量
        /// </summary>
        /// <param name="textWhere">条件</param>
        /// <returns>数据量</returns>
        public int GetCounts(string textWhere)
        {
            return dal.GetCounts(textWhere);
        }
        /// <summary>
        /// 添加数据对象
        /// </summary>
        /// <param name="model">数据对象</param>
        /// <returns>主键</returns>
        public int Add(<#=Helper.TableNameToPascal(tbl.Name) #>Info model)
        {
            return dal.Add(model);
                }
        /// <summary>
        /// 更新数据对象
        /// </summary>
        /// <param name="model">数据对象</param>
        /// <returns>影响行数</returns>
        public int Update(<#=Helper.TableNameToPascal(tbl.Name) #>Info model)
        {
            return dal.Update(model);
        }
        /// <summary>
        /// 根据主键删除数据对象
        /// </summary>
        /// <param name="key">主键</param>
        /// <returns>影响行数</returns>
        public int Delete(<#= paramStr #> key)
        {
            return dal.Delete(key);
        }
	}
}
<#   
		manager.EndBlock();		
    }

	manager.Process(true); 
#>
