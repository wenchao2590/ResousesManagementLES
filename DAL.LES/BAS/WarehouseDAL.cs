#region Declaim
//---------------------------------------------------------------------------
// Name:		WarehouseDAL
// Function: 	Expose data in table TM_BAS_WAREHOUSE from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年4月26日
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion

#region Imported Namespace

using DM.LES;
using Infrustructure.Data;
using Infrustructure.Utilities;
using Microsoft.Practices.EnterpriseLibrary.Data;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;

#endregion

namespace DAL.LES
{
    //// <summary>
    /// WarehouseDAL对应表[TM_BAS_WAREHOUSE]
    /// </summary>
    public partial class WarehouseDAL : BusinessObjectProvider<WarehouseInfo>
    {
        public WarehouseInfo GetWarehouseInfo(string WmNo)
        {
            string sql = "select * from [LES].[TM_BAS_WAREHOUSE] with(nolock) where [VALID_FLAG] = 1 and WAREHOUSE='" + WmNo + "';";
            Database db = DatabaseFactory.CreateDatabase();
            DbCommand dbCommand = db.GetSqlStringCommand(sql);
            using (IDataReader dr = db.ExecuteReader(dbCommand))
            {
                if (dr.Read())
                    return CreateWarehouseInfo(dr);
            }
            return null;
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="wmNos"></param>
        /// <returns></returns>
        public List<WarehouseInfo> GetListForInterfaceDataSync(List<string> wmNos)
        {
            string sql = "select [ID],[WAREHOUSE],[VMI_ENABLE],[WAREHOUSE_NAME] "
                + "from [LES].[TM_BAS_WAREHOUSE] with(nolock) "
                + "where [VALID_FLAG] = 1 and [WAREHOUSE] in ('" + string.Join("','", wmNos.ToArray()) + "');";
            Database db = DatabaseFactory.CreateDatabase();
            DbCommand cmd = db.GetSqlStringCommand(sql);
            List<WarehouseInfo> list = new List<WarehouseInfo>();
            using (IDataReader rdr = db.ExecuteReader(cmd))
            {
                while (rdr.Read())
                {
                    WarehouseInfo info = new WarehouseInfo();
                    info.Id = DBConvert.GetInt64(rdr, rdr.GetOrdinal("ID"));
                    info.Warehouse = DBConvert.GetString(rdr, rdr.GetOrdinal("WAREHOUSE"));
                    info.VmiEnable = DBConvert.GetBoolNullable(rdr, rdr.GetOrdinal("VMI_ENABLE"));
                    info.WarehouseName = DBConvert.GetString(rdr, rdr.GetOrdinal("WAREHOUSE_NAME"));
                    list.Add(info);
                }
            }
            return list;
        }
    }
}
