#region Declaim
//---------------------------------------------------------------------------
// Name:		MaintainPartsDAL
// Function: 	Expose data in table TM_BAS_MAINTAIN_PARTS from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年4月13日
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion

using DM.LES;
using Infrustructure.Data;
using Infrustructure.Utilities;
using Microsoft.Practices.EnterpriseLibrary.Data;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Text;

namespace DAL.LES
{
    public partial class MaintainPartsDAL
    {
        /// <summary>
        /// WS.SAP.SyncInboundService.SyncMaintainParts
        /// </summary>
        /// <param name="sql"></param>
        /// <returns></returns>
        public List<MaintainPartsInfo> GetListForInterfaceDataSync(List<string> partNos)
        {
            string sql = "select [ID],[PART_NO],[PART_CNAME],[PART_PURCHASER],[PLANT],[PART_ENAME],[PART_NICKNAME] "
                + "from [LES].[TM_BAS_MAINTAIN_PARTS] with(nolock) "
                + "where [VALID_FLAG] = 1 and [PART_NO] in ('" + string.Join("','", partNos.ToArray()) + "');";
            Database db = DatabaseFactory.CreateDatabase();
            DbCommand dbCommand = db.GetSqlStringCommand(sql);
            List<MaintainPartsInfo> list = new List<MaintainPartsInfo>();
            using (IDataReader dr = db.ExecuteReader(dbCommand))
            {
                while (dr.Read())
                {
                    MaintainPartsInfo info = new MaintainPartsInfo();
                    info.Id = DBConvert.GetInt64(dr, dr.GetOrdinal("ID"));
                    info.Plant = DBConvert.GetString(dr, dr.GetOrdinal("PLANT"));
                    info.PartNo = DBConvert.GetString(dr, dr.GetOrdinal("PART_NO"));
                    info.PartCname = DBConvert.GetString(dr, dr.GetOrdinal("PART_CNAME"));
                    info.PartPurchaser = DBConvert.GetString(dr, dr.GetOrdinal("PART_PURCHASER"));
                    info.PartEname = DBConvert.GetString(dr, dr.GetOrdinal("PART_ENAME"));
                    info.PartNickname = DBConvert.GetString(dr, dr.GetOrdinal("PART_NICKNAME"));
                    list.Add(info);
                }
            }
            return list;
        }

        /// <summary>
        /// WS.SAP.SyncInboundService.SyncMaintainParts
        /// </summary>
        /// <param name="sql"></param>
        /// <returns></returns>
        public MaintainPartsInfo GetInfoBy(string partNo, string SupplierNum, string WmNo, string ZoneNo)
        {
            string sql = "select * from [LES].[TM_BAS_MAINTAIN_PARTS] with(nolock) "
                + "where [VALID_FLAG] = 1 and [SUPPLIER_NUM]='" + SupplierNum + "' and [WM_NO]='" + WmNo + "' and [ZONE_NO]='" + ZoneNo + "' and [PART_NO]='" + partNo + "'";
            Database db = DatabaseFactory.CreateDatabase();
            DbCommand dbCommand = db.GetSqlStringCommand(sql);
            using (IDataReader dr = db.ExecuteReader(dbCommand))
            {
                if (dr.Read())
                    return CreateMaintainPartsInfo(dr);
            }
            return null;
        }


        /// <summary>
        /// 
        /// </summary>
        /// <param name="partNo"></param>
        /// <param name="plant"></param>
        /// <returns></returns>
        public MaintainPartsInfo GetInfoForDataSync(string partNo, string plant)
        {
            string sql = "select [ID],[PART_NO],[PART_CNAME],[INFO_PERSON],[PLANT] "
                + "from [LES].[TM_BAS_MAINTAIN_PARTS] with(nolock) "
                + "where [VALID_FLAG] = 1 and [PART_NO] = @PART_NO and [PLANT] = @PLANT;";
            Database db = DatabaseFactory.CreateDatabase();
            DbCommand dbCommand = db.GetSqlStringCommand(sql);
            db.AddInParameter(dbCommand, "@PART_NO", DbType.AnsiString, partNo);
            db.AddInParameter(dbCommand, "@PLANT", DbType.AnsiString, plant);
            List<MaintainPartsInfo> list = new List<MaintainPartsInfo>();
            using (IDataReader dr = db.ExecuteReader(dbCommand))
            {
                if (dr.Read())
                {
                    MaintainPartsInfo info = new MaintainPartsInfo();
                    info.Id = DBConvert.GetInt64(dr, dr.GetOrdinal("ID"));
                    info.Plant = DBConvert.GetString(dr, dr.GetOrdinal("PLANT"));
                    info.PartNo = DBConvert.GetString(dr, dr.GetOrdinal("PART_NO"));
                    info.PartCname = DBConvert.GetString(dr, dr.GetOrdinal("PART_CNAME"));
                    info.InfoPerson = DBConvert.GetString(dr, dr.GetOrdinal("INFO_PERSON"));
                    return info;
                }
            }
            return null;
        }
        /// <summary>
        /// 根据工厂物料号获取物料中文描述
        /// </summary>
        /// <param name="partNo"></param>
        /// <param name="plant"></param>
        /// <returns></returns>
        public string GetPartCname(string partNo, string plant)
        {
            string sql = "select [PART_CNAME] from [LES].[TM_BAS_MAINTAIN_PARTS] with(nolock) " +
                "where [VALID_FLAG] = 1 and [PLANT] = @PLANT and [PART_NO] = @PART_NO;";
            Database db = DatabaseFactory.CreateDatabase();
            DbCommand cmd = db.GetSqlStringCommand(sql);
            db.AddInParameter(cmd, "@PART_NO", DbType.AnsiString, partNo);
            db.AddInParameter(cmd, "@PLANT", DbType.AnsiString, plant);
            object result = db.ExecuteScalar(cmd);
            if (result == null || result == DBNull.Value)
                return string.Empty;
            return result.ToString();
        }
    }
}
