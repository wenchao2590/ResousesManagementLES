#region Declaim
//---------------------------------------------------------------------------
// Name:		OperationLogInfo
// Function: 	Expose data in table TL_SYS_OPERATION_LOG from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月25日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.SYS 
{   
	/// <summary>
    /// OperationLogInfo对应表[TL_SYS_OPERATION_LOG]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class OperationLogInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public OperationLogInfo(		 long aId,
				Guid aFid,
				string aTableName,
				string aOperationContext,
				string aIpAddress,
				string aPageUrl,
				string aBrowserInfo,
				bool aValidFlag,
				string aCreateUser,
				DateTime aCreateDate,
				int aOperationType				
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			TableName = aTableName;
		 
			OperationContext = aOperationContext;
		 
			IpAddress = aIpAddress;
		 
			PageUrl = aPageUrl;
		 
			BrowserInfo = aBrowserInfo;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			OperationType = aOperationType;
		}
		
		public OperationLogInfo():base("TL_SYS_OPERATION_LOG")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");          _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField TABLE_NAMEField = new DataSchemaField();
			TABLE_NAMEField.Name = "TABLE_NAME";
			TABLE_NAMEField.Type = typeof(string).ToString();
			TABLE_NAMEField.Index = 2;
			fields.Add(TABLE_NAMEField);
			 
			DataSchemaField OPERATION_CONTEXTField = new DataSchemaField();
			OPERATION_CONTEXTField.Name = "OPERATION_CONTEXT";
			OPERATION_CONTEXTField.Type = typeof(string).ToString();
			OPERATION_CONTEXTField.Index = 3;
			fields.Add(OPERATION_CONTEXTField);
			 
			DataSchemaField IP_ADDRESSField = new DataSchemaField();
			IP_ADDRESSField.Name = "IP_ADDRESS";
			IP_ADDRESSField.Type = typeof(string).ToString();
			IP_ADDRESSField.Index = 4;
			fields.Add(IP_ADDRESSField);
			 
			DataSchemaField PAGE_URLField = new DataSchemaField();
			PAGE_URLField.Name = "PAGE_URL";
			PAGE_URLField.Type = typeof(string).ToString();
			PAGE_URLField.Index = 5;
			fields.Add(PAGE_URLField);
			 
			DataSchemaField BROWSER_INFOField = new DataSchemaField();
			BROWSER_INFOField.Name = "BROWSER_INFO";
			BROWSER_INFOField.Type = typeof(string).ToString();
			BROWSER_INFOField.Index = 6;
			fields.Add(BROWSER_INFOField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 7;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 8;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 9;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField OPERATION_TYPEField = new DataSchemaField();
			OPERATION_TYPEField.Name = "OPERATION_TYPE";
			OPERATION_TYPEField.Type = typeof(int).ToString();
			OPERATION_TYPEField.Index = 10;
			fields.Add(OPERATION_TYPEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public string TableName{ get;set; }		
				
		[DataMember]
		public string OperationContext{ get;set; }		
				
		[DataMember]
		public string IpAddress{ get;set; }		
				
		[DataMember]
		public string PageUrl{ get;set; }		
				
		[DataMember]
		public string BrowserInfo{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		[DataMember]
		public int? OperationType{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			OperationLogInfo info = new OperationLogInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.TableName = this.TableName;
			info.OperationContext = this.OperationContext;
			info.IpAddress = this.IpAddress;
			info.PageUrl = this.PageUrl;
			info.BrowserInfo = this.BrowserInfo;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.OperationType = this.OperationType;
			return info;			
		}
		 
		public OperationLogInfo Clone()
		{
			return ((ICloneable) this).Clone() as OperationLogInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// OperationLogInfoCollection对应表[TL_SYS_OPERATION_LOG]
    /// </summary>
	public partial class OperationLogInfoCollection : BusinessObjectCollection<OperationLogInfo>
	{
		public OperationLogInfoCollection():base("TL_SYS_OPERATION_LOG"){}	
	}
}
