#region Declaim
//---------------------------------------------------------------------------
// Name:		InterfaceConfigInfo
// Function: 	Expose data in table TS_SYS_INTERFACE_CONFIG from database as business object to MES system.
// Tool:		T4
// CreateDate:	2020年3月9日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.SYS 
{   
	/// <summary>
    /// InterfaceConfigInfo对应表[TS_SYS_INTERFACE_CONFIG]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class InterfaceConfigInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public InterfaceConfigInfo(		 string aInterfaceCode,
				string aMethrodName,
				string aSysMethrodName,
				string aCallUrl,
				string aUserName,
				string aPassWord,
				string aSysName,
				string aParam1,
				string aParam2,
				string aParam3,
				string aCreateUser,
				DateTime aModifyDate,
				long aId,
				DateTime aCreateDate,
				Guid aFid,
				string aModifyUser,
				bool aValidFlag				
		) : this()
		{
			 
			InterfaceCode = aInterfaceCode;
		 
			MethrodName = aMethrodName;
		 
			SysMethrodName = aSysMethrodName;
		 
			CallUrl = aCallUrl;
		 
			UserName = aUserName;
		 
			PassWord = aPassWord;
		 
			SysName = aSysName;
		 
			Param1 = aParam1;
		 
			Param2 = aParam2;
		 
			Param3 = aParam3;
		 
			CreateUser = aCreateUser;
		 
			ModifyDate = aModifyDate;
		 
			Id = aId;
		 
			CreateDate = aCreateDate;
		 
			Fid = aFid;
		 
			ModifyUser = aModifyUser;
		 
			ValidFlag = aValidFlag;
		}
		
		public InterfaceConfigInfo():base("TS_SYS_INTERFACE_CONFIG")
		{
			List<string> keys = new List<string>();
			             			keys.Add("ID");    _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField INTERFACE_CODEField = new DataSchemaField();
			INTERFACE_CODEField.Name = "INTERFACE_CODE";
			INTERFACE_CODEField.Type = typeof(string).ToString();
			INTERFACE_CODEField.Index = 0;
			fields.Add(INTERFACE_CODEField);
			 
			DataSchemaField METHROD_NAMEField = new DataSchemaField();
			METHROD_NAMEField.Name = "METHROD_NAME";
			METHROD_NAMEField.Type = typeof(string).ToString();
			METHROD_NAMEField.Index = 1;
			fields.Add(METHROD_NAMEField);
			 
			DataSchemaField SYS_METHROD_NAMEField = new DataSchemaField();
			SYS_METHROD_NAMEField.Name = "SYS_METHROD_NAME";
			SYS_METHROD_NAMEField.Type = typeof(string).ToString();
			SYS_METHROD_NAMEField.Index = 2;
			fields.Add(SYS_METHROD_NAMEField);
			 
			DataSchemaField CALL_URLField = new DataSchemaField();
			CALL_URLField.Name = "CALL_URL";
			CALL_URLField.Type = typeof(string).ToString();
			CALL_URLField.Index = 3;
			fields.Add(CALL_URLField);
			 
			DataSchemaField USER_NAMEField = new DataSchemaField();
			USER_NAMEField.Name = "USER_NAME";
			USER_NAMEField.Type = typeof(string).ToString();
			USER_NAMEField.Index = 4;
			fields.Add(USER_NAMEField);
			 
			DataSchemaField PASS_WORDField = new DataSchemaField();
			PASS_WORDField.Name = "PASS_WORD";
			PASS_WORDField.Type = typeof(string).ToString();
			PASS_WORDField.Index = 5;
			fields.Add(PASS_WORDField);
			 
			DataSchemaField SYS_NAMEField = new DataSchemaField();
			SYS_NAMEField.Name = "SYS_NAME";
			SYS_NAMEField.Type = typeof(string).ToString();
			SYS_NAMEField.Index = 6;
			fields.Add(SYS_NAMEField);
			 
			DataSchemaField PARAM1Field = new DataSchemaField();
			PARAM1Field.Name = "PARAM1";
			PARAM1Field.Type = typeof(string).ToString();
			PARAM1Field.Index = 7;
			fields.Add(PARAM1Field);
			 
			DataSchemaField PARAM2Field = new DataSchemaField();
			PARAM2Field.Name = "PARAM2";
			PARAM2Field.Type = typeof(string).ToString();
			PARAM2Field.Index = 8;
			fields.Add(PARAM2Field);
			 
			DataSchemaField PARAM3Field = new DataSchemaField();
			PARAM3Field.Name = "PARAM3";
			PARAM3Field.Type = typeof(string).ToString();
			PARAM3Field.Index = 9;
			fields.Add(PARAM3Field);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 10;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 11;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 12;
			fields.Add(IDField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 13;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 14;
			fields.Add(FIDField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 15;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 16;
			fields.Add(VALID_FLAGField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public string InterfaceCode{ get;set; }		
				
		[DataMember]
		public string MethrodName{ get;set; }		
				
		[DataMember]
		public string SysMethrodName{ get;set; }		
				
		[DataMember]
		public string CallUrl{ get;set; }		
				
		[DataMember]
		public string UserName{ get;set; }		
				
		[DataMember]
		public string PassWord{ get;set; }		
				
		[DataMember]
		public string SysName{ get;set; }		
				
		[DataMember]
		public string Param1{ get;set; }		
				
		[DataMember]
		public string Param2{ get;set; }		
				
		[DataMember]
		public string Param3{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
				
		private bool? _ValidFlag = true;
		
		[DataMember]	
		public bool? ValidFlag
		{
			get
			{
				return _ValidFlag;
			}
			set
			{
				_ValidFlag = value;
			}
		}
				
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			InterfaceConfigInfo info = new InterfaceConfigInfo();

			info.InterfaceCode = this.InterfaceCode;
			info.MethrodName = this.MethrodName;
			info.SysMethrodName = this.SysMethrodName;
			info.CallUrl = this.CallUrl;
			info.UserName = this.UserName;
			info.PassWord = this.PassWord;
			info.SysName = this.SysName;
			info.Param1 = this.Param1;
			info.Param2 = this.Param2;
			info.Param3 = this.Param3;
			info.CreateUser = this.CreateUser;
			info.ModifyDate = this.ModifyDate;
			info.Id = this.Id;
			info.CreateDate = this.CreateDate;
			info.Fid = this.Fid;
			info.ModifyUser = this.ModifyUser;
			info.ValidFlag = this.ValidFlag;
			return info;			
		}
		 
		public InterfaceConfigInfo Clone()
		{
			return ((ICloneable) this).Clone() as InterfaceConfigInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// InterfaceConfigInfoCollection对应表[TS_SYS_INTERFACE_CONFIG]
    /// </summary>
	public partial class InterfaceConfigInfoCollection : BusinessObjectCollection<InterfaceConfigInfo>
	{
		public InterfaceConfigInfoCollection():base("TS_SYS_INTERFACE_CONFIG"){}	
	}
}
