#region Declaim
//---------------------------------------------------------------------------
// Name:		UserRoleConditionInfo
// Function: 	Expose data in table TS_SYS_USER_ROLE_CONDITION from database as business object to MES system.
// Tool:		T4
// CreateDate:	2020年3月9日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.SYS 
{   
	/// <summary>
    /// UserRoleConditionInfo对应表[TS_SYS_USER_ROLE_CONDITION]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class UserRoleConditionInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public UserRoleConditionInfo(		 string aConditionName,
				string aTableName,
				string aFieldName,
				string aAttributeName,
				int aDataType,
				int aControlType,
				string aExtendAttribute,
				DateTime aCreateDate,
				long aId,
				bool aValidFlag,
				string aModifyUser,
				Guid aFid,
				string aCreateUser,
				DateTime aModifyDate				
		) : this()
		{
			 
			ConditionName = aConditionName;
		 
			TableName = aTableName;
		 
			FieldName = aFieldName;
		 
			AttributeName = aAttributeName;
		 
			DataType = aDataType;
		 
			ControlType = aControlType;
		 
			ExtendAttribute = aExtendAttribute;
		 
			CreateDate = aCreateDate;
		 
			Id = aId;
		 
			ValidFlag = aValidFlag;
		 
			ModifyUser = aModifyUser;
		 
			Fid = aFid;
		 
			CreateUser = aCreateUser;
		 
			ModifyDate = aModifyDate;
		}
		
		public UserRoleConditionInfo():base("TS_SYS_USER_ROLE_CONDITION")
		{
			List<string> keys = new List<string>();
			         			keys.Add("ID");     _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField CONDITION_NAMEField = new DataSchemaField();
			CONDITION_NAMEField.Name = "CONDITION_NAME";
			CONDITION_NAMEField.Type = typeof(string).ToString();
			CONDITION_NAMEField.Index = 0;
			fields.Add(CONDITION_NAMEField);
			 
			DataSchemaField TABLE_NAMEField = new DataSchemaField();
			TABLE_NAMEField.Name = "TABLE_NAME";
			TABLE_NAMEField.Type = typeof(string).ToString();
			TABLE_NAMEField.Index = 1;
			fields.Add(TABLE_NAMEField);
			 
			DataSchemaField FIELD_NAMEField = new DataSchemaField();
			FIELD_NAMEField.Name = "FIELD_NAME";
			FIELD_NAMEField.Type = typeof(string).ToString();
			FIELD_NAMEField.Index = 2;
			fields.Add(FIELD_NAMEField);
			 
			DataSchemaField ATTRIBUTE_NAMEField = new DataSchemaField();
			ATTRIBUTE_NAMEField.Name = "ATTRIBUTE_NAME";
			ATTRIBUTE_NAMEField.Type = typeof(string).ToString();
			ATTRIBUTE_NAMEField.Index = 3;
			fields.Add(ATTRIBUTE_NAMEField);
			 
			DataSchemaField DATA_TYPEField = new DataSchemaField();
			DATA_TYPEField.Name = "DATA_TYPE";
			DATA_TYPEField.Type = typeof(int).ToString();
			DATA_TYPEField.Index = 4;
			fields.Add(DATA_TYPEField);
			 
			DataSchemaField CONTROL_TYPEField = new DataSchemaField();
			CONTROL_TYPEField.Name = "CONTROL_TYPE";
			CONTROL_TYPEField.Type = typeof(int).ToString();
			CONTROL_TYPEField.Index = 5;
			fields.Add(CONTROL_TYPEField);
			 
			DataSchemaField EXTEND_ATTRIBUTEField = new DataSchemaField();
			EXTEND_ATTRIBUTEField.Name = "EXTEND_ATTRIBUTE";
			EXTEND_ATTRIBUTEField.Type = typeof(string).ToString();
			EXTEND_ATTRIBUTEField.Index = 6;
			fields.Add(EXTEND_ATTRIBUTEField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 7;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 8;
			fields.Add(IDField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 9;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 10;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 11;
			fields.Add(FIDField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 12;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 13;
			fields.Add(MODIFY_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public string ConditionName{ get;set; }		
				
		[DataMember]
		public string TableName{ get;set; }		
				
		[DataMember]
		public string FieldName{ get;set; }		
				
		[DataMember]
		public string AttributeName{ get;set; }		
				
		[DataMember]
		public int? DataType{ get;set; }		
				
		[DataMember]
		public int? ControlType{ get;set; }		
				
		[DataMember]
		public string ExtendAttribute{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			UserRoleConditionInfo info = new UserRoleConditionInfo();

			info.ConditionName = this.ConditionName;
			info.TableName = this.TableName;
			info.FieldName = this.FieldName;
			info.AttributeName = this.AttributeName;
			info.DataType = this.DataType;
			info.ControlType = this.ControlType;
			info.ExtendAttribute = this.ExtendAttribute;
			info.CreateDate = this.CreateDate;
			info.Id = this.Id;
			info.ValidFlag = this.ValidFlag;
			info.ModifyUser = this.ModifyUser;
			info.Fid = this.Fid;
			info.CreateUser = this.CreateUser;
			info.ModifyDate = this.ModifyDate;
			return info;			
		}
		 
		public UserRoleConditionInfo Clone()
		{
			return ((ICloneable) this).Clone() as UserRoleConditionInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// UserRoleConditionInfoCollection对应表[TS_SYS_USER_ROLE_CONDITION]
    /// </summary>
	public partial class UserRoleConditionInfoCollection : BusinessObjectCollection<UserRoleConditionInfo>
	{
		public UserRoleConditionInfoCollection():base("TS_SYS_USER_ROLE_CONDITION"){}	
	}
}
