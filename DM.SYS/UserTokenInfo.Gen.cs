#region Declaim
//---------------------------------------------------------------------------
// Name:		UserTokenInfo
// Function: 	Expose data in table TT_SYS_USER_TOKEN from database as business object to MES system.
// Tool:		T4
// CreateDate:	2020年3月9日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.SYS 
{   
	/// <summary>
    /// UserTokenInfo对应表[TT_SYS_USER_TOKEN]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class UserTokenInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public UserTokenInfo(		 long aUserId,
				DateTime aModifyDate,
				string aCreateUser,
				long aId,
				bool aValidFlag,
				string aModifyUser,
				string aToken,
				DateTime aCreateDate,
				Guid aFid,
				DateTime aDisableDate				
		) : this()
		{
			 
			UserId = aUserId;
		 
			ModifyDate = aModifyDate;
		 
			CreateUser = aCreateUser;
		 
			Id = aId;
		 
			ValidFlag = aValidFlag;
		 
			ModifyUser = aModifyUser;
		 
			Token = aToken;
		 
			CreateDate = aCreateDate;
		 
			Fid = aFid;
		 
			DisableDate = aDisableDate;
		}
		
		public UserTokenInfo():base("TT_SYS_USER_TOKEN")
		{
			List<string> keys = new List<string>();
			    			keys.Add("ID");      _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField USER_IDField = new DataSchemaField();
			USER_IDField.Name = "USER_ID";
			USER_IDField.Type = typeof(long).ToString();
			USER_IDField.Index = 0;
			fields.Add(USER_IDField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 1;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 2;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 3;
			fields.Add(IDField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 4;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 5;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField TOKENField = new DataSchemaField();
			TOKENField.Name = "TOKEN";
			TOKENField.Type = typeof(string).ToString();
			TOKENField.Index = 6;
			fields.Add(TOKENField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 7;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 8;
			fields.Add(FIDField);
			 
			DataSchemaField DISABLE_DATEField = new DataSchemaField();
			DISABLE_DATEField.Name = "DISABLE_DATE";
			DISABLE_DATEField.Type = typeof(DateTime).ToString();
			DISABLE_DATEField.Index = 9;
			fields.Add(DISABLE_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long? UserId{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public string Token{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public DateTime? DisableDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			UserTokenInfo info = new UserTokenInfo();

			info.UserId = this.UserId;
			info.ModifyDate = this.ModifyDate;
			info.CreateUser = this.CreateUser;
			info.Id = this.Id;
			info.ValidFlag = this.ValidFlag;
			info.ModifyUser = this.ModifyUser;
			info.Token = this.Token;
			info.CreateDate = this.CreateDate;
			info.Fid = this.Fid;
			info.DisableDate = this.DisableDate;
			return info;			
		}
		 
		public UserTokenInfo Clone()
		{
			return ((ICloneable) this).Clone() as UserTokenInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// UserTokenInfoCollection对应表[TT_SYS_USER_TOKEN]
    /// </summary>
	public partial class UserTokenInfoCollection : BusinessObjectCollection<UserTokenInfo>
	{
		public UserTokenInfoCollection():base("TT_SYS_USER_TOKEN"){}	
	}
}
