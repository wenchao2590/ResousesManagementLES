#region Declaim
//---------------------------------------------------------------------------
// Name:		CodeItemInfo
// Function: 	Expose data in table TS_SYS_CODE_ITEM from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年3月31日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.SYS 
{   
	/// <summary>
    /// CodeItemInfo对应表[TS_SYS_CODE_ITEM]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class CodeItemInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public CodeItemInfo(		 long aId,
				Guid aFid,
				Guid aCodeFid,
				int aItemValue,
				string aItemName,
				string aItemNameEn,
				Guid aParentFid,
				int aDisplayOrder,
				string aComments,
				bool aValidFlag,
				string aCreateUser,
				DateTime aCreateDate,
				string aModifyUser,
				DateTime aModifyDate				
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			CodeFid = aCodeFid;
		 
			ItemValue = aItemValue;
		 
			ItemName = aItemName;
		 
			ItemNameEn = aItemNameEn;
		 
			ParentFid = aParentFid;
		 
			DisplayOrder = aDisplayOrder;
		 
			Comments = aComments;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		}
		
		public CodeItemInfo():base("TS_SYS_CODE_ITEM")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");             _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField CODE_FIDField = new DataSchemaField();
			CODE_FIDField.Name = "CODE_FID";
			CODE_FIDField.Type = typeof(Guid).ToString();
			CODE_FIDField.Index = 2;
			fields.Add(CODE_FIDField);
			 
			DataSchemaField ITEM_VALUEField = new DataSchemaField();
			ITEM_VALUEField.Name = "ITEM_VALUE";
			ITEM_VALUEField.Type = typeof(int).ToString();
			ITEM_VALUEField.Index = 3;
			fields.Add(ITEM_VALUEField);
			 
			DataSchemaField ITEM_NAMEField = new DataSchemaField();
			ITEM_NAMEField.Name = "ITEM_NAME";
			ITEM_NAMEField.Type = typeof(string).ToString();
			ITEM_NAMEField.Index = 4;
			fields.Add(ITEM_NAMEField);
			 
			DataSchemaField ITEM_NAME_ENField = new DataSchemaField();
			ITEM_NAME_ENField.Name = "ITEM_NAME_EN";
			ITEM_NAME_ENField.Type = typeof(string).ToString();
			ITEM_NAME_ENField.Index = 5;
			fields.Add(ITEM_NAME_ENField);
			 
			DataSchemaField PARENT_FIDField = new DataSchemaField();
			PARENT_FIDField.Name = "PARENT_FID";
			PARENT_FIDField.Type = typeof(Guid).ToString();
			PARENT_FIDField.Index = 6;
			fields.Add(PARENT_FIDField);
			 
			DataSchemaField DISPLAY_ORDERField = new DataSchemaField();
			DISPLAY_ORDERField.Name = "DISPLAY_ORDER";
			DISPLAY_ORDERField.Type = typeof(int).ToString();
			DISPLAY_ORDERField.Index = 7;
			fields.Add(DISPLAY_ORDERField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 8;
			fields.Add(COMMENTSField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 9;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 10;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 11;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 12;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 13;
			fields.Add(MODIFY_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public Guid? CodeFid{ get;set; }		
				
		[DataMember]
		public int? ItemValue{ get;set; }		
				
		[DataMember]
		public string ItemName{ get;set; }		
				
		[DataMember]
		public string ItemNameEn{ get;set; }		
				
		[DataMember]
		public Guid? ParentFid{ get;set; }		
				
		[DataMember]
		public int? DisplayOrder{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			CodeItemInfo info = new CodeItemInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.CodeFid = this.CodeFid;
			info.ItemValue = this.ItemValue;
			info.ItemName = this.ItemName;
			info.ItemNameEn = this.ItemNameEn;
			info.ParentFid = this.ParentFid;
			info.DisplayOrder = this.DisplayOrder;
			info.Comments = this.Comments;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			return info;			
		}
		 
		public CodeItemInfo Clone()
		{
			return ((ICloneable) this).Clone() as CodeItemInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// CodeItemInfoCollection对应表[TS_SYS_CODE_ITEM]
    /// </summary>
	public partial class CodeItemInfoCollection : BusinessObjectCollection<CodeItemInfo>
	{
		public CodeItemInfoCollection():base("TS_SYS_CODE_ITEM"){}	
	}
}
