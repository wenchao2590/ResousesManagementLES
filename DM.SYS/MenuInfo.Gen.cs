#region Declaim
//---------------------------------------------------------------------------
// Name:		MenuInfo
// Function: 	Expose data in table TS_SYS_MENU from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年4月24日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.SYS 
{   
	/// <summary>
    /// MenuInfo对应表[TS_SYS_MENU]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class MenuInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public MenuInfo(		 long aId,
				Guid aFid,
				string aMenuName,
				Guid aParentMenuFid,
				int aDisplayOrder,
				string aImageUrl,
				string aLinkUrl,
				string aComments,
				int aMenuType,
				bool aNeedAuth,
				string aCreateUser,
				DateTime aCreateDate,
				string aModifyUser,
				DateTime aModifyDate,
				bool aValidFlag,
				string aMenuNameCn,
				string aFavoritePic,
				int aEditFormWidth,
				int aEditFormHeight				
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			MenuName = aMenuName;
		 
			ParentMenuFid = aParentMenuFid;
		 
			DisplayOrder = aDisplayOrder;
		 
			ImageUrl = aImageUrl;
		 
			LinkUrl = aLinkUrl;
		 
			Comments = aComments;
		 
			MenuType = aMenuType;
		 
			NeedAuth = aNeedAuth;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		 
			ValidFlag = aValidFlag;
		 
			MenuNameCn = aMenuNameCn;
		 
			FavoritePic = aFavoritePic;
		 
			EditFormWidth = aEditFormWidth;
		 
			EditFormHeight = aEditFormHeight;
		}
		
		public MenuInfo():base("TS_SYS_MENU")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                  _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField MENU_NAMEField = new DataSchemaField();
			MENU_NAMEField.Name = "MENU_NAME";
			MENU_NAMEField.Type = typeof(string).ToString();
			MENU_NAMEField.Index = 2;
			fields.Add(MENU_NAMEField);
			 
			DataSchemaField PARENT_MENU_FIDField = new DataSchemaField();
			PARENT_MENU_FIDField.Name = "PARENT_MENU_FID";
			PARENT_MENU_FIDField.Type = typeof(Guid).ToString();
			PARENT_MENU_FIDField.Index = 3;
			fields.Add(PARENT_MENU_FIDField);
			 
			DataSchemaField DISPLAY_ORDERField = new DataSchemaField();
			DISPLAY_ORDERField.Name = "DISPLAY_ORDER";
			DISPLAY_ORDERField.Type = typeof(int).ToString();
			DISPLAY_ORDERField.Index = 4;
			fields.Add(DISPLAY_ORDERField);
			 
			DataSchemaField IMAGE_URLField = new DataSchemaField();
			IMAGE_URLField.Name = "IMAGE_URL";
			IMAGE_URLField.Type = typeof(string).ToString();
			IMAGE_URLField.Index = 5;
			fields.Add(IMAGE_URLField);
			 
			DataSchemaField LINK_URLField = new DataSchemaField();
			LINK_URLField.Name = "LINK_URL";
			LINK_URLField.Type = typeof(string).ToString();
			LINK_URLField.Index = 6;
			fields.Add(LINK_URLField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 7;
			fields.Add(COMMENTSField);
			 
			DataSchemaField MENU_TYPEField = new DataSchemaField();
			MENU_TYPEField.Name = "MENU_TYPE";
			MENU_TYPEField.Type = typeof(int).ToString();
			MENU_TYPEField.Index = 8;
			fields.Add(MENU_TYPEField);
			 
			DataSchemaField NEED_AUTHField = new DataSchemaField();
			NEED_AUTHField.Name = "NEED_AUTH";
			NEED_AUTHField.Type = typeof(bool).ToString();
			NEED_AUTHField.Index = 9;
			fields.Add(NEED_AUTHField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 10;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 11;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 12;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 13;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 14;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField MENU_NAME_CNField = new DataSchemaField();
			MENU_NAME_CNField.Name = "MENU_NAME_CN";
			MENU_NAME_CNField.Type = typeof(string).ToString();
			MENU_NAME_CNField.Index = 15;
			fields.Add(MENU_NAME_CNField);
			 
			DataSchemaField FAVORITE_PICField = new DataSchemaField();
			FAVORITE_PICField.Name = "FAVORITE_PIC";
			FAVORITE_PICField.Type = typeof(string).ToString();
			FAVORITE_PICField.Index = 16;
			fields.Add(FAVORITE_PICField);
			 
			DataSchemaField EDIT_FORM_WIDTHField = new DataSchemaField();
			EDIT_FORM_WIDTHField.Name = "EDIT_FORM_WIDTH";
			EDIT_FORM_WIDTHField.Type = typeof(int).ToString();
			EDIT_FORM_WIDTHField.Index = 17;
			fields.Add(EDIT_FORM_WIDTHField);
			 
			DataSchemaField EDIT_FORM_HEIGHTField = new DataSchemaField();
			EDIT_FORM_HEIGHTField.Name = "EDIT_FORM_HEIGHT";
			EDIT_FORM_HEIGHTField.Type = typeof(int).ToString();
			EDIT_FORM_HEIGHTField.Index = 18;
			fields.Add(EDIT_FORM_HEIGHTField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public string MenuName{ get;set; }		
				
		[DataMember]
		public Guid? ParentMenuFid{ get;set; }		
				
		[DataMember]
		public int? DisplayOrder{ get;set; }		
				
		[DataMember]
		public string ImageUrl{ get;set; }		
				
		[DataMember]
		public string LinkUrl{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public int? MenuType{ get;set; }		
				
		[DataMember]
		public bool? NeedAuth{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public string MenuNameCn{ get;set; }		
				
		[DataMember]
		public string FavoritePic{ get;set; }		
				
		[DataMember]
		public int? EditFormWidth{ get;set; }		
				
		[DataMember]
		public int? EditFormHeight{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			MenuInfo info = new MenuInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.MenuName = this.MenuName;
			info.ParentMenuFid = this.ParentMenuFid;
			info.DisplayOrder = this.DisplayOrder;
			info.ImageUrl = this.ImageUrl;
			info.LinkUrl = this.LinkUrl;
			info.Comments = this.Comments;
			info.MenuType = this.MenuType;
			info.NeedAuth = this.NeedAuth;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			info.ValidFlag = this.ValidFlag;
			info.MenuNameCn = this.MenuNameCn;
			info.FavoritePic = this.FavoritePic;
			info.EditFormWidth = this.EditFormWidth;
			info.EditFormHeight = this.EditFormHeight;
			return info;			
		}
		 
		public MenuInfo Clone()
		{
			return ((ICloneable) this).Clone() as MenuInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// MenuInfoCollection对应表[TS_SYS_MENU]
    /// </summary>
	public partial class MenuInfoCollection : BusinessObjectCollection<MenuInfo>
	{
		public MenuInfoCollection():base("TS_SYS_MENU"){}	
	}
}
