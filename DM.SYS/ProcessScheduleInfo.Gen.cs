#region Declaim
//---------------------------------------------------------------------------
// Name:		ProcessScheduleInfo
// Function: 	Expose data in table TS_SYS_PROCESS_SCHEDULE from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年4月11日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.SYS 
{   
	/// <summary>
    /// ProcessScheduleInfo对应表[TS_SYS_PROCESS_SCHEDULE]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class ProcessScheduleInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public ProcessScheduleInfo(		 long aId,
				Guid aFid,
				string aProcessCode,
				string aProcessName,
				DateTime aLastRunBeginTime,
				DateTime aLastRunEndTime,
				int aLastRunStatus,
				int aRunInterval,
				int aCheckInterval,
				string aSystemParameter1,
				string aSystemParameter2,
				string aSystemParameter3,
				string aSystemParameter4,
				string aSystemParameter5,
				bool aValidFlag,
				DateTime aCreateDate,
				string aCreateUser,
				DateTime aModifyDate,
				string aModifyUser				
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			ProcessCode = aProcessCode;
		 
			ProcessName = aProcessName;
		 
			LastRunBeginTime = aLastRunBeginTime;
		 
			LastRunEndTime = aLastRunEndTime;
		 
			LastRunStatus = aLastRunStatus;
		 
			RunInterval = aRunInterval;
		 
			CheckInterval = aCheckInterval;
		 
			SystemParameter1 = aSystemParameter1;
		 
			SystemParameter2 = aSystemParameter2;
		 
			SystemParameter3 = aSystemParameter3;
		 
			SystemParameter4 = aSystemParameter4;
		 
			SystemParameter5 = aSystemParameter5;
		 
			ValidFlag = aValidFlag;
		 
			CreateDate = aCreateDate;
		 
			CreateUser = aCreateUser;
		 
			ModifyDate = aModifyDate;
		 
			ModifyUser = aModifyUser;
		}
		
		public ProcessScheduleInfo():base("TS_SYS_PROCESS_SCHEDULE")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                  _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField PROCESS_CODEField = new DataSchemaField();
			PROCESS_CODEField.Name = "PROCESS_CODE";
			PROCESS_CODEField.Type = typeof(string).ToString();
			PROCESS_CODEField.Index = 2;
			fields.Add(PROCESS_CODEField);
			 
			DataSchemaField PROCESS_NAMEField = new DataSchemaField();
			PROCESS_NAMEField.Name = "PROCESS_NAME";
			PROCESS_NAMEField.Type = typeof(string).ToString();
			PROCESS_NAMEField.Index = 3;
			fields.Add(PROCESS_NAMEField);
			 
			DataSchemaField LAST_RUN_BEGIN_TIMEField = new DataSchemaField();
			LAST_RUN_BEGIN_TIMEField.Name = "LAST_RUN_BEGIN_TIME";
			LAST_RUN_BEGIN_TIMEField.Type = typeof(DateTime).ToString();
			LAST_RUN_BEGIN_TIMEField.Index = 4;
			fields.Add(LAST_RUN_BEGIN_TIMEField);
			 
			DataSchemaField LAST_RUN_END_TIMEField = new DataSchemaField();
			LAST_RUN_END_TIMEField.Name = "LAST_RUN_END_TIME";
			LAST_RUN_END_TIMEField.Type = typeof(DateTime).ToString();
			LAST_RUN_END_TIMEField.Index = 5;
			fields.Add(LAST_RUN_END_TIMEField);
			 
			DataSchemaField LAST_RUN_STATUSField = new DataSchemaField();
			LAST_RUN_STATUSField.Name = "LAST_RUN_STATUS";
			LAST_RUN_STATUSField.Type = typeof(int).ToString();
			LAST_RUN_STATUSField.Index = 6;
			fields.Add(LAST_RUN_STATUSField);
			 
			DataSchemaField RUN_INTERVALField = new DataSchemaField();
			RUN_INTERVALField.Name = "RUN_INTERVAL";
			RUN_INTERVALField.Type = typeof(int).ToString();
			RUN_INTERVALField.Index = 7;
			fields.Add(RUN_INTERVALField);
			 
			DataSchemaField CHECK_INTERVALField = new DataSchemaField();
			CHECK_INTERVALField.Name = "CHECK_INTERVAL";
			CHECK_INTERVALField.Type = typeof(int).ToString();
			CHECK_INTERVALField.Index = 8;
			fields.Add(CHECK_INTERVALField);
			 
			DataSchemaField SYSTEM_PARAMETER1Field = new DataSchemaField();
			SYSTEM_PARAMETER1Field.Name = "SYSTEM_PARAMETER1";
			SYSTEM_PARAMETER1Field.Type = typeof(string).ToString();
			SYSTEM_PARAMETER1Field.Index = 9;
			fields.Add(SYSTEM_PARAMETER1Field);
			 
			DataSchemaField SYSTEM_PARAMETER2Field = new DataSchemaField();
			SYSTEM_PARAMETER2Field.Name = "SYSTEM_PARAMETER2";
			SYSTEM_PARAMETER2Field.Type = typeof(string).ToString();
			SYSTEM_PARAMETER2Field.Index = 10;
			fields.Add(SYSTEM_PARAMETER2Field);
			 
			DataSchemaField SYSTEM_PARAMETER3Field = new DataSchemaField();
			SYSTEM_PARAMETER3Field.Name = "SYSTEM_PARAMETER3";
			SYSTEM_PARAMETER3Field.Type = typeof(string).ToString();
			SYSTEM_PARAMETER3Field.Index = 11;
			fields.Add(SYSTEM_PARAMETER3Field);
			 
			DataSchemaField SYSTEM_PARAMETER4Field = new DataSchemaField();
			SYSTEM_PARAMETER4Field.Name = "SYSTEM_PARAMETER4";
			SYSTEM_PARAMETER4Field.Type = typeof(string).ToString();
			SYSTEM_PARAMETER4Field.Index = 12;
			fields.Add(SYSTEM_PARAMETER4Field);
			 
			DataSchemaField SYSTEM_PARAMETER5Field = new DataSchemaField();
			SYSTEM_PARAMETER5Field.Name = "SYSTEM_PARAMETER5";
			SYSTEM_PARAMETER5Field.Type = typeof(string).ToString();
			SYSTEM_PARAMETER5Field.Index = 13;
			fields.Add(SYSTEM_PARAMETER5Field);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 14;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 15;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 16;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 17;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 18;
			fields.Add(MODIFY_USERField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public string ProcessCode{ get;set; }		
				
		[DataMember]
		public string ProcessName{ get;set; }		
				
		[DataMember]
		public DateTime? LastRunBeginTime{ get;set; }		
				
		[DataMember]
		public DateTime? LastRunEndTime{ get;set; }		
				
		[DataMember]
		public int? LastRunStatus{ get;set; }		
				
		[DataMember]
		public int? RunInterval{ get;set; }		
				
		[DataMember]
		public int? CheckInterval{ get;set; }		
				
		[DataMember]
		public string SystemParameter1{ get;set; }		
				
		[DataMember]
		public string SystemParameter2{ get;set; }		
				
		[DataMember]
		public string SystemParameter3{ get;set; }		
				
		[DataMember]
		public string SystemParameter4{ get;set; }		
				
		[DataMember]
		public string SystemParameter5{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			ProcessScheduleInfo info = new ProcessScheduleInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.ProcessCode = this.ProcessCode;
			info.ProcessName = this.ProcessName;
			info.LastRunBeginTime = this.LastRunBeginTime;
			info.LastRunEndTime = this.LastRunEndTime;
			info.LastRunStatus = this.LastRunStatus;
			info.RunInterval = this.RunInterval;
			info.CheckInterval = this.CheckInterval;
			info.SystemParameter1 = this.SystemParameter1;
			info.SystemParameter2 = this.SystemParameter2;
			info.SystemParameter3 = this.SystemParameter3;
			info.SystemParameter4 = this.SystemParameter4;
			info.SystemParameter5 = this.SystemParameter5;
			info.ValidFlag = this.ValidFlag;
			info.CreateDate = this.CreateDate;
			info.CreateUser = this.CreateUser;
			info.ModifyDate = this.ModifyDate;
			info.ModifyUser = this.ModifyUser;
			return info;			
		}
		 
		public ProcessScheduleInfo Clone()
		{
			return ((ICloneable) this).Clone() as ProcessScheduleInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// ProcessScheduleInfoCollection对应表[TS_SYS_PROCESS_SCHEDULE]
    /// </summary>
	public partial class ProcessScheduleInfoCollection : BusinessObjectCollection<ProcessScheduleInfo>
	{
		public ProcessScheduleInfoCollection():base("TS_SYS_PROCESS_SCHEDULE"){}	
	}
}
