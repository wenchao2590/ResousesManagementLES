#region Declaim
//---------------------------------------------------------------------------
// Name:		EntityFieldInfo
// Function: 	Expose data in table TS_SYS_ENTITY_FIELD from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月12日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.SYS 
{   
	/// <summary>
    /// EntityFieldInfo对应表[TS_SYS_ENTITY_FIELD]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class EntityFieldInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public EntityFieldInfo(		 long aId,
				Guid aFid,
				Guid aEntityFid,
				string aFieldName,
				string aTableFieldName,
				string aDisplayNameCn,
				string aDisplayNameEn,
				int aDisplayOrder,
				int aDataType,
				int aControlType,
				int aDataLength,
				int aPrecision,
				string aDefaultValue,
				bool aNullenable,
				string aRegex,
				string aErrorMsg,
				int aMinValue,
				int aMaxValue,
				bool aEditable,
				string aEditDisplayWidth,
				bool aListable,
				string aListDisplayWidth,
				string aExtend1,
				string aExtend2,
				string aExtend3,
				int aEditReadonly,
				string aTabTitleCode,
				bool aSortable,
				bool aExportExcelFlag,
				int aExportExcelOrder,
				string aTooltipHelperCn,
				string aTooltipHelperEn,
				bool aValidFlag,
				string aCreateUser,
				DateTime aCreateDate,
				string aModifyUser,
				DateTime aModifyDate,
				bool aStatisticsFlag,
				int aStatisticsType,
				string aStatisticsTitle,
				int aListDisplayOrder,
				bool aListEditorFlag,
				int aListEditorControlType				
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			EntityFid = aEntityFid;
		 
			FieldName = aFieldName;
		 
			TableFieldName = aTableFieldName;
		 
			DisplayNameCn = aDisplayNameCn;
		 
			DisplayNameEn = aDisplayNameEn;
		 
			DisplayOrder = aDisplayOrder;
		 
			DataType = aDataType;
		 
			ControlType = aControlType;
		 
			DataLength = aDataLength;
		 
			Precision = aPrecision;
		 
			DefaultValue = aDefaultValue;
		 
			Nullenable = aNullenable;
		 
			Regex = aRegex;
		 
			ErrorMsg = aErrorMsg;
		 
			MinValue = aMinValue;
		 
			MaxValue = aMaxValue;
		 
			Editable = aEditable;
		 
			EditDisplayWidth = aEditDisplayWidth;
		 
			Listable = aListable;
		 
			ListDisplayWidth = aListDisplayWidth;
		 
			Extend1 = aExtend1;
		 
			Extend2 = aExtend2;
		 
			Extend3 = aExtend3;
		 
			EditReadonly = aEditReadonly;
		 
			TabTitleCode = aTabTitleCode;
		 
			Sortable = aSortable;
		 
			ExportExcelFlag = aExportExcelFlag;
		 
			ExportExcelOrder = aExportExcelOrder;
		 
			TooltipHelperCn = aTooltipHelperCn;
		 
			TooltipHelperEn = aTooltipHelperEn;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		 
			StatisticsFlag = aStatisticsFlag;
		 
			StatisticsType = aStatisticsType;
		 
			StatisticsTitle = aStatisticsTitle;
		 
			ListDisplayOrder = aListDisplayOrder;
		 
			ListEditorFlag = aListEditorFlag;
		 
			ListEditorControlType = aListEditorControlType;
		}
		
		public EntityFieldInfo():base("TS_SYS_ENTITY_FIELD")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                                          _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField ENTITY_FIDField = new DataSchemaField();
			ENTITY_FIDField.Name = "ENTITY_FID";
			ENTITY_FIDField.Type = typeof(Guid).ToString();
			ENTITY_FIDField.Index = 2;
			fields.Add(ENTITY_FIDField);
			 
			DataSchemaField FIELD_NAMEField = new DataSchemaField();
			FIELD_NAMEField.Name = "FIELD_NAME";
			FIELD_NAMEField.Type = typeof(string).ToString();
			FIELD_NAMEField.Index = 3;
			fields.Add(FIELD_NAMEField);
			 
			DataSchemaField TABLE_FIELD_NAMEField = new DataSchemaField();
			TABLE_FIELD_NAMEField.Name = "TABLE_FIELD_NAME";
			TABLE_FIELD_NAMEField.Type = typeof(string).ToString();
			TABLE_FIELD_NAMEField.Index = 4;
			fields.Add(TABLE_FIELD_NAMEField);
			 
			DataSchemaField DISPLAY_NAME_CNField = new DataSchemaField();
			DISPLAY_NAME_CNField.Name = "DISPLAY_NAME_CN";
			DISPLAY_NAME_CNField.Type = typeof(string).ToString();
			DISPLAY_NAME_CNField.Index = 5;
			fields.Add(DISPLAY_NAME_CNField);
			 
			DataSchemaField DISPLAY_NAME_ENField = new DataSchemaField();
			DISPLAY_NAME_ENField.Name = "DISPLAY_NAME_EN";
			DISPLAY_NAME_ENField.Type = typeof(string).ToString();
			DISPLAY_NAME_ENField.Index = 6;
			fields.Add(DISPLAY_NAME_ENField);
			 
			DataSchemaField DISPLAY_ORDERField = new DataSchemaField();
			DISPLAY_ORDERField.Name = "DISPLAY_ORDER";
			DISPLAY_ORDERField.Type = typeof(int).ToString();
			DISPLAY_ORDERField.Index = 7;
			fields.Add(DISPLAY_ORDERField);
			 
			DataSchemaField DATA_TYPEField = new DataSchemaField();
			DATA_TYPEField.Name = "DATA_TYPE";
			DATA_TYPEField.Type = typeof(int).ToString();
			DATA_TYPEField.Index = 8;
			fields.Add(DATA_TYPEField);
			 
			DataSchemaField CONTROL_TYPEField = new DataSchemaField();
			CONTROL_TYPEField.Name = "CONTROL_TYPE";
			CONTROL_TYPEField.Type = typeof(int).ToString();
			CONTROL_TYPEField.Index = 9;
			fields.Add(CONTROL_TYPEField);
			 
			DataSchemaField DATA_LENGTHField = new DataSchemaField();
			DATA_LENGTHField.Name = "DATA_LENGTH";
			DATA_LENGTHField.Type = typeof(int).ToString();
			DATA_LENGTHField.Index = 10;
			fields.Add(DATA_LENGTHField);
			 
			DataSchemaField PRECISIONField = new DataSchemaField();
			PRECISIONField.Name = "PRECISION";
			PRECISIONField.Type = typeof(int).ToString();
			PRECISIONField.Index = 11;
			fields.Add(PRECISIONField);
			 
			DataSchemaField DEFAULT_VALUEField = new DataSchemaField();
			DEFAULT_VALUEField.Name = "DEFAULT_VALUE";
			DEFAULT_VALUEField.Type = typeof(string).ToString();
			DEFAULT_VALUEField.Index = 12;
			fields.Add(DEFAULT_VALUEField);
			 
			DataSchemaField NULLENABLEField = new DataSchemaField();
			NULLENABLEField.Name = "NULLENABLE";
			NULLENABLEField.Type = typeof(bool).ToString();
			NULLENABLEField.Index = 13;
			fields.Add(NULLENABLEField);
			 
			DataSchemaField REGEXField = new DataSchemaField();
			REGEXField.Name = "REGEX";
			REGEXField.Type = typeof(string).ToString();
			REGEXField.Index = 14;
			fields.Add(REGEXField);
			 
			DataSchemaField ERROR_MSGField = new DataSchemaField();
			ERROR_MSGField.Name = "ERROR_MSG";
			ERROR_MSGField.Type = typeof(string).ToString();
			ERROR_MSGField.Index = 15;
			fields.Add(ERROR_MSGField);
			 
			DataSchemaField MIN_VALUEField = new DataSchemaField();
			MIN_VALUEField.Name = "MIN_VALUE";
			MIN_VALUEField.Type = typeof(int).ToString();
			MIN_VALUEField.Index = 16;
			fields.Add(MIN_VALUEField);
			 
			DataSchemaField MAX_VALUEField = new DataSchemaField();
			MAX_VALUEField.Name = "MAX_VALUE";
			MAX_VALUEField.Type = typeof(int).ToString();
			MAX_VALUEField.Index = 17;
			fields.Add(MAX_VALUEField);
			 
			DataSchemaField EDITABLEField = new DataSchemaField();
			EDITABLEField.Name = "EDITABLE";
			EDITABLEField.Type = typeof(bool).ToString();
			EDITABLEField.Index = 18;
			fields.Add(EDITABLEField);
			 
			DataSchemaField EDIT_DISPLAY_WIDTHField = new DataSchemaField();
			EDIT_DISPLAY_WIDTHField.Name = "EDIT_DISPLAY_WIDTH";
			EDIT_DISPLAY_WIDTHField.Type = typeof(string).ToString();
			EDIT_DISPLAY_WIDTHField.Index = 19;
			fields.Add(EDIT_DISPLAY_WIDTHField);
			 
			DataSchemaField LISTABLEField = new DataSchemaField();
			LISTABLEField.Name = "LISTABLE";
			LISTABLEField.Type = typeof(bool).ToString();
			LISTABLEField.Index = 20;
			fields.Add(LISTABLEField);
			 
			DataSchemaField LIST_DISPLAY_WIDTHField = new DataSchemaField();
			LIST_DISPLAY_WIDTHField.Name = "LIST_DISPLAY_WIDTH";
			LIST_DISPLAY_WIDTHField.Type = typeof(string).ToString();
			LIST_DISPLAY_WIDTHField.Index = 21;
			fields.Add(LIST_DISPLAY_WIDTHField);
			 
			DataSchemaField EXTEND1Field = new DataSchemaField();
			EXTEND1Field.Name = "EXTEND1";
			EXTEND1Field.Type = typeof(string).ToString();
			EXTEND1Field.Index = 22;
			fields.Add(EXTEND1Field);
			 
			DataSchemaField EXTEND2Field = new DataSchemaField();
			EXTEND2Field.Name = "EXTEND2";
			EXTEND2Field.Type = typeof(string).ToString();
			EXTEND2Field.Index = 23;
			fields.Add(EXTEND2Field);
			 
			DataSchemaField EXTEND3Field = new DataSchemaField();
			EXTEND3Field.Name = "EXTEND3";
			EXTEND3Field.Type = typeof(string).ToString();
			EXTEND3Field.Index = 24;
			fields.Add(EXTEND3Field);
			 
			DataSchemaField EDIT_READONLYField = new DataSchemaField();
			EDIT_READONLYField.Name = "EDIT_READONLY";
			EDIT_READONLYField.Type = typeof(int).ToString();
			EDIT_READONLYField.Index = 25;
			fields.Add(EDIT_READONLYField);
			 
			DataSchemaField TAB_TITLE_CODEField = new DataSchemaField();
			TAB_TITLE_CODEField.Name = "TAB_TITLE_CODE";
			TAB_TITLE_CODEField.Type = typeof(string).ToString();
			TAB_TITLE_CODEField.Index = 26;
			fields.Add(TAB_TITLE_CODEField);
			 
			DataSchemaField SORTABLEField = new DataSchemaField();
			SORTABLEField.Name = "SORTABLE";
			SORTABLEField.Type = typeof(bool).ToString();
			SORTABLEField.Index = 27;
			fields.Add(SORTABLEField);
			 
			DataSchemaField EXPORT_EXCEL_FLAGField = new DataSchemaField();
			EXPORT_EXCEL_FLAGField.Name = "EXPORT_EXCEL_FLAG";
			EXPORT_EXCEL_FLAGField.Type = typeof(bool).ToString();
			EXPORT_EXCEL_FLAGField.Index = 28;
			fields.Add(EXPORT_EXCEL_FLAGField);
			 
			DataSchemaField EXPORT_EXCEL_ORDERField = new DataSchemaField();
			EXPORT_EXCEL_ORDERField.Name = "EXPORT_EXCEL_ORDER";
			EXPORT_EXCEL_ORDERField.Type = typeof(int).ToString();
			EXPORT_EXCEL_ORDERField.Index = 29;
			fields.Add(EXPORT_EXCEL_ORDERField);
			 
			DataSchemaField TOOLTIP_HELPER_CNField = new DataSchemaField();
			TOOLTIP_HELPER_CNField.Name = "TOOLTIP_HELPER_CN";
			TOOLTIP_HELPER_CNField.Type = typeof(string).ToString();
			TOOLTIP_HELPER_CNField.Index = 30;
			fields.Add(TOOLTIP_HELPER_CNField);
			 
			DataSchemaField TOOLTIP_HELPER_ENField = new DataSchemaField();
			TOOLTIP_HELPER_ENField.Name = "TOOLTIP_HELPER_EN";
			TOOLTIP_HELPER_ENField.Type = typeof(string).ToString();
			TOOLTIP_HELPER_ENField.Index = 31;
			fields.Add(TOOLTIP_HELPER_ENField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 32;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 33;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 34;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 35;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 36;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField STATISTICS_FLAGField = new DataSchemaField();
			STATISTICS_FLAGField.Name = "STATISTICS_FLAG";
			STATISTICS_FLAGField.Type = typeof(bool).ToString();
			STATISTICS_FLAGField.Index = 37;
			fields.Add(STATISTICS_FLAGField);
			 
			DataSchemaField STATISTICS_TYPEField = new DataSchemaField();
			STATISTICS_TYPEField.Name = "STATISTICS_TYPE";
			STATISTICS_TYPEField.Type = typeof(int).ToString();
			STATISTICS_TYPEField.Index = 38;
			fields.Add(STATISTICS_TYPEField);
			 
			DataSchemaField STATISTICS_TITLEField = new DataSchemaField();
			STATISTICS_TITLEField.Name = "STATISTICS_TITLE";
			STATISTICS_TITLEField.Type = typeof(string).ToString();
			STATISTICS_TITLEField.Index = 39;
			fields.Add(STATISTICS_TITLEField);
			 
			DataSchemaField LIST_DISPLAY_ORDERField = new DataSchemaField();
			LIST_DISPLAY_ORDERField.Name = "LIST_DISPLAY_ORDER";
			LIST_DISPLAY_ORDERField.Type = typeof(int).ToString();
			LIST_DISPLAY_ORDERField.Index = 40;
			fields.Add(LIST_DISPLAY_ORDERField);
			 
			DataSchemaField LIST_EDITOR_FLAGField = new DataSchemaField();
			LIST_EDITOR_FLAGField.Name = "LIST_EDITOR_FLAG";
			LIST_EDITOR_FLAGField.Type = typeof(bool).ToString();
			LIST_EDITOR_FLAGField.Index = 41;
			fields.Add(LIST_EDITOR_FLAGField);
			 
			DataSchemaField LIST_EDITOR_CONTROL_TYPEField = new DataSchemaField();
			LIST_EDITOR_CONTROL_TYPEField.Name = "LIST_EDITOR_CONTROL_TYPE";
			LIST_EDITOR_CONTROL_TYPEField.Type = typeof(int).ToString();
			LIST_EDITOR_CONTROL_TYPEField.Index = 42;
			fields.Add(LIST_EDITOR_CONTROL_TYPEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public Guid? EntityFid{ get;set; }		
				
		[DataMember]
		public string FieldName{ get;set; }		
				
		[DataMember]
		public string TableFieldName{ get;set; }		
				
		[DataMember]
		public string DisplayNameCn{ get;set; }		
				
		[DataMember]
		public string DisplayNameEn{ get;set; }		
				
		[DataMember]
		public int? DisplayOrder{ get;set; }		
				
		[DataMember]
		public int? DataType{ get;set; }		
				
		[DataMember]
		public int? ControlType{ get;set; }		
				
		[DataMember]
		public int? DataLength{ get;set; }		
				
		[DataMember]
		public int? Precision{ get;set; }		
				
		[DataMember]
		public string DefaultValue{ get;set; }		
				
		[DataMember]
		public bool? Nullenable{ get;set; }		
				
		[DataMember]
		public string Regex{ get;set; }		
				
		[DataMember]
		public string ErrorMsg{ get;set; }		
				
		[DataMember]
		public int? MinValue{ get;set; }		
				
		[DataMember]
		public int? MaxValue{ get;set; }		
				
		[DataMember]
		public bool? Editable{ get;set; }		
				
		[DataMember]
		public string EditDisplayWidth{ get;set; }		
				
		[DataMember]
		public bool? Listable{ get;set; }		
				
		[DataMember]
		public string ListDisplayWidth{ get;set; }		
				
		[DataMember]
		public string Extend1{ get;set; }		
				
		[DataMember]
		public string Extend2{ get;set; }		
				
		[DataMember]
		public string Extend3{ get;set; }		
				
		[DataMember]
		public int? EditReadonly{ get;set; }		
				
		[DataMember]
		public string TabTitleCode{ get;set; }		
				
		[DataMember]
		public bool? Sortable{ get;set; }		
				
		[DataMember]
		public bool? ExportExcelFlag{ get;set; }		
				
		[DataMember]
		public int? ExportExcelOrder{ get;set; }		
				
		[DataMember]
		public string TooltipHelperCn{ get;set; }		
				
		[DataMember]
		public string TooltipHelperEn{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public bool? StatisticsFlag{ get;set; }		
				
		[DataMember]
		public int? StatisticsType{ get;set; }		
				
		[DataMember]
		public string StatisticsTitle{ get;set; }		
				
		[DataMember]
		public int? ListDisplayOrder{ get;set; }		
				
		[DataMember]
		public bool? ListEditorFlag{ get;set; }		
				
		[DataMember]
		public int? ListEditorControlType{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			EntityFieldInfo info = new EntityFieldInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.EntityFid = this.EntityFid;
			info.FieldName = this.FieldName;
			info.TableFieldName = this.TableFieldName;
			info.DisplayNameCn = this.DisplayNameCn;
			info.DisplayNameEn = this.DisplayNameEn;
			info.DisplayOrder = this.DisplayOrder;
			info.DataType = this.DataType;
			info.ControlType = this.ControlType;
			info.DataLength = this.DataLength;
			info.Precision = this.Precision;
			info.DefaultValue = this.DefaultValue;
			info.Nullenable = this.Nullenable;
			info.Regex = this.Regex;
			info.ErrorMsg = this.ErrorMsg;
			info.MinValue = this.MinValue;
			info.MaxValue = this.MaxValue;
			info.Editable = this.Editable;
			info.EditDisplayWidth = this.EditDisplayWidth;
			info.Listable = this.Listable;
			info.ListDisplayWidth = this.ListDisplayWidth;
			info.Extend1 = this.Extend1;
			info.Extend2 = this.Extend2;
			info.Extend3 = this.Extend3;
			info.EditReadonly = this.EditReadonly;
			info.TabTitleCode = this.TabTitleCode;
			info.Sortable = this.Sortable;
			info.ExportExcelFlag = this.ExportExcelFlag;
			info.ExportExcelOrder = this.ExportExcelOrder;
			info.TooltipHelperCn = this.TooltipHelperCn;
			info.TooltipHelperEn = this.TooltipHelperEn;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			info.StatisticsFlag = this.StatisticsFlag;
			info.StatisticsType = this.StatisticsType;
			info.StatisticsTitle = this.StatisticsTitle;
			info.ListDisplayOrder = this.ListDisplayOrder;
			info.ListEditorFlag = this.ListEditorFlag;
			info.ListEditorControlType = this.ListEditorControlType;
			return info;			
		}
		 
		public EntityFieldInfo Clone()
		{
			return ((ICloneable) this).Clone() as EntityFieldInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// EntityFieldInfoCollection对应表[TS_SYS_ENTITY_FIELD]
    /// </summary>
	public partial class EntityFieldInfoCollection : BusinessObjectCollection<EntityFieldInfo>
	{
		public EntityFieldInfoCollection():base("TS_SYS_ENTITY_FIELD"){}	
	}
}
