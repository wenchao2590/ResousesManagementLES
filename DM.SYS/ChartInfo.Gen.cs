#region Declaim
//---------------------------------------------------------------------------
// Name:		ChartInfo
// Function: 	Expose data in table TS_SYS_CHART from database as business object to MES system.
// Tool:		T4
// CreateDate:	2016年5月6日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.SYS 
{   
	/// <summary>
    /// ChartInfo对应表[TS_SYS_CHART]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class ChartInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public ChartInfo(		 long aId,
				Guid aFid,
				string aName,
				string aNameEn,
				string aReceiverLayer,
				bool aIsAuth,
				string aChartType,
				string aMixCondition,
				string aChartLabelName,
				string aChartStyle,
				string aTipFormat,
				int aChartWidth,
				int aChartHight,
				string aChartColumnName,
				string aChartRowName,
				string aSqlString,
				string aChartOtherFormat,
				string aRemark,
				bool aValidFlag,
				string aCreateUser,
				DateTime aCreateDate,
				string aModifyUser,
				DateTime aModifyDate				
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			Name = aName;
		 
			NameEn = aNameEn;
		 
			ReceiverLayer = aReceiverLayer;
		 
			IsAuth = aIsAuth;
		 
			ChartType = aChartType;
		 
			MixCondition = aMixCondition;
		 
			ChartLabelName = aChartLabelName;
		 
			ChartStyle = aChartStyle;
		 
			TipFormat = aTipFormat;
		 
			ChartWidth = aChartWidth;
		 
			ChartHight = aChartHight;
		 
			ChartColumnName = aChartColumnName;
		 
			ChartRowName = aChartRowName;
		 
			SqlString = aSqlString;
		 
			ChartOtherFormat = aChartOtherFormat;
		 
			Remark = aRemark;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		}
		
		public ChartInfo():base("TS_SYS_CHART")
		{
			List<string> keys = new List<string>();
			                       _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IdField = new DataSchemaField();
			IdField.Name = "Id";
			IdField.Type = typeof(long).ToString();
			IdField.Index = 0;
			fields.Add(IdField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField NAMEField = new DataSchemaField();
			NAMEField.Name = "NAME";
			NAMEField.Type = typeof(string).ToString();
			NAMEField.Index = 2;
			fields.Add(NAMEField);
			 
			DataSchemaField NAME_ENField = new DataSchemaField();
			NAME_ENField.Name = "NAME_EN";
			NAME_ENField.Type = typeof(string).ToString();
			NAME_ENField.Index = 3;
			fields.Add(NAME_ENField);
			 
			DataSchemaField RECEIVER_LAYERField = new DataSchemaField();
			RECEIVER_LAYERField.Name = "RECEIVER_LAYER";
			RECEIVER_LAYERField.Type = typeof(string).ToString();
			RECEIVER_LAYERField.Index = 4;
			fields.Add(RECEIVER_LAYERField);
			 
			DataSchemaField IS_AUTHField = new DataSchemaField();
			IS_AUTHField.Name = "IS_AUTH";
			IS_AUTHField.Type = typeof(bool).ToString();
			IS_AUTHField.Index = 5;
			fields.Add(IS_AUTHField);
			 
			DataSchemaField CHART_TYPEField = new DataSchemaField();
			CHART_TYPEField.Name = "CHART_TYPE";
			CHART_TYPEField.Type = typeof(string).ToString();
			CHART_TYPEField.Index = 6;
			fields.Add(CHART_TYPEField);
			 
			DataSchemaField MIX_CONDITIONField = new DataSchemaField();
			MIX_CONDITIONField.Name = "MIX_CONDITION";
			MIX_CONDITIONField.Type = typeof(string).ToString();
			MIX_CONDITIONField.Index = 7;
			fields.Add(MIX_CONDITIONField);
			 
			DataSchemaField CHART_LABEL_NAMEField = new DataSchemaField();
			CHART_LABEL_NAMEField.Name = "CHART_LABEL_NAME";
			CHART_LABEL_NAMEField.Type = typeof(string).ToString();
			CHART_LABEL_NAMEField.Index = 8;
			fields.Add(CHART_LABEL_NAMEField);
			 
			DataSchemaField CHART_STYLEField = new DataSchemaField();
			CHART_STYLEField.Name = "CHART_STYLE";
			CHART_STYLEField.Type = typeof(string).ToString();
			CHART_STYLEField.Index = 9;
			fields.Add(CHART_STYLEField);
			 
			DataSchemaField TIP_FORMATField = new DataSchemaField();
			TIP_FORMATField.Name = "TIP_FORMAT";
			TIP_FORMATField.Type = typeof(string).ToString();
			TIP_FORMATField.Index = 10;
			fields.Add(TIP_FORMATField);
			 
			DataSchemaField CHART_WIDTHField = new DataSchemaField();
			CHART_WIDTHField.Name = "CHART_WIDTH";
			CHART_WIDTHField.Type = typeof(int).ToString();
			CHART_WIDTHField.Index = 11;
			fields.Add(CHART_WIDTHField);
			 
			DataSchemaField CHART_HIGHTField = new DataSchemaField();
			CHART_HIGHTField.Name = "CHART_HIGHT";
			CHART_HIGHTField.Type = typeof(int).ToString();
			CHART_HIGHTField.Index = 12;
			fields.Add(CHART_HIGHTField);
			 
			DataSchemaField CHART_COLUMN_NAMEField = new DataSchemaField();
			CHART_COLUMN_NAMEField.Name = "CHART_COLUMN_NAME";
			CHART_COLUMN_NAMEField.Type = typeof(string).ToString();
			CHART_COLUMN_NAMEField.Index = 13;
			fields.Add(CHART_COLUMN_NAMEField);
			 
			DataSchemaField CHART_ROW_NAMEField = new DataSchemaField();
			CHART_ROW_NAMEField.Name = "CHART_ROW_NAME";
			CHART_ROW_NAMEField.Type = typeof(string).ToString();
			CHART_ROW_NAMEField.Index = 14;
			fields.Add(CHART_ROW_NAMEField);
			 
			DataSchemaField SQL_STRINGField = new DataSchemaField();
			SQL_STRINGField.Name = "SQL_STRING";
			SQL_STRINGField.Type = typeof(string).ToString();
			SQL_STRINGField.Index = 15;
			fields.Add(SQL_STRINGField);
			 
			DataSchemaField CHART_OTHER_FORMATField = new DataSchemaField();
			CHART_OTHER_FORMATField.Name = "CHART_OTHER_FORMAT";
			CHART_OTHER_FORMATField.Type = typeof(string).ToString();
			CHART_OTHER_FORMATField.Index = 16;
			fields.Add(CHART_OTHER_FORMATField);
			 
			DataSchemaField REMARKField = new DataSchemaField();
			REMARKField.Name = "REMARK";
			REMARKField.Type = typeof(string).ToString();
			REMARKField.Index = 17;
			fields.Add(REMARKField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 18;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 19;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 20;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 21;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 22;
			fields.Add(MODIFY_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public string Name{ get;set; }		
				
		[DataMember]
		public string NameEn{ get;set; }		
				
		[DataMember]
		public string ReceiverLayer{ get;set; }		
				
		[DataMember]
		public bool? IsAuth{ get;set; }		
				
		[DataMember]
		public string ChartType{ get;set; }		
				
		[DataMember]
		public string MixCondition{ get;set; }		
				
		[DataMember]
		public string ChartLabelName{ get;set; }		
				
		[DataMember]
		public string ChartStyle{ get;set; }		
				
		[DataMember]
		public string TipFormat{ get;set; }		
				
		[DataMember]
		public int? ChartWidth{ get;set; }		
				
		[DataMember]
		public int? ChartHight{ get;set; }		
				
		[DataMember]
		public string ChartColumnName{ get;set; }		
				
		[DataMember]
		public string ChartRowName{ get;set; }		
				
		[DataMember]
		public string SqlString{ get;set; }		
				
		[DataMember]
		public string ChartOtherFormat{ get;set; }		
				
		[DataMember]
		public string Remark{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			ChartInfo info = new ChartInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.Name = this.Name;
			info.NameEn = this.NameEn;
			info.ReceiverLayer = this.ReceiverLayer;
			info.IsAuth = this.IsAuth;
			info.ChartType = this.ChartType;
			info.MixCondition = this.MixCondition;
			info.ChartLabelName = this.ChartLabelName;
			info.ChartStyle = this.ChartStyle;
			info.TipFormat = this.TipFormat;
			info.ChartWidth = this.ChartWidth;
			info.ChartHight = this.ChartHight;
			info.ChartColumnName = this.ChartColumnName;
			info.ChartRowName = this.ChartRowName;
			info.SqlString = this.SqlString;
			info.ChartOtherFormat = this.ChartOtherFormat;
			info.Remark = this.Remark;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			return info;			
		}
		 
		public ChartInfo Clone()
		{
			return ((ICloneable) this).Clone() as ChartInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// ChartInfoCollection对应表[TS_SYS_CHART]
    /// </summary>
	public partial class ChartInfoCollection : BusinessObjectCollection<ChartInfo>
	{
		public ChartInfoCollection():base("TS_SYS_CHART"){}	
	}
}
