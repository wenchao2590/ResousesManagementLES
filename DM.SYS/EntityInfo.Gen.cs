#region Declaim
//---------------------------------------------------------------------------
// Name:		EntityInfo
// Function: 	Expose data in table TS_SYS_ENTITY from database as business object to MES system.
// Tool:		T4
// CreateDate:	2020年3月15日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.SYS 
{   
	/// <summary>
    /// EntityInfo对应表[TS_SYS_ENTITY]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class EntityInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public EntityInfo(		 string aEntityName,
				string aTableNames,
				string aComments,
				int aEntityType,
				string aParentField,
				string aDefaultSort,
				string aAuthConfig,
				string aKeyFields,
				bool aValidFlag,
				string aModifyUser,
				string aTabTitles,
				long aId,
				string aCreateUser,
				DateTime aModifyDate,
				Guid aFid,
				DateTime aCreateDate				
		) : this()
		{
			 
			EntityName = aEntityName;
		 
			TableNames = aTableNames;
		 
			Comments = aComments;
		 
			EntityType = aEntityType;
		 
			ParentField = aParentField;
		 
			DefaultSort = aDefaultSort;
		 
			AuthConfig = aAuthConfig;
		 
			KeyFields = aKeyFields;
		 
			ValidFlag = aValidFlag;
		 
			ModifyUser = aModifyUser;
		 
			TabTitles = aTabTitles;
		 
			Id = aId;
		 
			CreateUser = aCreateUser;
		 
			ModifyDate = aModifyDate;
		 
			Fid = aFid;
		 
			CreateDate = aCreateDate;
		}
		
		public EntityInfo():base("TS_SYS_ENTITY")
		{
			List<string> keys = new List<string>();
			            			keys.Add("ID");    _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField ENTITY_NAMEField = new DataSchemaField();
			ENTITY_NAMEField.Name = "ENTITY_NAME";
			ENTITY_NAMEField.Type = typeof(string).ToString();
			ENTITY_NAMEField.Index = 0;
			fields.Add(ENTITY_NAMEField);
			 
			DataSchemaField TABLE_NAMESField = new DataSchemaField();
			TABLE_NAMESField.Name = "TABLE_NAMES";
			TABLE_NAMESField.Type = typeof(string).ToString();
			TABLE_NAMESField.Index = 1;
			fields.Add(TABLE_NAMESField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 2;
			fields.Add(COMMENTSField);
			 
			DataSchemaField ENTITY_TYPEField = new DataSchemaField();
			ENTITY_TYPEField.Name = "ENTITY_TYPE";
			ENTITY_TYPEField.Type = typeof(int).ToString();
			ENTITY_TYPEField.Index = 3;
			fields.Add(ENTITY_TYPEField);
			 
			DataSchemaField PARENT_FIELDField = new DataSchemaField();
			PARENT_FIELDField.Name = "PARENT_FIELD";
			PARENT_FIELDField.Type = typeof(string).ToString();
			PARENT_FIELDField.Index = 4;
			fields.Add(PARENT_FIELDField);
			 
			DataSchemaField DEFAULT_SORTField = new DataSchemaField();
			DEFAULT_SORTField.Name = "DEFAULT_SORT";
			DEFAULT_SORTField.Type = typeof(string).ToString();
			DEFAULT_SORTField.Index = 5;
			fields.Add(DEFAULT_SORTField);
			 
			DataSchemaField AUTH_CONFIGField = new DataSchemaField();
			AUTH_CONFIGField.Name = "AUTH_CONFIG";
			AUTH_CONFIGField.Type = typeof(string).ToString();
			AUTH_CONFIGField.Index = 6;
			fields.Add(AUTH_CONFIGField);
			 
			DataSchemaField KEY_FIELDSField = new DataSchemaField();
			KEY_FIELDSField.Name = "KEY_FIELDS";
			KEY_FIELDSField.Type = typeof(string).ToString();
			KEY_FIELDSField.Index = 7;
			fields.Add(KEY_FIELDSField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 8;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 9;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField TAB_TITLESField = new DataSchemaField();
			TAB_TITLESField.Name = "TAB_TITLES";
			TAB_TITLESField.Type = typeof(string).ToString();
			TAB_TITLESField.Index = 10;
			fields.Add(TAB_TITLESField);
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 11;
			fields.Add(IDField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 12;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 13;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 14;
			fields.Add(FIDField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 15;
			fields.Add(CREATE_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public string EntityName{ get;set; }		
				
		[DataMember]
		public string TableNames{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public int? EntityType{ get;set; }		
				
		[DataMember]
		public string ParentField{ get;set; }		
				
		[DataMember]
		public string DefaultSort{ get;set; }		
				
		[DataMember]
		public string AuthConfig{ get;set; }		
				
		[DataMember]
		public string KeyFields{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public string TabTitles{ get;set; }		
				
		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			EntityInfo info = new EntityInfo();

			info.EntityName = this.EntityName;
			info.TableNames = this.TableNames;
			info.Comments = this.Comments;
			info.EntityType = this.EntityType;
			info.ParentField = this.ParentField;
			info.DefaultSort = this.DefaultSort;
			info.AuthConfig = this.AuthConfig;
			info.KeyFields = this.KeyFields;
			info.ValidFlag = this.ValidFlag;
			info.ModifyUser = this.ModifyUser;
			info.TabTitles = this.TabTitles;
			info.Id = this.Id;
			info.CreateUser = this.CreateUser;
			info.ModifyDate = this.ModifyDate;
			info.Fid = this.Fid;
			info.CreateDate = this.CreateDate;
			return info;			
		}
		 
		public EntityInfo Clone()
		{
			return ((ICloneable) this).Clone() as EntityInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// EntityInfoCollection对应表[TS_SYS_ENTITY]
    /// </summary>
	public partial class EntityInfoCollection : BusinessObjectCollection<EntityInfo>
	{
		public EntityInfoCollection():base("TS_SYS_ENTITY"){}	
	}
}
