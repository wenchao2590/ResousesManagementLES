#region Declaim
//---------------------------------------------------------------------------
// Name:		CljckInfo
// Function: 	Expose data in table Cljck from database as business object to MES system.
// Tool:		T4
// CreateDate:	2017年10月11日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.GJS 
{   
	/// <summary>
    /// CljckInfo对应表[TT_WMS_CLJCK]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class CljckInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public CljckInfo( 
					long aId,

					string aJcdh,

					string aDm,

					string aMc,

					string aTm,

					decimal aJcsl,

					decimal aCcsl,

					decimal aKcsl,

					string aHwcw,

					decimal aJsmz,

					decimal aHwc,

					decimal aHwk,

					decimal aHwg,

					decimal aJstj,

					decimal aDwmz,

					decimal aDwtj,

					DateTime aScrq,

					DateTime aYxrq,

					string aJsdw,

					string aBzdw,

					decimal aBzsl,

					string aBz,

					decimal aXjs,

					decimal aDj,

					decimal aZj,

					string aMs,

					string aXh,

					string aCddm,

					string aCd,

					int aSxh,

					bool aValidFlag,

					string aCreateUser,

					DateTime aCreateDate,

					string aModifyUser,

					DateTime aModifyDate

				 
		) : this()
		{
			 
			Id = aId;
		 
			Jcdh = aJcdh;
		 
			Dm = aDm;
		 
			Mc = aMc;
		 
			Tm = aTm;
		 
			Jcsl = aJcsl;
		 
			Ccsl = aCcsl;
		 
			Kcsl = aKcsl;
		 
			Hwcw = aHwcw;
		 
			Jsmz = aJsmz;
		 
			Hwc = aHwc;
		 
			Hwk = aHwk;
		 
			Hwg = aHwg;
		 
			Jstj = aJstj;
		 
			Dwmz = aDwmz;
		 
			Dwtj = aDwtj;
		 
			Scrq = aScrq;
		 
			Yxrq = aYxrq;
		 
			Jsdw = aJsdw;
		 
			Bzdw = aBzdw;
		 
			Bzsl = aBzsl;
		 
			Bz = aBz;
		 
			Xjs = aXjs;
		 
			Dj = aDj;
		 
			Zj = aZj;
		 
			Ms = aMs;
		 
			Xh = aXh;
		 
			Cddm = aCddm;
		 
			Cd = aCd;
		 
			Sxh = aSxh;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		}
		
		public CljckInfo():base("TT_WMS_CLJCK")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                                  _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField JCDHField = new DataSchemaField();
			JCDHField.Name = "JCDH";
			JCDHField.Type = typeof(string).ToString();
			JCDHField.Index = 1;
			fields.Add(JCDHField);
			 
			DataSchemaField DMField = new DataSchemaField();
			DMField.Name = "DM";
			DMField.Type = typeof(string).ToString();
			DMField.Index = 2;
			fields.Add(DMField);
			 
			DataSchemaField MCField = new DataSchemaField();
			MCField.Name = "MC";
			MCField.Type = typeof(string).ToString();
			MCField.Index = 3;
			fields.Add(MCField);
			 
			DataSchemaField TMField = new DataSchemaField();
			TMField.Name = "TM";
			TMField.Type = typeof(string).ToString();
			TMField.Index = 4;
			fields.Add(TMField);
			 
			DataSchemaField JCSLField = new DataSchemaField();
			JCSLField.Name = "JCSL";
			JCSLField.Type = typeof(decimal).ToString();
			JCSLField.Index = 5;
			fields.Add(JCSLField);
			 
			DataSchemaField CCSLField = new DataSchemaField();
			CCSLField.Name = "CCSL";
			CCSLField.Type = typeof(decimal).ToString();
			CCSLField.Index = 6;
			fields.Add(CCSLField);
			 
			DataSchemaField KCSLField = new DataSchemaField();
			KCSLField.Name = "KCSL";
			KCSLField.Type = typeof(decimal).ToString();
			KCSLField.Index = 7;
			fields.Add(KCSLField);
			 
			DataSchemaField HWCWField = new DataSchemaField();
			HWCWField.Name = "HWCW";
			HWCWField.Type = typeof(string).ToString();
			HWCWField.Index = 8;
			fields.Add(HWCWField);
			 
			DataSchemaField JSMZField = new DataSchemaField();
			JSMZField.Name = "JSMZ";
			JSMZField.Type = typeof(decimal).ToString();
			JSMZField.Index = 9;
			fields.Add(JSMZField);
			 
			DataSchemaField HWCField = new DataSchemaField();
			HWCField.Name = "HWC";
			HWCField.Type = typeof(decimal).ToString();
			HWCField.Index = 10;
			fields.Add(HWCField);
			 
			DataSchemaField HWKField = new DataSchemaField();
			HWKField.Name = "HWK";
			HWKField.Type = typeof(decimal).ToString();
			HWKField.Index = 11;
			fields.Add(HWKField);
			 
			DataSchemaField HWGField = new DataSchemaField();
			HWGField.Name = "HWG";
			HWGField.Type = typeof(decimal).ToString();
			HWGField.Index = 12;
			fields.Add(HWGField);
			 
			DataSchemaField JSTJField = new DataSchemaField();
			JSTJField.Name = "JSTJ";
			JSTJField.Type = typeof(decimal).ToString();
			JSTJField.Index = 13;
			fields.Add(JSTJField);
			 
			DataSchemaField DWMZField = new DataSchemaField();
			DWMZField.Name = "DWMZ";
			DWMZField.Type = typeof(decimal).ToString();
			DWMZField.Index = 14;
			fields.Add(DWMZField);
			 
			DataSchemaField DWTJField = new DataSchemaField();
			DWTJField.Name = "DWTJ";
			DWTJField.Type = typeof(decimal).ToString();
			DWTJField.Index = 15;
			fields.Add(DWTJField);
			 
			DataSchemaField SCRQField = new DataSchemaField();
			SCRQField.Name = "SCRQ";
			SCRQField.Type = typeof(DateTime).ToString();
			SCRQField.Index = 16;
			fields.Add(SCRQField);
			 
			DataSchemaField YXRQField = new DataSchemaField();
			YXRQField.Name = "YXRQ";
			YXRQField.Type = typeof(DateTime).ToString();
			YXRQField.Index = 17;
			fields.Add(YXRQField);
			 
			DataSchemaField JSDWField = new DataSchemaField();
			JSDWField.Name = "JSDW";
			JSDWField.Type = typeof(string).ToString();
			JSDWField.Index = 18;
			fields.Add(JSDWField);
			 
			DataSchemaField BZDWField = new DataSchemaField();
			BZDWField.Name = "BZDW";
			BZDWField.Type = typeof(string).ToString();
			BZDWField.Index = 19;
			fields.Add(BZDWField);
			 
			DataSchemaField BZSLField = new DataSchemaField();
			BZSLField.Name = "BZSL";
			BZSLField.Type = typeof(decimal).ToString();
			BZSLField.Index = 20;
			fields.Add(BZSLField);
			 
			DataSchemaField BZField = new DataSchemaField();
			BZField.Name = "BZ";
			BZField.Type = typeof(string).ToString();
			BZField.Index = 21;
			fields.Add(BZField);
			 
			DataSchemaField XJSField = new DataSchemaField();
			XJSField.Name = "XJS";
			XJSField.Type = typeof(decimal).ToString();
			XJSField.Index = 22;
			fields.Add(XJSField);
			 
			DataSchemaField DJField = new DataSchemaField();
			DJField.Name = "DJ";
			DJField.Type = typeof(decimal).ToString();
			DJField.Index = 23;
			fields.Add(DJField);
			 
			DataSchemaField ZJField = new DataSchemaField();
			ZJField.Name = "ZJ";
			ZJField.Type = typeof(decimal).ToString();
			ZJField.Index = 24;
			fields.Add(ZJField);
			 
			DataSchemaField MSField = new DataSchemaField();
			MSField.Name = "MS";
			MSField.Type = typeof(string).ToString();
			MSField.Index = 25;
			fields.Add(MSField);
			 
			DataSchemaField XHField = new DataSchemaField();
			XHField.Name = "XH";
			XHField.Type = typeof(string).ToString();
			XHField.Index = 26;
			fields.Add(XHField);
			 
			DataSchemaField CDDMField = new DataSchemaField();
			CDDMField.Name = "CDDM";
			CDDMField.Type = typeof(string).ToString();
			CDDMField.Index = 27;
			fields.Add(CDDMField);
			 
			DataSchemaField CDField = new DataSchemaField();
			CDField.Name = "CD";
			CDField.Type = typeof(string).ToString();
			CDField.Index = 28;
			fields.Add(CDField);
			 
			DataSchemaField SXHField = new DataSchemaField();
			SXHField.Name = "SXH";
			SXHField.Type = typeof(int).ToString();
			SXHField.Index = 29;
			fields.Add(SXHField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 30;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 31;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 32;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 33;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 34;
			fields.Add(MODIFY_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public string Jcdh{ get;set; }		
				
		[DataMember]
		public string Dm{ get;set; }		
				
		[DataMember]
		public string Mc{ get;set; }		
				
		[DataMember]
		public string Tm{ get;set; }		
				
		[DataMember]
		public decimal? Jcsl{ get;set; }		
				
		[DataMember]
		public decimal? Ccsl{ get;set; }		
				
		[DataMember]
		public decimal? Kcsl{ get;set; }		
				
		[DataMember]
		public string Hwcw{ get;set; }		
				
		[DataMember]
		public decimal? Jsmz{ get;set; }		
				
		[DataMember]
		public decimal? Hwc{ get;set; }		
				
		[DataMember]
		public decimal? Hwk{ get;set; }		
				
		[DataMember]
		public decimal? Hwg{ get;set; }		
				
		[DataMember]
		public decimal? Jstj{ get;set; }		
				
		[DataMember]
		public decimal? Dwmz{ get;set; }		
				
		[DataMember]
		public decimal? Dwtj{ get;set; }		
				
		[DataMember]
		public DateTime? Scrq{ get;set; }		
				
		[DataMember]
		public DateTime? Yxrq{ get;set; }		
				
		[DataMember]
		public string Jsdw{ get;set; }		
				
		[DataMember]
		public string Bzdw{ get;set; }		
				
		[DataMember]
		public decimal? Bzsl{ get;set; }		
				
		[DataMember]
		public string Bz{ get;set; }		
				
		[DataMember]
		public decimal? Xjs{ get;set; }		
				
		[DataMember]
		public decimal? Dj{ get;set; }		
				
		[DataMember]
		public decimal? Zj{ get;set; }		
				
		[DataMember]
		public string Ms{ get;set; }		
				
		[DataMember]
		public string Xh{ get;set; }		
				
		[DataMember]
		public string Cddm{ get;set; }		
				
		[DataMember]
		public string Cd{ get;set; }		
				
		[DataMember]
		public int? Sxh{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			CljckInfo info = new CljckInfo();

			info.Id = this.Id;
			info.Jcdh = this.Jcdh;
			info.Dm = this.Dm;
			info.Mc = this.Mc;
			info.Tm = this.Tm;
			info.Jcsl = this.Jcsl;
			info.Ccsl = this.Ccsl;
			info.Kcsl = this.Kcsl;
			info.Hwcw = this.Hwcw;
			info.Jsmz = this.Jsmz;
			info.Hwc = this.Hwc;
			info.Hwk = this.Hwk;
			info.Hwg = this.Hwg;
			info.Jstj = this.Jstj;
			info.Dwmz = this.Dwmz;
			info.Dwtj = this.Dwtj;
			info.Scrq = this.Scrq;
			info.Yxrq = this.Yxrq;
			info.Jsdw = this.Jsdw;
			info.Bzdw = this.Bzdw;
			info.Bzsl = this.Bzsl;
			info.Bz = this.Bz;
			info.Xjs = this.Xjs;
			info.Dj = this.Dj;
			info.Zj = this.Zj;
			info.Ms = this.Ms;
			info.Xh = this.Xh;
			info.Cddm = this.Cddm;
			info.Cd = this.Cd;
			info.Sxh = this.Sxh;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			return info;			
		}
		 
		public CljckInfo Clone()
		{
			return ((ICloneable) this).Clone() as CljckInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// CljckInfoCollection对应表[TT_WMS_CLJCK]
    /// </summary>
	public partial class CljckInfoCollection : BusinessObjectCollection<CljckInfo>
	{
		public CljckInfoCollection():base("TT_WMS_CLJCK"){}	
	}
}
