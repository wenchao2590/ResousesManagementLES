#region Declaim
//---------------------------------------------------------------------------
// Name:		ClkInfo
// Function: 	Expose data in table Clk from database as business object to MES system.
// Tool:		T4
// CreateDate:	2017年10月11日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.GJS 
{   
	/// <summary>
    /// ClkInfo对应表[TM_BAS_CLK]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class ClkInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public ClkInfo( 
					long aId,

					string aDm,

					string aMc,

					string aXh,

					string aCddm,

					string aCd,

					string aJsdw,

					decimal aCbdj,

					decimal aXsdj,

					decimal aMinQty,

					decimal aMaxQty,

					string aHwcw,

					string aGysdm,

					string aGysmc,

					string aBz1,

					string aBz2,

					string aBz3,

					string aTm,

					decimal aHwc,

					decimal aHwk,

					decimal aHwg,

					decimal aDwmz,

					decimal aDwtj,

					bool aValidFlag,

					string aCreateUser,

					DateTime aCreateDate,

					string aModifyUser,

					DateTime aModifyDate

				 
		) : this()
		{
			 
			Id = aId;
		 
			Dm = aDm;
		 
			Mc = aMc;
		 
			Xh = aXh;
		 
			Cddm = aCddm;
		 
			Cd = aCd;
		 
			Jsdw = aJsdw;
		 
			Cbdj = aCbdj;
		 
			Xsdj = aXsdj;
		 
			MinQty = aMinQty;
		 
			MaxQty = aMaxQty;
		 
			Hwcw = aHwcw;
		 
			Gysdm = aGysdm;
		 
			Gysmc = aGysmc;
		 
			Bz1 = aBz1;
		 
			Bz2 = aBz2;
		 
			Bz3 = aBz3;
		 
			Tm = aTm;
		 
			Hwc = aHwc;
		 
			Hwk = aHwk;
		 
			Hwg = aHwg;
		 
			Dwmz = aDwmz;
		 
			Dwtj = aDwtj;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		}
		
		public ClkInfo():base("TM_BAS_CLK")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                           _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField DMField = new DataSchemaField();
			DMField.Name = "DM";
			DMField.Type = typeof(string).ToString();
			DMField.Index = 1;
			fields.Add(DMField);
			 
			DataSchemaField MCField = new DataSchemaField();
			MCField.Name = "MC";
			MCField.Type = typeof(string).ToString();
			MCField.Index = 2;
			fields.Add(MCField);
			 
			DataSchemaField XHField = new DataSchemaField();
			XHField.Name = "XH";
			XHField.Type = typeof(string).ToString();
			XHField.Index = 3;
			fields.Add(XHField);
			 
			DataSchemaField CDDMField = new DataSchemaField();
			CDDMField.Name = "CDDM";
			CDDMField.Type = typeof(string).ToString();
			CDDMField.Index = 4;
			fields.Add(CDDMField);
			 
			DataSchemaField CDField = new DataSchemaField();
			CDField.Name = "CD";
			CDField.Type = typeof(string).ToString();
			CDField.Index = 5;
			fields.Add(CDField);
			 
			DataSchemaField JSDWField = new DataSchemaField();
			JSDWField.Name = "JSDW";
			JSDWField.Type = typeof(string).ToString();
			JSDWField.Index = 6;
			fields.Add(JSDWField);
			 
			DataSchemaField CBDJField = new DataSchemaField();
			CBDJField.Name = "CBDJ";
			CBDJField.Type = typeof(decimal).ToString();
			CBDJField.Index = 7;
			fields.Add(CBDJField);
			 
			DataSchemaField XSDJField = new DataSchemaField();
			XSDJField.Name = "XSDJ";
			XSDJField.Type = typeof(decimal).ToString();
			XSDJField.Index = 8;
			fields.Add(XSDJField);
			 
			DataSchemaField MIN_QTYField = new DataSchemaField();
			MIN_QTYField.Name = "MIN_QTY";
			MIN_QTYField.Type = typeof(decimal).ToString();
			MIN_QTYField.Index = 9;
			fields.Add(MIN_QTYField);
			 
			DataSchemaField MAX_QTYField = new DataSchemaField();
			MAX_QTYField.Name = "MAX_QTY";
			MAX_QTYField.Type = typeof(decimal).ToString();
			MAX_QTYField.Index = 10;
			fields.Add(MAX_QTYField);
			 
			DataSchemaField HWCWField = new DataSchemaField();
			HWCWField.Name = "HWCW";
			HWCWField.Type = typeof(string).ToString();
			HWCWField.Index = 11;
			fields.Add(HWCWField);
			 
			DataSchemaField GYSDMField = new DataSchemaField();
			GYSDMField.Name = "GYSDM";
			GYSDMField.Type = typeof(string).ToString();
			GYSDMField.Index = 12;
			fields.Add(GYSDMField);
			 
			DataSchemaField GYSMCField = new DataSchemaField();
			GYSMCField.Name = "GYSMC";
			GYSMCField.Type = typeof(string).ToString();
			GYSMCField.Index = 13;
			fields.Add(GYSMCField);
			 
			DataSchemaField BZ1Field = new DataSchemaField();
			BZ1Field.Name = "BZ1";
			BZ1Field.Type = typeof(string).ToString();
			BZ1Field.Index = 14;
			fields.Add(BZ1Field);
			 
			DataSchemaField BZ2Field = new DataSchemaField();
			BZ2Field.Name = "BZ2";
			BZ2Field.Type = typeof(string).ToString();
			BZ2Field.Index = 15;
			fields.Add(BZ2Field);
			 
			DataSchemaField BZ3Field = new DataSchemaField();
			BZ3Field.Name = "BZ3";
			BZ3Field.Type = typeof(string).ToString();
			BZ3Field.Index = 16;
			fields.Add(BZ3Field);
			 
			DataSchemaField TMField = new DataSchemaField();
			TMField.Name = "TM";
			TMField.Type = typeof(string).ToString();
			TMField.Index = 17;
			fields.Add(TMField);
			 
			DataSchemaField HWCField = new DataSchemaField();
			HWCField.Name = "HWC";
			HWCField.Type = typeof(decimal).ToString();
			HWCField.Index = 18;
			fields.Add(HWCField);
			 
			DataSchemaField HWKField = new DataSchemaField();
			HWKField.Name = "HWK";
			HWKField.Type = typeof(decimal).ToString();
			HWKField.Index = 19;
			fields.Add(HWKField);
			 
			DataSchemaField HWGField = new DataSchemaField();
			HWGField.Name = "HWG";
			HWGField.Type = typeof(decimal).ToString();
			HWGField.Index = 20;
			fields.Add(HWGField);
			 
			DataSchemaField DWMZField = new DataSchemaField();
			DWMZField.Name = "DWMZ";
			DWMZField.Type = typeof(decimal).ToString();
			DWMZField.Index = 21;
			fields.Add(DWMZField);
			 
			DataSchemaField DWTJField = new DataSchemaField();
			DWTJField.Name = "DWTJ";
			DWTJField.Type = typeof(decimal).ToString();
			DWTJField.Index = 22;
			fields.Add(DWTJField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 23;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 24;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 25;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 26;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 27;
			fields.Add(MODIFY_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public string Dm{ get;set; }		
				
		[DataMember]
		public string Mc{ get;set; }		
				
		[DataMember]
		public string Xh{ get;set; }		
				
		[DataMember]
		public string Cddm{ get;set; }		
				
		[DataMember]
		public string Cd{ get;set; }		
				
		[DataMember]
		public string Jsdw{ get;set; }		
				
		[DataMember]
		public decimal? Cbdj{ get;set; }		
				
		[DataMember]
		public decimal? Xsdj{ get;set; }		
				
		[DataMember]
		public decimal? MinQty{ get;set; }		
				
		[DataMember]
		public decimal? MaxQty{ get;set; }		
				
		[DataMember]
		public string Hwcw{ get;set; }		
				
		[DataMember]
		public string Gysdm{ get;set; }		
				
		[DataMember]
		public string Gysmc{ get;set; }		
				
		[DataMember]
		public string Bz1{ get;set; }		
				
		[DataMember]
		public string Bz2{ get;set; }		
				
		[DataMember]
		public string Bz3{ get;set; }		
				
		[DataMember]
		public string Tm{ get;set; }		
				
		[DataMember]
		public decimal? Hwc{ get;set; }		
				
		[DataMember]
		public decimal? Hwk{ get;set; }		
				
		[DataMember]
		public decimal? Hwg{ get;set; }		
				
		[DataMember]
		public decimal? Dwmz{ get;set; }		
				
		[DataMember]
		public decimal? Dwtj{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			ClkInfo info = new ClkInfo();

			info.Id = this.Id;
			info.Dm = this.Dm;
			info.Mc = this.Mc;
			info.Xh = this.Xh;
			info.Cddm = this.Cddm;
			info.Cd = this.Cd;
			info.Jsdw = this.Jsdw;
			info.Cbdj = this.Cbdj;
			info.Xsdj = this.Xsdj;
			info.MinQty = this.MinQty;
			info.MaxQty = this.MaxQty;
			info.Hwcw = this.Hwcw;
			info.Gysdm = this.Gysdm;
			info.Gysmc = this.Gysmc;
			info.Bz1 = this.Bz1;
			info.Bz2 = this.Bz2;
			info.Bz3 = this.Bz3;
			info.Tm = this.Tm;
			info.Hwc = this.Hwc;
			info.Hwk = this.Hwk;
			info.Hwg = this.Hwg;
			info.Dwmz = this.Dwmz;
			info.Dwtj = this.Dwtj;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			return info;			
		}
		 
		public ClkInfo Clone()
		{
			return ((ICloneable) this).Clone() as ClkInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// ClkInfoCollection对应表[TM_BAS_CLK]
    /// </summary>
	public partial class ClkInfoCollection : BusinessObjectCollection<ClkInfo>
	{
		public ClkInfoCollection():base("TM_BAS_CLK"){}	
	}
}
