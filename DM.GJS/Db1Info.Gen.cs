#region Declaim
//---------------------------------------------------------------------------
// Name:		Db1Info
// Function: 	Expose data in table Db1 from database as business object to MES system.
// Tool:		T4
// CreateDate:	2017年10月10日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.GJS 
{   
	/// <summary>
    /// Db1Info对应表[TM_BAS_DB1]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class Db1Info : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public Db1Info( 
					long aId,

					string aF9,

					string aF8,

					string aKhqc,

					string aLxr,

					string aDh,

					string aKhdz,

					int aDwlx,

					bool aValidFlag,

					string aCreateUser,

					DateTime aCreateDate,

					string aModifyUser,

					DateTime aModifyDate

				 
		) : this()
		{
			 
			Id = aId;
		 
			F9 = aF9;
		 
			F8 = aF8;
		 
			Khqc = aKhqc;
		 
			Lxr = aLxr;
		 
			Dh = aDh;
		 
			Khdz = aKhdz;
		 
			Dwlx = aDwlx;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		}
		
		public Db1Info():base("TM_BAS_DB1")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");            _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField F9Field = new DataSchemaField();
			F9Field.Name = "F9";
			F9Field.Type = typeof(string).ToString();
			F9Field.Index = 1;
			fields.Add(F9Field);
			 
			DataSchemaField F8Field = new DataSchemaField();
			F8Field.Name = "F8";
			F8Field.Type = typeof(string).ToString();
			F8Field.Index = 2;
			fields.Add(F8Field);
			 
			DataSchemaField KHQCField = new DataSchemaField();
			KHQCField.Name = "KHQC";
			KHQCField.Type = typeof(string).ToString();
			KHQCField.Index = 3;
			fields.Add(KHQCField);
			 
			DataSchemaField LXRField = new DataSchemaField();
			LXRField.Name = "LXR";
			LXRField.Type = typeof(string).ToString();
			LXRField.Index = 4;
			fields.Add(LXRField);
			 
			DataSchemaField DHField = new DataSchemaField();
			DHField.Name = "DH";
			DHField.Type = typeof(string).ToString();
			DHField.Index = 5;
			fields.Add(DHField);
			 
			DataSchemaField KHDZField = new DataSchemaField();
			KHDZField.Name = "KHDZ";
			KHDZField.Type = typeof(string).ToString();
			KHDZField.Index = 6;
			fields.Add(KHDZField);
			 
			DataSchemaField DWLXField = new DataSchemaField();
			DWLXField.Name = "DWLX";
			DWLXField.Type = typeof(int).ToString();
			DWLXField.Index = 7;
			fields.Add(DWLXField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 8;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 9;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 10;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 11;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 12;
			fields.Add(MODIFY_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public string F9{ get;set; }		
				
		[DataMember]
		public string F8{ get;set; }		
				
		[DataMember]
		public string Khqc{ get;set; }		
				
		[DataMember]
		public string Lxr{ get;set; }		
				
		[DataMember]
		public string Dh{ get;set; }		
				
		[DataMember]
		public string Khdz{ get;set; }		
				
		[DataMember]
		public int? Dwlx{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			Db1Info info = new Db1Info();

			info.Id = this.Id;
			info.F9 = this.F9;
			info.F8 = this.F8;
			info.Khqc = this.Khqc;
			info.Lxr = this.Lxr;
			info.Dh = this.Dh;
			info.Khdz = this.Khdz;
			info.Dwlx = this.Dwlx;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			return info;			
		}
		 
		public Db1Info Clone()
		{
			return ((ICloneable) this).Clone() as Db1Info;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// Db1InfoCollection对应表[TM_BAS_DB1]
    /// </summary>
	public partial class Db1InfoCollection : BusinessObjectCollection<Db1Info>
	{
		public Db1InfoCollection():base("TM_BAS_DB1"){}	
	}
}
