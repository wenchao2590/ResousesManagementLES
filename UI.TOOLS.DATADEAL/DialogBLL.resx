<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnYes.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>