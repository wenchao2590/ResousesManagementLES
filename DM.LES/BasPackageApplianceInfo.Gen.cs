#region Declaim
//---------------------------------------------------------------------------
// Name:		BasPackageApplianceInfo
// Function: 	Expose data in table BasPackageAppliance from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月9日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// BasPackageApplianceInfo对应表[V_TM_BAS_PACKAGE_APPLIANCE]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class BasPackageApplianceInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public BasPackageApplianceInfo( 
					string aPackageNo,

					int aPackageType,

					string aPackageCname

				 
		) : this()
		{
			 
			PackageNo = aPackageNo;
		 
			PackageType = aPackageType;
		 
			PackageCname = aPackageCname;
		}
		
		public BasPackageApplianceInfo():base("V_TM_BAS_PACKAGE_APPLIANCE")
		{
			List<string> keys = new List<string>();
			   _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField PACKAGE_NOField = new DataSchemaField();
			PACKAGE_NOField.Name = "PACKAGE_NO";
			PACKAGE_NOField.Type = typeof(string).ToString();
			PACKAGE_NOField.Index = 0;
			fields.Add(PACKAGE_NOField);
			 
			DataSchemaField PACKAGE_TYPEField = new DataSchemaField();
			PACKAGE_TYPEField.Name = "PACKAGE_TYPE";
			PACKAGE_TYPEField.Type = typeof(int).ToString();
			PACKAGE_TYPEField.Index = 1;
			fields.Add(PACKAGE_TYPEField);
			 
			DataSchemaField PACKAGE_CNAMEField = new DataSchemaField();
			PACKAGE_CNAMEField.Name = "PACKAGE_CNAME";
			PACKAGE_CNAMEField.Type = typeof(string).ToString();
			PACKAGE_CNAMEField.Index = 2;
			fields.Add(PACKAGE_CNAMEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public string PackageNo{ get;set; }		
				
		[DataMember]
		public int? PackageType{ get;set; }		
				
		[DataMember]
		public string PackageCname{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			BasPackageApplianceInfo info = new BasPackageApplianceInfo();

			info.PackageNo = this.PackageNo;
			info.PackageType = this.PackageType;
			info.PackageCname = this.PackageCname;
			return info;			
		}
		 
		public BasPackageApplianceInfo Clone()
		{
			return ((ICloneable) this).Clone() as BasPackageApplianceInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// BasPackageApplianceInfoCollection对应表[V_TM_BAS_PACKAGE_APPLIANCE]
    /// </summary>
	public partial class BasPackageApplianceInfoCollection : BusinessObjectCollection<BasPackageApplianceInfo>
	{
		public BasPackageApplianceInfoCollection():base("V_TM_BAS_PACKAGE_APPLIANCE"){}	
	}
}
