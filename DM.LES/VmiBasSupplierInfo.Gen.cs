#region Declaim
//---------------------------------------------------------------------------
// Name:		VmiBasSupplierInfo
// Function: 	Expose data in table VmiBasSupplier from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年5月22日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// VmiBasSupplierInfo对应表[TI_IFM_VMI_BAS_SUPPLIER]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class VmiBasSupplierInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public VmiBasSupplierInfo( 
					long aId,

					Guid aFid,

					Guid aLogFid,

					string aSuppliercode,

					string aSuppliername,

					string aRemark,

					int aProcessFlag,

					DateTime aProcessTime,

					bool aValidFlag,

					string aCreateUser,

					DateTime aCreateDate,

					string aModifyUser,

					DateTime aModifyDate

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			LogFid = aLogFid;
		 
			Suppliercode = aSuppliercode;
		 
			Suppliername = aSuppliername;
		 
			Remark = aRemark;
		 
			ProcessFlag = aProcessFlag;
		 
			ProcessTime = aProcessTime;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		}
		
		public VmiBasSupplierInfo():base("TI_IFM_VMI_BAS_SUPPLIER")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");            _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField LOG_FIDField = new DataSchemaField();
			LOG_FIDField.Name = "LOG_FID";
			LOG_FIDField.Type = typeof(Guid).ToString();
			LOG_FIDField.Index = 2;
			fields.Add(LOG_FIDField);
			 
			DataSchemaField SUPPLIERCODEField = new DataSchemaField();
			SUPPLIERCODEField.Name = "SUPPLIERCODE";
			SUPPLIERCODEField.Type = typeof(string).ToString();
			SUPPLIERCODEField.Index = 3;
			fields.Add(SUPPLIERCODEField);
			 
			DataSchemaField SUPPLIERNAMEField = new DataSchemaField();
			SUPPLIERNAMEField.Name = "SUPPLIERNAME";
			SUPPLIERNAMEField.Type = typeof(string).ToString();
			SUPPLIERNAMEField.Index = 4;
			fields.Add(SUPPLIERNAMEField);
			 
			DataSchemaField REMARKField = new DataSchemaField();
			REMARKField.Name = "REMARK";
			REMARKField.Type = typeof(string).ToString();
			REMARKField.Index = 5;
			fields.Add(REMARKField);
			 
			DataSchemaField PROCESS_FLAGField = new DataSchemaField();
			PROCESS_FLAGField.Name = "PROCESS_FLAG";
			PROCESS_FLAGField.Type = typeof(int).ToString();
			PROCESS_FLAGField.Index = 6;
			fields.Add(PROCESS_FLAGField);
			 
			DataSchemaField PROCESS_TIMEField = new DataSchemaField();
			PROCESS_TIMEField.Name = "PROCESS_TIME";
			PROCESS_TIMEField.Type = typeof(DateTime).ToString();
			PROCESS_TIMEField.Index = 7;
			fields.Add(PROCESS_TIMEField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 8;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 9;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 10;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 11;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 12;
			fields.Add(MODIFY_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public Guid? LogFid{ get;set; }		
				
		[DataMember]
		public string Suppliercode{ get;set; }		
				
		[DataMember]
		public string Suppliername{ get;set; }		
				
		[DataMember]
		public string Remark{ get;set; }		
				
		[DataMember]
		public int? ProcessFlag{ get;set; }		
				
		[DataMember]
		public DateTime? ProcessTime{ get;set; }		
				
		[DataMember]
		public bool ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			VmiBasSupplierInfo info = new VmiBasSupplierInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.LogFid = this.LogFid;
			info.Suppliercode = this.Suppliercode;
			info.Suppliername = this.Suppliername;
			info.Remark = this.Remark;
			info.ProcessFlag = this.ProcessFlag;
			info.ProcessTime = this.ProcessTime;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			return info;			
		}
		 
		public VmiBasSupplierInfo Clone()
		{
			return ((ICloneable) this).Clone() as VmiBasSupplierInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// VmiBasSupplierInfoCollection对应表[TI_IFM_VMI_BAS_SUPPLIER]
    /// </summary>
	public partial class VmiBasSupplierInfoCollection : BusinessObjectCollection<VmiBasSupplierInfo>
	{
		public VmiBasSupplierInfoCollection():base("TI_IFM_VMI_BAS_SUPPLIER"){}	
	}
}
