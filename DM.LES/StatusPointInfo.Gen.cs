#region Declaim
//---------------------------------------------------------------------------
// Name:		StatusPointInfo
// Function: 	Expose data in table StatusPoint from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年6月29日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// StatusPointInfo对应表[TM_BAS_STATUS_POINT]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class StatusPointInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public StatusPointInfo( 
					long aId,

					Guid aFid,

					string aStatusPointCode,

					string aStatusPointName,

					int aStatusPointSeq,

					string aScanPointCode,

					string aLocation,

					string aWorkshopSection,

					string aAssemblyLine,

					string aWorkshop,

					string aPlant,

					string aComments,

					bool aAssemblyLineFixedFlag,

					bool aValidFlag,

					DateTime aCreateDate,

					string aCreateUser,

					DateTime aModifyDate,

					string aModifyUser

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			StatusPointCode = aStatusPointCode;
		 
			StatusPointName = aStatusPointName;
		 
			StatusPointSeq = aStatusPointSeq;
		 
			ScanPointCode = aScanPointCode;
		 
			Location = aLocation;
		 
			WorkshopSection = aWorkshopSection;
		 
			AssemblyLine = aAssemblyLine;
		 
			Workshop = aWorkshop;
		 
			Plant = aPlant;
		 
			Comments = aComments;
		 
			AssemblyLineFixedFlag = aAssemblyLineFixedFlag;
		 
			ValidFlag = aValidFlag;
		 
			CreateDate = aCreateDate;
		 
			CreateUser = aCreateUser;
		 
			ModifyDate = aModifyDate;
		 
			ModifyUser = aModifyUser;
		}
		
		public StatusPointInfo():base("TM_BAS_STATUS_POINT")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                 _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField STATUS_POINT_CODEField = new DataSchemaField();
			STATUS_POINT_CODEField.Name = "STATUS_POINT_CODE";
			STATUS_POINT_CODEField.Type = typeof(string).ToString();
			STATUS_POINT_CODEField.Index = 2;
			fields.Add(STATUS_POINT_CODEField);
			 
			DataSchemaField STATUS_POINT_NAMEField = new DataSchemaField();
			STATUS_POINT_NAMEField.Name = "STATUS_POINT_NAME";
			STATUS_POINT_NAMEField.Type = typeof(string).ToString();
			STATUS_POINT_NAMEField.Index = 3;
			fields.Add(STATUS_POINT_NAMEField);
			 
			DataSchemaField STATUS_POINT_SEQField = new DataSchemaField();
			STATUS_POINT_SEQField.Name = "STATUS_POINT_SEQ";
			STATUS_POINT_SEQField.Type = typeof(int).ToString();
			STATUS_POINT_SEQField.Index = 4;
			fields.Add(STATUS_POINT_SEQField);
			 
			DataSchemaField SCAN_POINT_CODEField = new DataSchemaField();
			SCAN_POINT_CODEField.Name = "SCAN_POINT_CODE";
			SCAN_POINT_CODEField.Type = typeof(string).ToString();
			SCAN_POINT_CODEField.Index = 5;
			fields.Add(SCAN_POINT_CODEField);
			 
			DataSchemaField LOCATIONField = new DataSchemaField();
			LOCATIONField.Name = "LOCATION";
			LOCATIONField.Type = typeof(string).ToString();
			LOCATIONField.Index = 6;
			fields.Add(LOCATIONField);
			 
			DataSchemaField WORKSHOP_SECTIONField = new DataSchemaField();
			WORKSHOP_SECTIONField.Name = "WORKSHOP_SECTION";
			WORKSHOP_SECTIONField.Type = typeof(string).ToString();
			WORKSHOP_SECTIONField.Index = 7;
			fields.Add(WORKSHOP_SECTIONField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 8;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField WORKSHOPField = new DataSchemaField();
			WORKSHOPField.Name = "WORKSHOP";
			WORKSHOPField.Type = typeof(string).ToString();
			WORKSHOPField.Index = 9;
			fields.Add(WORKSHOPField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 10;
			fields.Add(PLANTField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 11;
			fields.Add(COMMENTSField);
			 
			DataSchemaField ASSEMBLY_LINE_FIXED_FLAGField = new DataSchemaField();
			ASSEMBLY_LINE_FIXED_FLAGField.Name = "ASSEMBLY_LINE_FIXED_FLAG";
			ASSEMBLY_LINE_FIXED_FLAGField.Type = typeof(bool).ToString();
			ASSEMBLY_LINE_FIXED_FLAGField.Index = 12;
			fields.Add(ASSEMBLY_LINE_FIXED_FLAGField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 13;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 14;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 15;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 16;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 17;
			fields.Add(MODIFY_USERField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public string StatusPointCode{ get;set; }		
				
		[DataMember]
		public string StatusPointName{ get;set; }		
				
		[DataMember]
		public int? StatusPointSeq{ get;set; }		
				
		[DataMember]
		public string ScanPointCode{ get;set; }		
				
		[DataMember]
		public string Location{ get;set; }		
				
		[DataMember]
		public string WorkshopSection{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string Workshop{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public bool? AssemblyLineFixedFlag{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			StatusPointInfo info = new StatusPointInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.StatusPointCode = this.StatusPointCode;
			info.StatusPointName = this.StatusPointName;
			info.StatusPointSeq = this.StatusPointSeq;
			info.ScanPointCode = this.ScanPointCode;
			info.Location = this.Location;
			info.WorkshopSection = this.WorkshopSection;
			info.AssemblyLine = this.AssemblyLine;
			info.Workshop = this.Workshop;
			info.Plant = this.Plant;
			info.Comments = this.Comments;
			info.AssemblyLineFixedFlag = this.AssemblyLineFixedFlag;
			info.ValidFlag = this.ValidFlag;
			info.CreateDate = this.CreateDate;
			info.CreateUser = this.CreateUser;
			info.ModifyDate = this.ModifyDate;
			info.ModifyUser = this.ModifyUser;
			return info;			
		}
		 
		public StatusPointInfo Clone()
		{
			return ((ICloneable) this).Clone() as StatusPointInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// StatusPointInfoCollection对应表[TM_BAS_STATUS_POINT]
    /// </summary>
	public partial class StatusPointInfoCollection : BusinessObjectCollection<StatusPointInfo>
	{
		public StatusPointInfoCollection():base("TM_BAS_STATUS_POINT"){}	
	}
}
