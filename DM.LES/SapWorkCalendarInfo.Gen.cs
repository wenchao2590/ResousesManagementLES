#region Declaim
//---------------------------------------------------------------------------
// Name:		SapWorkCalendarInfo
// Function: 	Expose data in table SapWorkCalendar from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月5日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// SapWorkCalendarInfo对应表[TI_IFM_SAP_WORK_CALENDAR]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class SapWorkCalendarInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public SapWorkCalendarInfo( 
					long aId,

					Guid aFid,

					Guid aLogFid,

					string aDwerk,

					string aZcj,

					string aLineNo,

					DateTime aProductionDate,

					string aShift,

					DateTime aBeginTime,

					DateTime aEndTime,

					int aMinCapacity,

					int aMaxCapacity,

					string aVersion,

					int aProcessFlag,

					DateTime aProcessTime,

					bool aValidFlag,

					DateTime aCreateDate,

					string aCreateUser,

					DateTime aModifyDate,

					string aModifyUser,

					string aComments

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			LogFid = aLogFid;
		 
			Dwerk = aDwerk;
		 
			Zcj = aZcj;
		 
			LineNo = aLineNo;
		 
			ProductionDate = aProductionDate;
		 
			Shift = aShift;
		 
			BeginTime = aBeginTime;
		 
			EndTime = aEndTime;
		 
			MinCapacity = aMinCapacity;
		 
			MaxCapacity = aMaxCapacity;
		 
			Version = aVersion;
		 
			ProcessFlag = aProcessFlag;
		 
			ProcessTime = aProcessTime;
		 
			ValidFlag = aValidFlag;
		 
			CreateDate = aCreateDate;
		 
			CreateUser = aCreateUser;
		 
			ModifyDate = aModifyDate;
		 
			ModifyUser = aModifyUser;
		 
			Comments = aComments;
		}
		
		public SapWorkCalendarInfo():base("TI_IFM_SAP_WORK_CALENDAR")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                    _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField LOG_FIDField = new DataSchemaField();
			LOG_FIDField.Name = "LOG_FID";
			LOG_FIDField.Type = typeof(Guid).ToString();
			LOG_FIDField.Index = 2;
			fields.Add(LOG_FIDField);
			 
			DataSchemaField DWERKField = new DataSchemaField();
			DWERKField.Name = "DWERK";
			DWERKField.Type = typeof(string).ToString();
			DWERKField.Index = 3;
			fields.Add(DWERKField);
			 
			DataSchemaField ZCJField = new DataSchemaField();
			ZCJField.Name = "ZCJ";
			ZCJField.Type = typeof(string).ToString();
			ZCJField.Index = 4;
			fields.Add(ZCJField);
			 
			DataSchemaField LINE_NOField = new DataSchemaField();
			LINE_NOField.Name = "LINE_NO";
			LINE_NOField.Type = typeof(string).ToString();
			LINE_NOField.Index = 5;
			fields.Add(LINE_NOField);
			 
			DataSchemaField PRODUCTION_DATEField = new DataSchemaField();
			PRODUCTION_DATEField.Name = "PRODUCTION_DATE";
			PRODUCTION_DATEField.Type = typeof(DateTime).ToString();
			PRODUCTION_DATEField.Index = 6;
			fields.Add(PRODUCTION_DATEField);
			 
			DataSchemaField SHIFTField = new DataSchemaField();
			SHIFTField.Name = "SHIFT";
			SHIFTField.Type = typeof(string).ToString();
			SHIFTField.Index = 7;
			fields.Add(SHIFTField);
			 
			DataSchemaField BEGIN_TIMEField = new DataSchemaField();
			BEGIN_TIMEField.Name = "BEGIN_TIME";
			BEGIN_TIMEField.Type = typeof(DateTime).ToString();
			BEGIN_TIMEField.Index = 8;
			fields.Add(BEGIN_TIMEField);
			 
			DataSchemaField END_TIMEField = new DataSchemaField();
			END_TIMEField.Name = "END_TIME";
			END_TIMEField.Type = typeof(DateTime).ToString();
			END_TIMEField.Index = 9;
			fields.Add(END_TIMEField);
			 
			DataSchemaField MIN_CAPACITYField = new DataSchemaField();
			MIN_CAPACITYField.Name = "MIN_CAPACITY";
			MIN_CAPACITYField.Type = typeof(int).ToString();
			MIN_CAPACITYField.Index = 10;
			fields.Add(MIN_CAPACITYField);
			 
			DataSchemaField MAX_CAPACITYField = new DataSchemaField();
			MAX_CAPACITYField.Name = "MAX_CAPACITY";
			MAX_CAPACITYField.Type = typeof(int).ToString();
			MAX_CAPACITYField.Index = 11;
			fields.Add(MAX_CAPACITYField);
			 
			DataSchemaField VERSIONField = new DataSchemaField();
			VERSIONField.Name = "VERSION";
			VERSIONField.Type = typeof(string).ToString();
			VERSIONField.Index = 12;
			fields.Add(VERSIONField);
			 
			DataSchemaField PROCESS_FLAGField = new DataSchemaField();
			PROCESS_FLAGField.Name = "PROCESS_FLAG";
			PROCESS_FLAGField.Type = typeof(int).ToString();
			PROCESS_FLAGField.Index = 13;
			fields.Add(PROCESS_FLAGField);
			 
			DataSchemaField PROCESS_TIMEField = new DataSchemaField();
			PROCESS_TIMEField.Name = "PROCESS_TIME";
			PROCESS_TIMEField.Type = typeof(DateTime).ToString();
			PROCESS_TIMEField.Index = 14;
			fields.Add(PROCESS_TIMEField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 15;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 16;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 17;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 18;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 19;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 20;
			fields.Add(COMMENTSField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public Guid? LogFid{ get;set; }		
				
		[DataMember]
		public string Dwerk{ get;set; }		
				
		[DataMember]
		public string Zcj{ get;set; }		
				
		[DataMember]
		public string LineNo{ get;set; }		
				
		[DataMember]
		public DateTime? ProductionDate{ get;set; }		
				
		[DataMember]
		public string Shift{ get;set; }		
				
		[DataMember]
		public DateTime? BeginTime{ get;set; }		
				
		[DataMember]
		public DateTime? EndTime{ get;set; }		
				
		[DataMember]
		public int? MinCapacity{ get;set; }		
				
		[DataMember]
		public int? MaxCapacity{ get;set; }		
				
		[DataMember]
		public string Version{ get;set; }		
				
		[DataMember]
		public int? ProcessFlag{ get;set; }		
				
		[DataMember]
		public DateTime? ProcessTime{ get;set; }		
				
		[DataMember]
		public bool ValidFlag{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			SapWorkCalendarInfo info = new SapWorkCalendarInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.LogFid = this.LogFid;
			info.Dwerk = this.Dwerk;
			info.Zcj = this.Zcj;
			info.LineNo = this.LineNo;
			info.ProductionDate = this.ProductionDate;
			info.Shift = this.Shift;
			info.BeginTime = this.BeginTime;
			info.EndTime = this.EndTime;
			info.MinCapacity = this.MinCapacity;
			info.MaxCapacity = this.MaxCapacity;
			info.Version = this.Version;
			info.ProcessFlag = this.ProcessFlag;
			info.ProcessTime = this.ProcessTime;
			info.ValidFlag = this.ValidFlag;
			info.CreateDate = this.CreateDate;
			info.CreateUser = this.CreateUser;
			info.ModifyDate = this.ModifyDate;
			info.ModifyUser = this.ModifyUser;
			info.Comments = this.Comments;
			return info;			
		}
		 
		public SapWorkCalendarInfo Clone()
		{
			return ((ICloneable) this).Clone() as SapWorkCalendarInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// SapWorkCalendarInfoCollection对应表[TI_IFM_SAP_WORK_CALENDAR]
    /// </summary>
	public partial class SapWorkCalendarInfoCollection : BusinessObjectCollection<SapWorkCalendarInfo>
	{
		public SapWorkCalendarInfoCollection():base("TI_IFM_SAP_WORK_CALENDAR"){}	
	}
}
