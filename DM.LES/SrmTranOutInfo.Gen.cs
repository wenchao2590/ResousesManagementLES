#region Declaim
//---------------------------------------------------------------------------
// Name:		SrmTranOutInfo
// Function: 	Expose data in table SrmTranOut from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月24日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// SrmTranOutInfo对应表[TI_IFM_SRM_TRAN_OUT]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class SrmTranOutInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public SrmTranOutInfo( 
					long aId,

					Guid aFid,

					Guid aLogFid,

					string aSourceOrderCode,

					int aSourceOrderType,

					string aPartNo,

					decimal aDeliveryQty,

					int aProcessFlag,

					DateTime aProcessTime,

					string aComments,

					bool aValidFlag,

					DateTime aCreateDate,

					string aCreateUser,

					DateTime aModifyDate,

					string aModifyUser

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			LogFid = aLogFid;
		 
			SourceOrderCode = aSourceOrderCode;
		 
			SourceOrderType = aSourceOrderType;
		 
			PartNo = aPartNo;
		 
			DeliveryQty = aDeliveryQty;
		 
			ProcessFlag = aProcessFlag;
		 
			ProcessTime = aProcessTime;
		 
			Comments = aComments;
		 
			ValidFlag = aValidFlag;
		 
			CreateDate = aCreateDate;
		 
			CreateUser = aCreateUser;
		 
			ModifyDate = aModifyDate;
		 
			ModifyUser = aModifyUser;
		}
		
		public SrmTranOutInfo():base("TI_IFM_SRM_TRAN_OUT")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");              _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField LOG_FIDField = new DataSchemaField();
			LOG_FIDField.Name = "LOG_FID";
			LOG_FIDField.Type = typeof(Guid).ToString();
			LOG_FIDField.Index = 2;
			fields.Add(LOG_FIDField);
			 
			DataSchemaField SOURCE_ORDER_CODEField = new DataSchemaField();
			SOURCE_ORDER_CODEField.Name = "SOURCE_ORDER_CODE";
			SOURCE_ORDER_CODEField.Type = typeof(string).ToString();
			SOURCE_ORDER_CODEField.Index = 3;
			fields.Add(SOURCE_ORDER_CODEField);
			 
			DataSchemaField SOURCE_ORDER_TYPEField = new DataSchemaField();
			SOURCE_ORDER_TYPEField.Name = "SOURCE_ORDER_TYPE";
			SOURCE_ORDER_TYPEField.Type = typeof(int).ToString();
			SOURCE_ORDER_TYPEField.Index = 4;
			fields.Add(SOURCE_ORDER_TYPEField);
			 
			DataSchemaField PART_NOField = new DataSchemaField();
			PART_NOField.Name = "PART_NO";
			PART_NOField.Type = typeof(string).ToString();
			PART_NOField.Index = 5;
			fields.Add(PART_NOField);
			 
			DataSchemaField DELIVERY_QTYField = new DataSchemaField();
			DELIVERY_QTYField.Name = "DELIVERY_QTY";
			DELIVERY_QTYField.Type = typeof(decimal).ToString();
			DELIVERY_QTYField.Index = 6;
			fields.Add(DELIVERY_QTYField);
			 
			DataSchemaField PROCESS_FLAGField = new DataSchemaField();
			PROCESS_FLAGField.Name = "PROCESS_FLAG";
			PROCESS_FLAGField.Type = typeof(int).ToString();
			PROCESS_FLAGField.Index = 7;
			fields.Add(PROCESS_FLAGField);
			 
			DataSchemaField PROCESS_TIMEField = new DataSchemaField();
			PROCESS_TIMEField.Name = "PROCESS_TIME";
			PROCESS_TIMEField.Type = typeof(DateTime).ToString();
			PROCESS_TIMEField.Index = 8;
			fields.Add(PROCESS_TIMEField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 9;
			fields.Add(COMMENTSField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 10;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 11;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 12;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 13;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 14;
			fields.Add(MODIFY_USERField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public Guid? LogFid{ get;set; }		
				
		[DataMember]
		public string SourceOrderCode{ get;set; }		
				
		[DataMember]
		public int? SourceOrderType{ get;set; }		
				
		[DataMember]
		public string PartNo{ get;set; }		
				
		[DataMember]
		public decimal? DeliveryQty{ get;set; }		
				
		[DataMember]
		public int? ProcessFlag{ get;set; }		
				
		[DataMember]
		public DateTime? ProcessTime{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			SrmTranOutInfo info = new SrmTranOutInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.LogFid = this.LogFid;
			info.SourceOrderCode = this.SourceOrderCode;
			info.SourceOrderType = this.SourceOrderType;
			info.PartNo = this.PartNo;
			info.DeliveryQty = this.DeliveryQty;
			info.ProcessFlag = this.ProcessFlag;
			info.ProcessTime = this.ProcessTime;
			info.Comments = this.Comments;
			info.ValidFlag = this.ValidFlag;
			info.CreateDate = this.CreateDate;
			info.CreateUser = this.CreateUser;
			info.ModifyDate = this.ModifyDate;
			info.ModifyUser = this.ModifyUser;
			return info;			
		}
		 
		public SrmTranOutInfo Clone()
		{
			return ((ICloneable) this).Clone() as SrmTranOutInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// SrmTranOutInfoCollection对应表[TI_IFM_SRM_TRAN_OUT]
    /// </summary>
	public partial class SrmTranOutInfoCollection : BusinessObjectCollection<SrmTranOutInfo>
	{
		public SrmTranOutInfoCollection():base("TI_IFM_SRM_TRAN_OUT"){}	
	}
}
