#region Declaim
//---------------------------------------------------------------------------
// Name:		PartPullInfo
// Function: 	Expose data in table PartPull from database as business object to MES system.
// Tool:		T4
// CreateDate:	2017年12月22日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// PartPullInfo对应表[TM_EPS_PART_PULL]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class PartPullInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public PartPullInfo( 
					string aPartNo,

					string aPlant,

					string aAssemblyLine,

					string aLocation,

					string aDPlant,

					string aDAssemblyLine,

					string aDLocation,

					string aEPlant,

					string aEAssemblyLine,

					string aELocation,

					int aUsage,

					int aPackage,

					string aScreenLocation,

					int aPullType,

					int aCombinationType,

					int aDeliverTime,

					int aAlarmTime,

					int aTriggerStatus,

					string aButtonId,

					string aBahnhofNo,

					string aRoute,

					string aDolly,

					string aComments,

					string aTargetZone,

					string aTargetWm,

					DateTime aCreateDate,

					int aRelationId,

					string aCreateUser,

					DateTime aUpdateDate,

					string aUpdateUser

				 
		) : this()
		{
			 
			PartNo = aPartNo;
		 
			Plant = aPlant;
		 
			AssemblyLine = aAssemblyLine;
		 
			Location = aLocation;
		 
			DPlant = aDPlant;
		 
			DAssemblyLine = aDAssemblyLine;
		 
			DLocation = aDLocation;
		 
			EPlant = aEPlant;
		 
			EAssemblyLine = aEAssemblyLine;
		 
			ELocation = aELocation;
		 
			Usage = aUsage;
		 
			Package = aPackage;
		 
			ScreenLocation = aScreenLocation;
		 
			PullType = aPullType;
		 
			CombinationType = aCombinationType;
		 
			DeliverTime = aDeliverTime;
		 
			AlarmTime = aAlarmTime;
		 
			TriggerStatus = aTriggerStatus;
		 
			ButtonId = aButtonId;
		 
			BahnhofNo = aBahnhofNo;
		 
			Route = aRoute;
		 
			Dolly = aDolly;
		 
			Comments = aComments;
		 
			TargetZone = aTargetZone;
		 
			TargetWm = aTargetWm;
		 
			CreateDate = aCreateDate;
		 
			RelationId = aRelationId;
		 
			CreateUser = aCreateUser;
		 
			UpdateDate = aUpdateDate;
		 
			UpdateUser = aUpdateUser;
		}
		
		public PartPullInfo():base("TM_EPS_PART_PULL")
		{
			List<string> keys = new List<string>();
			                           			keys.Add("RELATION_ID");   _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField PART_NOField = new DataSchemaField();
			PART_NOField.Name = "PART_NO";
			PART_NOField.Type = typeof(string).ToString();
			PART_NOField.Index = 0;
			fields.Add(PART_NOField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 1;
			fields.Add(PLANTField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 2;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField LOCATIONField = new DataSchemaField();
			LOCATIONField.Name = "LOCATION";
			LOCATIONField.Type = typeof(string).ToString();
			LOCATIONField.Index = 3;
			fields.Add(LOCATIONField);
			 
			DataSchemaField D_PLANTField = new DataSchemaField();
			D_PLANTField.Name = "D_PLANT";
			D_PLANTField.Type = typeof(string).ToString();
			D_PLANTField.Index = 4;
			fields.Add(D_PLANTField);
			 
			DataSchemaField D_ASSEMBLY_LINEField = new DataSchemaField();
			D_ASSEMBLY_LINEField.Name = "D_ASSEMBLY_LINE";
			D_ASSEMBLY_LINEField.Type = typeof(string).ToString();
			D_ASSEMBLY_LINEField.Index = 5;
			fields.Add(D_ASSEMBLY_LINEField);
			 
			DataSchemaField D_LOCATIONField = new DataSchemaField();
			D_LOCATIONField.Name = "D_LOCATION";
			D_LOCATIONField.Type = typeof(string).ToString();
			D_LOCATIONField.Index = 6;
			fields.Add(D_LOCATIONField);
			 
			DataSchemaField E_PLANTField = new DataSchemaField();
			E_PLANTField.Name = "E_PLANT";
			E_PLANTField.Type = typeof(string).ToString();
			E_PLANTField.Index = 7;
			fields.Add(E_PLANTField);
			 
			DataSchemaField E_ASSEMBLY_LINEField = new DataSchemaField();
			E_ASSEMBLY_LINEField.Name = "E_ASSEMBLY_LINE";
			E_ASSEMBLY_LINEField.Type = typeof(string).ToString();
			E_ASSEMBLY_LINEField.Index = 8;
			fields.Add(E_ASSEMBLY_LINEField);
			 
			DataSchemaField E_LOCATIONField = new DataSchemaField();
			E_LOCATIONField.Name = "E_LOCATION";
			E_LOCATIONField.Type = typeof(string).ToString();
			E_LOCATIONField.Index = 9;
			fields.Add(E_LOCATIONField);
			 
			DataSchemaField USAGEField = new DataSchemaField();
			USAGEField.Name = "USAGE";
			USAGEField.Type = typeof(int).ToString();
			USAGEField.Index = 10;
			fields.Add(USAGEField);
			 
			DataSchemaField PACKAGEField = new DataSchemaField();
			PACKAGEField.Name = "PACKAGE";
			PACKAGEField.Type = typeof(int).ToString();
			PACKAGEField.Index = 11;
			fields.Add(PACKAGEField);
			 
			DataSchemaField SCREEN_LOCATIONField = new DataSchemaField();
			SCREEN_LOCATIONField.Name = "SCREEN_LOCATION";
			SCREEN_LOCATIONField.Type = typeof(string).ToString();
			SCREEN_LOCATIONField.Index = 12;
			fields.Add(SCREEN_LOCATIONField);
			 
			DataSchemaField PULL_TYPEField = new DataSchemaField();
			PULL_TYPEField.Name = "PULL_TYPE";
			PULL_TYPEField.Type = typeof(int).ToString();
			PULL_TYPEField.Index = 13;
			fields.Add(PULL_TYPEField);
			 
			DataSchemaField COMBINATION_TYPEField = new DataSchemaField();
			COMBINATION_TYPEField.Name = "COMBINATION_TYPE";
			COMBINATION_TYPEField.Type = typeof(int).ToString();
			COMBINATION_TYPEField.Index = 14;
			fields.Add(COMBINATION_TYPEField);
			 
			DataSchemaField DELIVER_TIMEField = new DataSchemaField();
			DELIVER_TIMEField.Name = "DELIVER_TIME";
			DELIVER_TIMEField.Type = typeof(int).ToString();
			DELIVER_TIMEField.Index = 15;
			fields.Add(DELIVER_TIMEField);
			 
			DataSchemaField ALARM_TIMEField = new DataSchemaField();
			ALARM_TIMEField.Name = "ALARM_TIME";
			ALARM_TIMEField.Type = typeof(int).ToString();
			ALARM_TIMEField.Index = 16;
			fields.Add(ALARM_TIMEField);
			 
			DataSchemaField TRIGGER_STATUSField = new DataSchemaField();
			TRIGGER_STATUSField.Name = "TRIGGER_STATUS";
			TRIGGER_STATUSField.Type = typeof(int).ToString();
			TRIGGER_STATUSField.Index = 17;
			fields.Add(TRIGGER_STATUSField);
			 
			DataSchemaField BUTTON_IDField = new DataSchemaField();
			BUTTON_IDField.Name = "BUTTON_ID";
			BUTTON_IDField.Type = typeof(string).ToString();
			BUTTON_IDField.Index = 18;
			fields.Add(BUTTON_IDField);
			 
			DataSchemaField BAHNHOF_NOField = new DataSchemaField();
			BAHNHOF_NOField.Name = "BAHNHOF_NO";
			BAHNHOF_NOField.Type = typeof(string).ToString();
			BAHNHOF_NOField.Index = 19;
			fields.Add(BAHNHOF_NOField);
			 
			DataSchemaField ROUTEField = new DataSchemaField();
			ROUTEField.Name = "ROUTE";
			ROUTEField.Type = typeof(string).ToString();
			ROUTEField.Index = 20;
			fields.Add(ROUTEField);
			 
			DataSchemaField DOLLYField = new DataSchemaField();
			DOLLYField.Name = "DOLLY";
			DOLLYField.Type = typeof(string).ToString();
			DOLLYField.Index = 21;
			fields.Add(DOLLYField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 22;
			fields.Add(COMMENTSField);
			 
			DataSchemaField TARGET_ZONEField = new DataSchemaField();
			TARGET_ZONEField.Name = "TARGET_ZONE";
			TARGET_ZONEField.Type = typeof(string).ToString();
			TARGET_ZONEField.Index = 23;
			fields.Add(TARGET_ZONEField);
			 
			DataSchemaField TARGET_WMField = new DataSchemaField();
			TARGET_WMField.Name = "TARGET_WM";
			TARGET_WMField.Type = typeof(string).ToString();
			TARGET_WMField.Index = 24;
			fields.Add(TARGET_WMField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 25;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField RELATION_IDField = new DataSchemaField();
			RELATION_IDField.Name = "RELATION_ID";
			RELATION_IDField.Type = typeof(int).ToString();
			RELATION_IDField.Index = 26;
			fields.Add(RELATION_IDField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 27;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField UPDATE_DATEField = new DataSchemaField();
			UPDATE_DATEField.Name = "UPDATE_DATE";
			UPDATE_DATEField.Type = typeof(DateTime).ToString();
			UPDATE_DATEField.Index = 28;
			fields.Add(UPDATE_DATEField);
			 
			DataSchemaField UPDATE_USERField = new DataSchemaField();
			UPDATE_USERField.Name = "UPDATE_USER";
			UPDATE_USERField.Type = typeof(string).ToString();
			UPDATE_USERField.Index = 29;
			fields.Add(UPDATE_USERField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public string PartNo{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string Location{ get;set; }		
				
		[DataMember]
		public string DPlant{ get;set; }		
				
		[DataMember]
		public string DAssemblyLine{ get;set; }		
				
		[DataMember]
		public string DLocation{ get;set; }		
				
		[DataMember]
		public string EPlant{ get;set; }		
				
		[DataMember]
		public string EAssemblyLine{ get;set; }		
				
		[DataMember]
		public string ELocation{ get;set; }		
				
		[DataMember]
		public int? Usage{ get;set; }		
				
		[DataMember]
		public int? Package{ get;set; }		
				
		[DataMember]
		public string ScreenLocation{ get;set; }		
				
		[DataMember]
		public int PullType{ get;set; }		
				
		[DataMember]
		public int CombinationType{ get;set; }		
				
		[DataMember]
		public int DeliverTime{ get;set; }		
				
		[DataMember]
		public int AlarmTime{ get;set; }		
				
		[DataMember]
		public int TriggerStatus{ get;set; }		
				
		[DataMember]
		public string ButtonId{ get;set; }		
				
		[DataMember]
		public string BahnhofNo{ get;set; }		
				
		[DataMember]
		public string Route{ get;set; }		
				
		[DataMember]
		public string Dolly{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public string TargetZone{ get;set; }		
				
		[DataMember]
		public string TargetWm{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public int RelationId{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? UpdateDate{ get;set; }		
				
		[DataMember]
		public string UpdateUser{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			PartPullInfo info = new PartPullInfo();

			info.PartNo = this.PartNo;
			info.Plant = this.Plant;
			info.AssemblyLine = this.AssemblyLine;
			info.Location = this.Location;
			info.DPlant = this.DPlant;
			info.DAssemblyLine = this.DAssemblyLine;
			info.DLocation = this.DLocation;
			info.EPlant = this.EPlant;
			info.EAssemblyLine = this.EAssemblyLine;
			info.ELocation = this.ELocation;
			info.Usage = this.Usage;
			info.Package = this.Package;
			info.ScreenLocation = this.ScreenLocation;
			info.PullType = this.PullType;
			info.CombinationType = this.CombinationType;
			info.DeliverTime = this.DeliverTime;
			info.AlarmTime = this.AlarmTime;
			info.TriggerStatus = this.TriggerStatus;
			info.ButtonId = this.ButtonId;
			info.BahnhofNo = this.BahnhofNo;
			info.Route = this.Route;
			info.Dolly = this.Dolly;
			info.Comments = this.Comments;
			info.TargetZone = this.TargetZone;
			info.TargetWm = this.TargetWm;
			info.CreateDate = this.CreateDate;
			info.RelationId = this.RelationId;
			info.CreateUser = this.CreateUser;
			info.UpdateDate = this.UpdateDate;
			info.UpdateUser = this.UpdateUser;
			return info;			
		}
		 
		public PartPullInfo Clone()
		{
			return ((ICloneable) this).Clone() as PartPullInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// PartPullInfoCollection对应表[TM_EPS_PART_PULL]
    /// </summary>
	public partial class PartPullInfoCollection : BusinessObjectCollection<PartPullInfo>
	{
		public PartPullInfoCollection():base("TM_EPS_PART_PULL"){}	
	}
}
