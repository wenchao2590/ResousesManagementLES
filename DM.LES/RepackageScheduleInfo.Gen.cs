#region Declaim
//---------------------------------------------------------------------------
// Name:		RepackageScheduleInfo
// Function: 	Expose data in table RepackageSchedule from database as business object to MES system.
// Tool:		T4
// CreateDate:	2017年12月21日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// RepackageScheduleInfo对应表[TT_WMM_REPACKAGE_SCHEDULE]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class RepackageScheduleInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public RepackageScheduleInfo( 
					int aScheduleIdentity,

					string aPlant,

					string aAssemblyLine,

					string aWorkshop,

					string aPlantZone,

					string aRoutes,

					string aWindowsTime,

					int aIsActive,

					DateTime aLastRun,

					string aComments,

					string aCreateUser,

					DateTime aCreateDate,

					string aUpdateUser,

					DateTime aUpdateDate

				 
		) : this()
		{
			 
			ScheduleIdentity = aScheduleIdentity;
		 
			Plant = aPlant;
		 
			AssemblyLine = aAssemblyLine;
		 
			Workshop = aWorkshop;
		 
			PlantZone = aPlantZone;
		 
			Routes = aRoutes;
		 
			WindowsTime = aWindowsTime;
		 
			IsActive = aIsActive;
		 
			LastRun = aLastRun;
		 
			Comments = aComments;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			UpdateUser = aUpdateUser;
		 
			UpdateDate = aUpdateDate;
		}
		
		public RepackageScheduleInfo():base("TT_WMM_REPACKAGE_SCHEDULE")
		{
			List<string> keys = new List<string>();
			 			keys.Add("SCHEDULE_IDENTITY");             _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField SCHEDULE_IDENTITYField = new DataSchemaField();
			SCHEDULE_IDENTITYField.Name = "SCHEDULE_IDENTITY";
			SCHEDULE_IDENTITYField.Type = typeof(int).ToString();
			SCHEDULE_IDENTITYField.Index = 0;
			fields.Add(SCHEDULE_IDENTITYField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 1;
			fields.Add(PLANTField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 2;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField WORKSHOPField = new DataSchemaField();
			WORKSHOPField.Name = "WORKSHOP";
			WORKSHOPField.Type = typeof(string).ToString();
			WORKSHOPField.Index = 3;
			fields.Add(WORKSHOPField);
			 
			DataSchemaField PLANT_ZONEField = new DataSchemaField();
			PLANT_ZONEField.Name = "PLANT_ZONE";
			PLANT_ZONEField.Type = typeof(string).ToString();
			PLANT_ZONEField.Index = 4;
			fields.Add(PLANT_ZONEField);
			 
			DataSchemaField ROUTESField = new DataSchemaField();
			ROUTESField.Name = "ROUTES";
			ROUTESField.Type = typeof(string).ToString();
			ROUTESField.Index = 5;
			fields.Add(ROUTESField);
			 
			DataSchemaField WINDOWS_TIMEField = new DataSchemaField();
			WINDOWS_TIMEField.Name = "WINDOWS_TIME";
			WINDOWS_TIMEField.Type = typeof(string).ToString();
			WINDOWS_TIMEField.Index = 6;
			fields.Add(WINDOWS_TIMEField);
			 
			DataSchemaField IS_ACTIVEField = new DataSchemaField();
			IS_ACTIVEField.Name = "IS_ACTIVE";
			IS_ACTIVEField.Type = typeof(int).ToString();
			IS_ACTIVEField.Index = 7;
			fields.Add(IS_ACTIVEField);
			 
			DataSchemaField LAST_RUNField = new DataSchemaField();
			LAST_RUNField.Name = "LAST_RUN";
			LAST_RUNField.Type = typeof(DateTime).ToString();
			LAST_RUNField.Index = 8;
			fields.Add(LAST_RUNField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 9;
			fields.Add(COMMENTSField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 10;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 11;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField UPDATE_USERField = new DataSchemaField();
			UPDATE_USERField.Name = "UPDATE_USER";
			UPDATE_USERField.Type = typeof(string).ToString();
			UPDATE_USERField.Index = 12;
			fields.Add(UPDATE_USERField);
			 
			DataSchemaField UPDATE_DATEField = new DataSchemaField();
			UPDATE_DATEField.Name = "UPDATE_DATE";
			UPDATE_DATEField.Type = typeof(DateTime).ToString();
			UPDATE_DATEField.Index = 13;
			fields.Add(UPDATE_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public int ScheduleIdentity{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string Workshop{ get;set; }		
				
		[DataMember]
		public string PlantZone{ get;set; }		
				
		[DataMember]
		public string Routes{ get;set; }		
				
				
		private string _WindowsTime = "00:00";
		
		[DataMember]	
		public string WindowsTime
		{
			get
			{
				return _WindowsTime;
			}
			set
			{
				_WindowsTime = value;
			}
		}
				
				
				
		private int? _IsActive = 1;
		
		[DataMember]	
		public int? IsActive
		{
			get
			{
				return _IsActive;
			}
			set
			{
				_IsActive = value;
			}
		}
				
				
		[DataMember]
		public DateTime? LastRun{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
				
		private DateTime _CreateDate = new DateTime();
		
		[DataMember]	
		public DateTime CreateDate
		{
			get
			{
				return _CreateDate;
			}
			set
			{
				_CreateDate = value;
			}
		}
				
				
		[DataMember]
		public string UpdateUser{ get;set; }		
				
		[DataMember]
		public DateTime? UpdateDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			RepackageScheduleInfo info = new RepackageScheduleInfo();

			info.ScheduleIdentity = this.ScheduleIdentity;
			info.Plant = this.Plant;
			info.AssemblyLine = this.AssemblyLine;
			info.Workshop = this.Workshop;
			info.PlantZone = this.PlantZone;
			info.Routes = this.Routes;
			info.WindowsTime = this.WindowsTime;
			info.IsActive = this.IsActive;
			info.LastRun = this.LastRun;
			info.Comments = this.Comments;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.UpdateUser = this.UpdateUser;
			info.UpdateDate = this.UpdateDate;
			return info;			
		}
		 
		public RepackageScheduleInfo Clone()
		{
			return ((ICloneable) this).Clone() as RepackageScheduleInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// RepackageScheduleInfoCollection对应表[TT_WMM_REPACKAGE_SCHEDULE]
    /// </summary>
	public partial class RepackageScheduleInfoCollection : BusinessObjectCollection<RepackageScheduleInfo>
	{
		public RepackageScheduleInfoCollection():base("TT_WMM_REPACKAGE_SCHEDULE"){}	
	}
}
