#region Declaim
//---------------------------------------------------------------------------
// Name:		PackageTranInfo
// Function: 	Expose data in table PackageTran from database as business object to MES system.
// Tool:		T4
// CreateDate:	2017年12月28日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// PackageTranInfo对应表[TT_RPM_PACKAGE_TRAN]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class PackageTranInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public PackageTranInfo( 
					long aTranId,

					string aTranNo,

					int aTranType,

					string aPlant,

					string aAsnNo,

					int aAsnSn,

					string aWmNo,

					string aZoneNo,

					int aReceiveType,

					DateTime aTranTime,

					string aAssemblyLine,

					string aPlantZone,

					string aWorkshop,

					string aSupplierNum,

					string aTransSupplierNum,

					int aSupplierType,

					int aPackageType,

					int aConfirmFlag,

					string aBookKeeper,

					int aErpFlag,

					string aResourceAddress,

					string aLogicalPk,

					string aBusinessPk,

					string aComments,

					DateTime aUpdateDate,

					string aUpdateUser,

					DateTime aCreateDate,

					string aCreateUser

				 
		) : this()
		{
			 
			TranId = aTranId;
		 
			TranNo = aTranNo;
		 
			TranType = aTranType;
		 
			Plant = aPlant;
		 
			AsnNo = aAsnNo;
		 
			AsnSn = aAsnSn;
		 
			WmNo = aWmNo;
		 
			ZoneNo = aZoneNo;
		 
			ReceiveType = aReceiveType;
		 
			TranTime = aTranTime;
		 
			AssemblyLine = aAssemblyLine;
		 
			PlantZone = aPlantZone;
		 
			Workshop = aWorkshop;
		 
			SupplierNum = aSupplierNum;
		 
			TransSupplierNum = aTransSupplierNum;
		 
			SupplierType = aSupplierType;
		 
			PackageType = aPackageType;
		 
			ConfirmFlag = aConfirmFlag;
		 
			BookKeeper = aBookKeeper;
		 
			ErpFlag = aErpFlag;
		 
			ResourceAddress = aResourceAddress;
		 
			LogicalPk = aLogicalPk;
		 
			BusinessPk = aBusinessPk;
		 
			Comments = aComments;
		 
			UpdateDate = aUpdateDate;
		 
			UpdateUser = aUpdateUser;
		 
			CreateDate = aCreateDate;
		 
			CreateUser = aCreateUser;
		}
		
		public PackageTranInfo():base("TT_RPM_PACKAGE_TRAN")
		{
			List<string> keys = new List<string>();
			 			keys.Add("TRAN_ID");                           _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField TRAN_IDField = new DataSchemaField();
			TRAN_IDField.Name = "TRAN_ID";
			TRAN_IDField.Type = typeof(long).ToString();
			TRAN_IDField.Index = 0;
			fields.Add(TRAN_IDField);
			 
			DataSchemaField TRAN_NOField = new DataSchemaField();
			TRAN_NOField.Name = "TRAN_NO";
			TRAN_NOField.Type = typeof(string).ToString();
			TRAN_NOField.Index = 1;
			fields.Add(TRAN_NOField);
			 
			DataSchemaField TRAN_TYPEField = new DataSchemaField();
			TRAN_TYPEField.Name = "TRAN_TYPE";
			TRAN_TYPEField.Type = typeof(int).ToString();
			TRAN_TYPEField.Index = 2;
			fields.Add(TRAN_TYPEField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 3;
			fields.Add(PLANTField);
			 
			DataSchemaField ASN_NOField = new DataSchemaField();
			ASN_NOField.Name = "ASN_NO";
			ASN_NOField.Type = typeof(string).ToString();
			ASN_NOField.Index = 4;
			fields.Add(ASN_NOField);
			 
			DataSchemaField ASN_SNField = new DataSchemaField();
			ASN_SNField.Name = "ASN_SN";
			ASN_SNField.Type = typeof(int).ToString();
			ASN_SNField.Index = 5;
			fields.Add(ASN_SNField);
			 
			DataSchemaField WM_NOField = new DataSchemaField();
			WM_NOField.Name = "WM_NO";
			WM_NOField.Type = typeof(string).ToString();
			WM_NOField.Index = 6;
			fields.Add(WM_NOField);
			 
			DataSchemaField ZONE_NOField = new DataSchemaField();
			ZONE_NOField.Name = "ZONE_NO";
			ZONE_NOField.Type = typeof(string).ToString();
			ZONE_NOField.Index = 7;
			fields.Add(ZONE_NOField);
			 
			DataSchemaField RECEIVE_TYPEField = new DataSchemaField();
			RECEIVE_TYPEField.Name = "RECEIVE_TYPE";
			RECEIVE_TYPEField.Type = typeof(int).ToString();
			RECEIVE_TYPEField.Index = 8;
			fields.Add(RECEIVE_TYPEField);
			 
			DataSchemaField TRAN_TIMEField = new DataSchemaField();
			TRAN_TIMEField.Name = "TRAN_TIME";
			TRAN_TIMEField.Type = typeof(DateTime).ToString();
			TRAN_TIMEField.Index = 9;
			fields.Add(TRAN_TIMEField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 10;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField PLANT_ZONEField = new DataSchemaField();
			PLANT_ZONEField.Name = "PLANT_ZONE";
			PLANT_ZONEField.Type = typeof(string).ToString();
			PLANT_ZONEField.Index = 11;
			fields.Add(PLANT_ZONEField);
			 
			DataSchemaField WORKSHOPField = new DataSchemaField();
			WORKSHOPField.Name = "WORKSHOP";
			WORKSHOPField.Type = typeof(string).ToString();
			WORKSHOPField.Index = 12;
			fields.Add(WORKSHOPField);
			 
			DataSchemaField SUPPLIER_NUMField = new DataSchemaField();
			SUPPLIER_NUMField.Name = "SUPPLIER_NUM";
			SUPPLIER_NUMField.Type = typeof(string).ToString();
			SUPPLIER_NUMField.Index = 13;
			fields.Add(SUPPLIER_NUMField);
			 
			DataSchemaField TRANS_SUPPLIER_NUMField = new DataSchemaField();
			TRANS_SUPPLIER_NUMField.Name = "TRANS_SUPPLIER_NUM";
			TRANS_SUPPLIER_NUMField.Type = typeof(string).ToString();
			TRANS_SUPPLIER_NUMField.Index = 14;
			fields.Add(TRANS_SUPPLIER_NUMField);
			 
			DataSchemaField SUPPLIER_TYPEField = new DataSchemaField();
			SUPPLIER_TYPEField.Name = "SUPPLIER_TYPE";
			SUPPLIER_TYPEField.Type = typeof(int).ToString();
			SUPPLIER_TYPEField.Index = 15;
			fields.Add(SUPPLIER_TYPEField);
			 
			DataSchemaField PACKAGE_TYPEField = new DataSchemaField();
			PACKAGE_TYPEField.Name = "PACKAGE_TYPE";
			PACKAGE_TYPEField.Type = typeof(int).ToString();
			PACKAGE_TYPEField.Index = 16;
			fields.Add(PACKAGE_TYPEField);
			 
			DataSchemaField CONFIRM_FLAGField = new DataSchemaField();
			CONFIRM_FLAGField.Name = "CONFIRM_FLAG";
			CONFIRM_FLAGField.Type = typeof(int).ToString();
			CONFIRM_FLAGField.Index = 17;
			fields.Add(CONFIRM_FLAGField);
			 
			DataSchemaField BOOK_KEEPERField = new DataSchemaField();
			BOOK_KEEPERField.Name = "BOOK_KEEPER";
			BOOK_KEEPERField.Type = typeof(string).ToString();
			BOOK_KEEPERField.Index = 18;
			fields.Add(BOOK_KEEPERField);
			 
			DataSchemaField ERP_FLAGField = new DataSchemaField();
			ERP_FLAGField.Name = "ERP_FLAG";
			ERP_FLAGField.Type = typeof(int).ToString();
			ERP_FLAGField.Index = 19;
			fields.Add(ERP_FLAGField);
			 
			DataSchemaField RESOURCE_ADDRESSField = new DataSchemaField();
			RESOURCE_ADDRESSField.Name = "RESOURCE_ADDRESS";
			RESOURCE_ADDRESSField.Type = typeof(string).ToString();
			RESOURCE_ADDRESSField.Index = 20;
			fields.Add(RESOURCE_ADDRESSField);
			 
			DataSchemaField LOGICAL_PKField = new DataSchemaField();
			LOGICAL_PKField.Name = "LOGICAL_PK";
			LOGICAL_PKField.Type = typeof(string).ToString();
			LOGICAL_PKField.Index = 21;
			fields.Add(LOGICAL_PKField);
			 
			DataSchemaField BUSINESS_PKField = new DataSchemaField();
			BUSINESS_PKField.Name = "BUSINESS_PK";
			BUSINESS_PKField.Type = typeof(string).ToString();
			BUSINESS_PKField.Index = 22;
			fields.Add(BUSINESS_PKField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 23;
			fields.Add(COMMENTSField);
			 
			DataSchemaField UPDATE_DATEField = new DataSchemaField();
			UPDATE_DATEField.Name = "UPDATE_DATE";
			UPDATE_DATEField.Type = typeof(DateTime).ToString();
			UPDATE_DATEField.Index = 24;
			fields.Add(UPDATE_DATEField);
			 
			DataSchemaField UPDATE_USERField = new DataSchemaField();
			UPDATE_USERField.Name = "UPDATE_USER";
			UPDATE_USERField.Type = typeof(string).ToString();
			UPDATE_USERField.Index = 25;
			fields.Add(UPDATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 26;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 27;
			fields.Add(CREATE_USERField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long TranId{ get;set; }		
				
		[DataMember]
		public string TranNo{ get;set; }		
				
		[DataMember]
		public int TranType{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string AsnNo{ get;set; }		
				
		[DataMember]
		public int? AsnSn{ get;set; }		
				
		[DataMember]
		public string WmNo{ get;set; }		
				
		[DataMember]
		public string ZoneNo{ get;set; }		
				
		[DataMember]
		public int? ReceiveType{ get;set; }		
				
		[DataMember]
		public DateTime TranTime{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string PlantZone{ get;set; }		
				
		[DataMember]
		public string Workshop{ get;set; }		
				
		[DataMember]
		public string SupplierNum{ get;set; }		
				
		[DataMember]
		public string TransSupplierNum{ get;set; }		
				
		[DataMember]
		public int? SupplierType{ get;set; }		
				
		[DataMember]
		public int PackageType{ get;set; }		
				
		[DataMember]
		public int? ConfirmFlag{ get;set; }		
				
		[DataMember]
		public string BookKeeper{ get;set; }		
				
		[DataMember]
		public int? ErpFlag{ get;set; }		
				
		[DataMember]
		public string ResourceAddress{ get;set; }		
				
		[DataMember]
		public string LogicalPk{ get;set; }		
				
		[DataMember]
		public string BusinessPk{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public DateTime? UpdateDate{ get;set; }		
				
		[DataMember]
		public string UpdateUser{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			PackageTranInfo info = new PackageTranInfo();

			info.TranId = this.TranId;
			info.TranNo = this.TranNo;
			info.TranType = this.TranType;
			info.Plant = this.Plant;
			info.AsnNo = this.AsnNo;
			info.AsnSn = this.AsnSn;
			info.WmNo = this.WmNo;
			info.ZoneNo = this.ZoneNo;
			info.ReceiveType = this.ReceiveType;
			info.TranTime = this.TranTime;
			info.AssemblyLine = this.AssemblyLine;
			info.PlantZone = this.PlantZone;
			info.Workshop = this.Workshop;
			info.SupplierNum = this.SupplierNum;
			info.TransSupplierNum = this.TransSupplierNum;
			info.SupplierType = this.SupplierType;
			info.PackageType = this.PackageType;
			info.ConfirmFlag = this.ConfirmFlag;
			info.BookKeeper = this.BookKeeper;
			info.ErpFlag = this.ErpFlag;
			info.ResourceAddress = this.ResourceAddress;
			info.LogicalPk = this.LogicalPk;
			info.BusinessPk = this.BusinessPk;
			info.Comments = this.Comments;
			info.UpdateDate = this.UpdateDate;
			info.UpdateUser = this.UpdateUser;
			info.CreateDate = this.CreateDate;
			info.CreateUser = this.CreateUser;
			return info;			
		}
		 
		public PackageTranInfo Clone()
		{
			return ((ICloneable) this).Clone() as PackageTranInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// PackageTranInfoCollection对应表[TT_RPM_PACKAGE_TRAN]
    /// </summary>
	public partial class PackageTranInfoCollection : BusinessObjectCollection<PackageTranInfo>
	{
		public PackageTranInfoCollection():base("TT_RPM_PACKAGE_TRAN"){}	
	}
}
