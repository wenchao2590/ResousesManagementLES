#region Declaim
//---------------------------------------------------------------------------
// Name:		SapTranOutInfo
// Function: 	Expose data in table SapTranOut from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月24日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// SapTranOutInfo对应表[TI_IFM_SAP_TRAN_OUT]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class SapTranOutInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public SapTranOutInfo( 
					long aId,

					Guid aFid,

					Guid aLogFid,

					string aMatnr,

					decimal aMenge,

					string aRsnum,

					string aBwart,

					string aKostl,

					string aEbeln,

					int aEbelp,

					DateTime aBudat,

					string aLgort,

					string aUmlgo,

					string aWerks,

					string aUnwrk,

					string aLifnr,

					string aComments,

					int aProcessFlag,

					DateTime aProcessTime,

					bool aValidFlag,

					string aCreateUser,

					DateTime aCreateDate,

					string aModifyUser,

					DateTime aModifyDate

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			LogFid = aLogFid;
		 
			Matnr = aMatnr;
		 
			Menge = aMenge;
		 
			Rsnum = aRsnum;
		 
			Bwart = aBwart;
		 
			Kostl = aKostl;
		 
			Ebeln = aEbeln;
		 
			Ebelp = aEbelp;
		 
			Budat = aBudat;
		 
			Lgort = aLgort;
		 
			Umlgo = aUmlgo;
		 
			Werks = aWerks;
		 
			Unwrk = aUnwrk;
		 
			Lifnr = aLifnr;
		 
			Comments = aComments;
		 
			ProcessFlag = aProcessFlag;
		 
			ProcessTime = aProcessTime;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		}
		
		public SapTranOutInfo():base("TI_IFM_SAP_TRAN_OUT")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                       _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField LOG_FIDField = new DataSchemaField();
			LOG_FIDField.Name = "LOG_FID";
			LOG_FIDField.Type = typeof(Guid).ToString();
			LOG_FIDField.Index = 2;
			fields.Add(LOG_FIDField);
			 
			DataSchemaField MATNRField = new DataSchemaField();
			MATNRField.Name = "MATNR";
			MATNRField.Type = typeof(string).ToString();
			MATNRField.Index = 3;
			fields.Add(MATNRField);
			 
			DataSchemaField MENGEField = new DataSchemaField();
			MENGEField.Name = "MENGE";
			MENGEField.Type = typeof(decimal).ToString();
			MENGEField.Index = 4;
			fields.Add(MENGEField);
			 
			DataSchemaField RSNUMField = new DataSchemaField();
			RSNUMField.Name = "RSNUM";
			RSNUMField.Type = typeof(string).ToString();
			RSNUMField.Index = 5;
			fields.Add(RSNUMField);
			 
			DataSchemaField BWARTField = new DataSchemaField();
			BWARTField.Name = "BWART";
			BWARTField.Type = typeof(string).ToString();
			BWARTField.Index = 6;
			fields.Add(BWARTField);
			 
			DataSchemaField KOSTLField = new DataSchemaField();
			KOSTLField.Name = "KOSTL";
			KOSTLField.Type = typeof(string).ToString();
			KOSTLField.Index = 7;
			fields.Add(KOSTLField);
			 
			DataSchemaField EBELNField = new DataSchemaField();
			EBELNField.Name = "EBELN";
			EBELNField.Type = typeof(string).ToString();
			EBELNField.Index = 8;
			fields.Add(EBELNField);
			 
			DataSchemaField EBELPField = new DataSchemaField();
			EBELPField.Name = "EBELP";
			EBELPField.Type = typeof(int).ToString();
			EBELPField.Index = 9;
			fields.Add(EBELPField);
			 
			DataSchemaField BUDATField = new DataSchemaField();
			BUDATField.Name = "BUDAT";
			BUDATField.Type = typeof(DateTime).ToString();
			BUDATField.Index = 10;
			fields.Add(BUDATField);
			 
			DataSchemaField LGORTField = new DataSchemaField();
			LGORTField.Name = "LGORT";
			LGORTField.Type = typeof(string).ToString();
			LGORTField.Index = 11;
			fields.Add(LGORTField);
			 
			DataSchemaField UMLGOField = new DataSchemaField();
			UMLGOField.Name = "UMLGO";
			UMLGOField.Type = typeof(string).ToString();
			UMLGOField.Index = 12;
			fields.Add(UMLGOField);
			 
			DataSchemaField WERKSField = new DataSchemaField();
			WERKSField.Name = "WERKS";
			WERKSField.Type = typeof(string).ToString();
			WERKSField.Index = 13;
			fields.Add(WERKSField);
			 
			DataSchemaField UNWRKField = new DataSchemaField();
			UNWRKField.Name = "UNWRK";
			UNWRKField.Type = typeof(string).ToString();
			UNWRKField.Index = 14;
			fields.Add(UNWRKField);
			 
			DataSchemaField LIFNRField = new DataSchemaField();
			LIFNRField.Name = "LIFNR";
			LIFNRField.Type = typeof(string).ToString();
			LIFNRField.Index = 15;
			fields.Add(LIFNRField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 16;
			fields.Add(COMMENTSField);
			 
			DataSchemaField PROCESS_FLAGField = new DataSchemaField();
			PROCESS_FLAGField.Name = "PROCESS_FLAG";
			PROCESS_FLAGField.Type = typeof(int).ToString();
			PROCESS_FLAGField.Index = 17;
			fields.Add(PROCESS_FLAGField);
			 
			DataSchemaField PROCESS_TIMEField = new DataSchemaField();
			PROCESS_TIMEField.Name = "PROCESS_TIME";
			PROCESS_TIMEField.Type = typeof(DateTime).ToString();
			PROCESS_TIMEField.Index = 18;
			fields.Add(PROCESS_TIMEField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 19;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 20;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 21;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 22;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 23;
			fields.Add(MODIFY_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public Guid? LogFid{ get;set; }		
				
		[DataMember]
		public string Matnr{ get;set; }		
				
		[DataMember]
		public decimal? Menge{ get;set; }		
				
		[DataMember]
		public string Rsnum{ get;set; }		
				
		[DataMember]
		public string Bwart{ get;set; }		
				
		[DataMember]
		public string Kostl{ get;set; }		
				
		[DataMember]
		public string Ebeln{ get;set; }		
				
		[DataMember]
		public int? Ebelp{ get;set; }		
				
		[DataMember]
		public DateTime? Budat{ get;set; }		
				
		[DataMember]
		public string Lgort{ get;set; }		
				
		[DataMember]
		public string Umlgo{ get;set; }		
				
		[DataMember]
		public string Werks{ get;set; }		
				
		[DataMember]
		public string Unwrk{ get;set; }		
				
		[DataMember]
		public string Lifnr{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public int? ProcessFlag{ get;set; }		
				
		[DataMember]
		public DateTime? ProcessTime{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			SapTranOutInfo info = new SapTranOutInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.LogFid = this.LogFid;
			info.Matnr = this.Matnr;
			info.Menge = this.Menge;
			info.Rsnum = this.Rsnum;
			info.Bwart = this.Bwart;
			info.Kostl = this.Kostl;
			info.Ebeln = this.Ebeln;
			info.Ebelp = this.Ebelp;
			info.Budat = this.Budat;
			info.Lgort = this.Lgort;
			info.Umlgo = this.Umlgo;
			info.Werks = this.Werks;
			info.Unwrk = this.Unwrk;
			info.Lifnr = this.Lifnr;
			info.Comments = this.Comments;
			info.ProcessFlag = this.ProcessFlag;
			info.ProcessTime = this.ProcessTime;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			return info;			
		}
		 
		public SapTranOutInfo Clone()
		{
			return ((ICloneable) this).Clone() as SapTranOutInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// SapTranOutInfoCollection对应表[TI_IFM_SAP_TRAN_OUT]
    /// </summary>
	public partial class SapTranOutInfoCollection : BusinessObjectCollection<SapTranOutInfo>
	{
		public SapTranOutInfoCollection():base("TI_IFM_SAP_TRAN_OUT"){}	
	}
}
