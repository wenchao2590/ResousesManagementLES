#region Declaim
//---------------------------------------------------------------------------
// Name:		TranDetailsInfo
// Function: 	Expose data in table TranDetails from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月9日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// TranDetailsInfo对应表[TT_WMM_TRAN_DETAILS]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class TranDetailsInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public TranDetailsInfo( 
					long aId,

					Guid aFid,

					string aTranNo,

					string aPlant,

					string aBatchNo,

					string aPartNo,

					string aBarcodeData,

					string aWmNo,

					string aZoneNo,

					string aDloc,

					string aTargetWm,

					string aTargetZone,

					string aTargetDloc,

					string aMeasuringUnitNo,

					decimal aPackage,

					decimal aMax,

					decimal aMin,

					decimal aNum,

					decimal aBoxNum,

					int aTranState,

					DateTime aTranDate,

					string aSupplierNum,

					string aPartCname,

					string aBoxParts,

					int aPickupSeqNo,

					string aRdcDloc,

					int aActualPackageQty,

					decimal aActualQty,

					string aInnerLocation,

					string aLocation,

					string aStorageLocation,

					string aInhousePackageModel,

					decimal aInhousePackage,

					int aRequiredPackageQty,

					decimal aRequiredQty,

					string aBarcodeType,

					DateTime aRequiredDate,

					string aPachageType,

					string aLinePosition,

					string aRunsheetNo,

					string aPartNickname,

					string aSupplierName,

					string aDock,

					string aSupplierSname,

					string aPackageModel,

					string aPartCls,

					string aPartUnits,

					int aIsBatch,

					int aTranType,

					string aOriginPlace,

					decimal aPartPrice,

					string aCostCenter,

					string aComments,

					bool aSettledFlag,

					string aKeeper,

					Guid aStocksFid,

					bool aValidFlag,

					string aCreateUser,

					DateTime aCreateDate,

					string aModifyUser,

					DateTime aModifyDate,

					int aTranOrderType,

					int aRunsheetType

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			TranNo = aTranNo;
		 
			Plant = aPlant;
		 
			BatchNo = aBatchNo;
		 
			PartNo = aPartNo;
		 
			BarcodeData = aBarcodeData;
		 
			WmNo = aWmNo;
		 
			ZoneNo = aZoneNo;
		 
			Dloc = aDloc;
		 
			TargetWm = aTargetWm;
		 
			TargetZone = aTargetZone;
		 
			TargetDloc = aTargetDloc;
		 
			MeasuringUnitNo = aMeasuringUnitNo;
		 
			Package = aPackage;
		 
			Max = aMax;
		 
			Min = aMin;
		 
			Num = aNum;
		 
			BoxNum = aBoxNum;
		 
			TranState = aTranState;
		 
			TranDate = aTranDate;
		 
			SupplierNum = aSupplierNum;
		 
			PartCname = aPartCname;
		 
			BoxParts = aBoxParts;
		 
			PickupSeqNo = aPickupSeqNo;
		 
			RdcDloc = aRdcDloc;
		 
			ActualPackageQty = aActualPackageQty;
		 
			ActualQty = aActualQty;
		 
			InnerLocation = aInnerLocation;
		 
			Location = aLocation;
		 
			StorageLocation = aStorageLocation;
		 
			InhousePackageModel = aInhousePackageModel;
		 
			InhousePackage = aInhousePackage;
		 
			RequiredPackageQty = aRequiredPackageQty;
		 
			RequiredQty = aRequiredQty;
		 
			BarcodeType = aBarcodeType;
		 
			RequiredDate = aRequiredDate;
		 
			PachageType = aPachageType;
		 
			LinePosition = aLinePosition;
		 
			RunsheetNo = aRunsheetNo;
		 
			PartNickname = aPartNickname;
		 
			SupplierName = aSupplierName;
		 
			Dock = aDock;
		 
			SupplierSname = aSupplierSname;
		 
			PackageModel = aPackageModel;
		 
			PartCls = aPartCls;
		 
			PartUnits = aPartUnits;
		 
			IsBatch = aIsBatch;
		 
			TranType = aTranType;
		 
			OriginPlace = aOriginPlace;
		 
			PartPrice = aPartPrice;
		 
			CostCenter = aCostCenter;
		 
			Comments = aComments;
		 
			SettledFlag = aSettledFlag;
		 
			Keeper = aKeeper;
		 
			StocksFid = aStocksFid;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		 
			TranOrderType = aTranOrderType;
		 
			RunsheetType = aRunsheetType;
		}
		
		public TranDetailsInfo():base("TT_WMM_TRAN_DETAILS")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                                                              _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField TRAN_NOField = new DataSchemaField();
			TRAN_NOField.Name = "TRAN_NO";
			TRAN_NOField.Type = typeof(string).ToString();
			TRAN_NOField.Index = 2;
			fields.Add(TRAN_NOField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 3;
			fields.Add(PLANTField);
			 
			DataSchemaField BATCH_NOField = new DataSchemaField();
			BATCH_NOField.Name = "BATCH_NO";
			BATCH_NOField.Type = typeof(string).ToString();
			BATCH_NOField.Index = 4;
			fields.Add(BATCH_NOField);
			 
			DataSchemaField PART_NOField = new DataSchemaField();
			PART_NOField.Name = "PART_NO";
			PART_NOField.Type = typeof(string).ToString();
			PART_NOField.Index = 5;
			fields.Add(PART_NOField);
			 
			DataSchemaField BARCODE_DATAField = new DataSchemaField();
			BARCODE_DATAField.Name = "BARCODE_DATA";
			BARCODE_DATAField.Type = typeof(string).ToString();
			BARCODE_DATAField.Index = 6;
			fields.Add(BARCODE_DATAField);
			 
			DataSchemaField WM_NOField = new DataSchemaField();
			WM_NOField.Name = "WM_NO";
			WM_NOField.Type = typeof(string).ToString();
			WM_NOField.Index = 7;
			fields.Add(WM_NOField);
			 
			DataSchemaField ZONE_NOField = new DataSchemaField();
			ZONE_NOField.Name = "ZONE_NO";
			ZONE_NOField.Type = typeof(string).ToString();
			ZONE_NOField.Index = 8;
			fields.Add(ZONE_NOField);
			 
			DataSchemaField DLOCField = new DataSchemaField();
			DLOCField.Name = "DLOC";
			DLOCField.Type = typeof(string).ToString();
			DLOCField.Index = 9;
			fields.Add(DLOCField);
			 
			DataSchemaField TARGET_WMField = new DataSchemaField();
			TARGET_WMField.Name = "TARGET_WM";
			TARGET_WMField.Type = typeof(string).ToString();
			TARGET_WMField.Index = 10;
			fields.Add(TARGET_WMField);
			 
			DataSchemaField TARGET_ZONEField = new DataSchemaField();
			TARGET_ZONEField.Name = "TARGET_ZONE";
			TARGET_ZONEField.Type = typeof(string).ToString();
			TARGET_ZONEField.Index = 11;
			fields.Add(TARGET_ZONEField);
			 
			DataSchemaField TARGET_DLOCField = new DataSchemaField();
			TARGET_DLOCField.Name = "TARGET_DLOC";
			TARGET_DLOCField.Type = typeof(string).ToString();
			TARGET_DLOCField.Index = 12;
			fields.Add(TARGET_DLOCField);
			 
			DataSchemaField MEASURING_UNIT_NOField = new DataSchemaField();
			MEASURING_UNIT_NOField.Name = "MEASURING_UNIT_NO";
			MEASURING_UNIT_NOField.Type = typeof(string).ToString();
			MEASURING_UNIT_NOField.Index = 13;
			fields.Add(MEASURING_UNIT_NOField);
			 
			DataSchemaField PACKAGEField = new DataSchemaField();
			PACKAGEField.Name = "PACKAGE";
			PACKAGEField.Type = typeof(decimal).ToString();
			PACKAGEField.Index = 14;
			fields.Add(PACKAGEField);
			 
			DataSchemaField MAXField = new DataSchemaField();
			MAXField.Name = "MAX";
			MAXField.Type = typeof(decimal).ToString();
			MAXField.Index = 15;
			fields.Add(MAXField);
			 
			DataSchemaField MINField = new DataSchemaField();
			MINField.Name = "MIN";
			MINField.Type = typeof(decimal).ToString();
			MINField.Index = 16;
			fields.Add(MINField);
			 
			DataSchemaField NUMField = new DataSchemaField();
			NUMField.Name = "NUM";
			NUMField.Type = typeof(decimal).ToString();
			NUMField.Index = 17;
			fields.Add(NUMField);
			 
			DataSchemaField BOX_NUMField = new DataSchemaField();
			BOX_NUMField.Name = "BOX_NUM";
			BOX_NUMField.Type = typeof(decimal).ToString();
			BOX_NUMField.Index = 18;
			fields.Add(BOX_NUMField);
			 
			DataSchemaField TRAN_STATEField = new DataSchemaField();
			TRAN_STATEField.Name = "TRAN_STATE";
			TRAN_STATEField.Type = typeof(int).ToString();
			TRAN_STATEField.Index = 19;
			fields.Add(TRAN_STATEField);
			 
			DataSchemaField TRAN_DATEField = new DataSchemaField();
			TRAN_DATEField.Name = "TRAN_DATE";
			TRAN_DATEField.Type = typeof(DateTime).ToString();
			TRAN_DATEField.Index = 20;
			fields.Add(TRAN_DATEField);
			 
			DataSchemaField SUPPLIER_NUMField = new DataSchemaField();
			SUPPLIER_NUMField.Name = "SUPPLIER_NUM";
			SUPPLIER_NUMField.Type = typeof(string).ToString();
			SUPPLIER_NUMField.Index = 21;
			fields.Add(SUPPLIER_NUMField);
			 
			DataSchemaField PART_CNAMEField = new DataSchemaField();
			PART_CNAMEField.Name = "PART_CNAME";
			PART_CNAMEField.Type = typeof(string).ToString();
			PART_CNAMEField.Index = 22;
			fields.Add(PART_CNAMEField);
			 
			DataSchemaField BOX_PARTSField = new DataSchemaField();
			BOX_PARTSField.Name = "BOX_PARTS";
			BOX_PARTSField.Type = typeof(string).ToString();
			BOX_PARTSField.Index = 23;
			fields.Add(BOX_PARTSField);
			 
			DataSchemaField PICKUP_SEQ_NOField = new DataSchemaField();
			PICKUP_SEQ_NOField.Name = "PICKUP_SEQ_NO";
			PICKUP_SEQ_NOField.Type = typeof(int).ToString();
			PICKUP_SEQ_NOField.Index = 24;
			fields.Add(PICKUP_SEQ_NOField);
			 
			DataSchemaField RDC_DLOCField = new DataSchemaField();
			RDC_DLOCField.Name = "RDC_DLOC";
			RDC_DLOCField.Type = typeof(string).ToString();
			RDC_DLOCField.Index = 25;
			fields.Add(RDC_DLOCField);
			 
			DataSchemaField ACTUAL_PACKAGE_QTYField = new DataSchemaField();
			ACTUAL_PACKAGE_QTYField.Name = "ACTUAL_PACKAGE_QTY";
			ACTUAL_PACKAGE_QTYField.Type = typeof(int).ToString();
			ACTUAL_PACKAGE_QTYField.Index = 26;
			fields.Add(ACTUAL_PACKAGE_QTYField);
			 
			DataSchemaField ACTUAL_QTYField = new DataSchemaField();
			ACTUAL_QTYField.Name = "ACTUAL_QTY";
			ACTUAL_QTYField.Type = typeof(decimal).ToString();
			ACTUAL_QTYField.Index = 27;
			fields.Add(ACTUAL_QTYField);
			 
			DataSchemaField INNER_LOCATIONField = new DataSchemaField();
			INNER_LOCATIONField.Name = "INNER_LOCATION";
			INNER_LOCATIONField.Type = typeof(string).ToString();
			INNER_LOCATIONField.Index = 28;
			fields.Add(INNER_LOCATIONField);
			 
			DataSchemaField LOCATIONField = new DataSchemaField();
			LOCATIONField.Name = "LOCATION";
			LOCATIONField.Type = typeof(string).ToString();
			LOCATIONField.Index = 29;
			fields.Add(LOCATIONField);
			 
			DataSchemaField STORAGE_LOCATIONField = new DataSchemaField();
			STORAGE_LOCATIONField.Name = "STORAGE_LOCATION";
			STORAGE_LOCATIONField.Type = typeof(string).ToString();
			STORAGE_LOCATIONField.Index = 30;
			fields.Add(STORAGE_LOCATIONField);
			 
			DataSchemaField INHOUSE_PACKAGE_MODELField = new DataSchemaField();
			INHOUSE_PACKAGE_MODELField.Name = "INHOUSE_PACKAGE_MODEL";
			INHOUSE_PACKAGE_MODELField.Type = typeof(string).ToString();
			INHOUSE_PACKAGE_MODELField.Index = 31;
			fields.Add(INHOUSE_PACKAGE_MODELField);
			 
			DataSchemaField INHOUSE_PACKAGEField = new DataSchemaField();
			INHOUSE_PACKAGEField.Name = "INHOUSE_PACKAGE";
			INHOUSE_PACKAGEField.Type = typeof(decimal).ToString();
			INHOUSE_PACKAGEField.Index = 32;
			fields.Add(INHOUSE_PACKAGEField);
			 
			DataSchemaField REQUIRED_PACKAGE_QTYField = new DataSchemaField();
			REQUIRED_PACKAGE_QTYField.Name = "REQUIRED_PACKAGE_QTY";
			REQUIRED_PACKAGE_QTYField.Type = typeof(int).ToString();
			REQUIRED_PACKAGE_QTYField.Index = 33;
			fields.Add(REQUIRED_PACKAGE_QTYField);
			 
			DataSchemaField REQUIRED_QTYField = new DataSchemaField();
			REQUIRED_QTYField.Name = "REQUIRED_QTY";
			REQUIRED_QTYField.Type = typeof(decimal).ToString();
			REQUIRED_QTYField.Index = 34;
			fields.Add(REQUIRED_QTYField);
			 
			DataSchemaField BARCODE_TYPEField = new DataSchemaField();
			BARCODE_TYPEField.Name = "BARCODE_TYPE";
			BARCODE_TYPEField.Type = typeof(string).ToString();
			BARCODE_TYPEField.Index = 35;
			fields.Add(BARCODE_TYPEField);
			 
			DataSchemaField REQUIRED_DATEField = new DataSchemaField();
			REQUIRED_DATEField.Name = "REQUIRED_DATE";
			REQUIRED_DATEField.Type = typeof(DateTime).ToString();
			REQUIRED_DATEField.Index = 36;
			fields.Add(REQUIRED_DATEField);
			 
			DataSchemaField PACHAGE_TYPEField = new DataSchemaField();
			PACHAGE_TYPEField.Name = "PACHAGE_TYPE";
			PACHAGE_TYPEField.Type = typeof(string).ToString();
			PACHAGE_TYPEField.Index = 37;
			fields.Add(PACHAGE_TYPEField);
			 
			DataSchemaField LINE_POSITIONField = new DataSchemaField();
			LINE_POSITIONField.Name = "LINE_POSITION";
			LINE_POSITIONField.Type = typeof(string).ToString();
			LINE_POSITIONField.Index = 38;
			fields.Add(LINE_POSITIONField);
			 
			DataSchemaField RUNSHEET_NOField = new DataSchemaField();
			RUNSHEET_NOField.Name = "RUNSHEET_NO";
			RUNSHEET_NOField.Type = typeof(string).ToString();
			RUNSHEET_NOField.Index = 39;
			fields.Add(RUNSHEET_NOField);
			 
			DataSchemaField PART_NICKNAMEField = new DataSchemaField();
			PART_NICKNAMEField.Name = "PART_NICKNAME";
			PART_NICKNAMEField.Type = typeof(string).ToString();
			PART_NICKNAMEField.Index = 40;
			fields.Add(PART_NICKNAMEField);
			 
			DataSchemaField SUPPLIER_NAMEField = new DataSchemaField();
			SUPPLIER_NAMEField.Name = "SUPPLIER_NAME";
			SUPPLIER_NAMEField.Type = typeof(string).ToString();
			SUPPLIER_NAMEField.Index = 41;
			fields.Add(SUPPLIER_NAMEField);
			 
			DataSchemaField DOCKField = new DataSchemaField();
			DOCKField.Name = "DOCK";
			DOCKField.Type = typeof(string).ToString();
			DOCKField.Index = 42;
			fields.Add(DOCKField);
			 
			DataSchemaField SUPPLIER_SNAMEField = new DataSchemaField();
			SUPPLIER_SNAMEField.Name = "SUPPLIER_SNAME";
			SUPPLIER_SNAMEField.Type = typeof(string).ToString();
			SUPPLIER_SNAMEField.Index = 43;
			fields.Add(SUPPLIER_SNAMEField);
			 
			DataSchemaField PACKAGE_MODELField = new DataSchemaField();
			PACKAGE_MODELField.Name = "PACKAGE_MODEL";
			PACKAGE_MODELField.Type = typeof(string).ToString();
			PACKAGE_MODELField.Index = 44;
			fields.Add(PACKAGE_MODELField);
			 
			DataSchemaField PART_CLSField = new DataSchemaField();
			PART_CLSField.Name = "PART_CLS";
			PART_CLSField.Type = typeof(string).ToString();
			PART_CLSField.Index = 45;
			fields.Add(PART_CLSField);
			 
			DataSchemaField PART_UNITSField = new DataSchemaField();
			PART_UNITSField.Name = "PART_UNITS";
			PART_UNITSField.Type = typeof(string).ToString();
			PART_UNITSField.Index = 46;
			fields.Add(PART_UNITSField);
			 
			DataSchemaField IS_BATCHField = new DataSchemaField();
			IS_BATCHField.Name = "IS_BATCH";
			IS_BATCHField.Type = typeof(int).ToString();
			IS_BATCHField.Index = 47;
			fields.Add(IS_BATCHField);
			 
			DataSchemaField TRAN_TYPEField = new DataSchemaField();
			TRAN_TYPEField.Name = "TRAN_TYPE";
			TRAN_TYPEField.Type = typeof(int).ToString();
			TRAN_TYPEField.Index = 48;
			fields.Add(TRAN_TYPEField);
			 
			DataSchemaField ORIGIN_PLACEField = new DataSchemaField();
			ORIGIN_PLACEField.Name = "ORIGIN_PLACE";
			ORIGIN_PLACEField.Type = typeof(string).ToString();
			ORIGIN_PLACEField.Index = 49;
			fields.Add(ORIGIN_PLACEField);
			 
			DataSchemaField PART_PRICEField = new DataSchemaField();
			PART_PRICEField.Name = "PART_PRICE";
			PART_PRICEField.Type = typeof(decimal).ToString();
			PART_PRICEField.Index = 50;
			fields.Add(PART_PRICEField);
			 
			DataSchemaField COST_CENTERField = new DataSchemaField();
			COST_CENTERField.Name = "COST_CENTER";
			COST_CENTERField.Type = typeof(string).ToString();
			COST_CENTERField.Index = 51;
			fields.Add(COST_CENTERField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 52;
			fields.Add(COMMENTSField);
			 
			DataSchemaField SETTLED_FLAGField = new DataSchemaField();
			SETTLED_FLAGField.Name = "SETTLED_FLAG";
			SETTLED_FLAGField.Type = typeof(bool).ToString();
			SETTLED_FLAGField.Index = 53;
			fields.Add(SETTLED_FLAGField);
			 
			DataSchemaField KEEPERField = new DataSchemaField();
			KEEPERField.Name = "KEEPER";
			KEEPERField.Type = typeof(string).ToString();
			KEEPERField.Index = 54;
			fields.Add(KEEPERField);
			 
			DataSchemaField STOCKS_FIDField = new DataSchemaField();
			STOCKS_FIDField.Name = "STOCKS_FID";
			STOCKS_FIDField.Type = typeof(Guid).ToString();
			STOCKS_FIDField.Index = 55;
			fields.Add(STOCKS_FIDField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 56;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 57;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 58;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 59;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 60;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField TRAN_ORDER_TYPEField = new DataSchemaField();
			TRAN_ORDER_TYPEField.Name = "TRAN_ORDER_TYPE";
			TRAN_ORDER_TYPEField.Type = typeof(int).ToString();
			TRAN_ORDER_TYPEField.Index = 61;
			fields.Add(TRAN_ORDER_TYPEField);
			 
			DataSchemaField RUNSHEET_TYPEField = new DataSchemaField();
			RUNSHEET_TYPEField.Name = "RUNSHEET_TYPE";
			RUNSHEET_TYPEField.Type = typeof(int).ToString();
			RUNSHEET_TYPEField.Index = 62;
			fields.Add(RUNSHEET_TYPEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public string TranNo{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string BatchNo{ get;set; }		
				
		[DataMember]
		public string PartNo{ get;set; }		
				
		[DataMember]
		public string BarcodeData{ get;set; }		
				
		[DataMember]
		public string WmNo{ get;set; }		
				
		[DataMember]
		public string ZoneNo{ get;set; }		
				
		[DataMember]
		public string Dloc{ get;set; }		
				
		[DataMember]
		public string TargetWm{ get;set; }		
				
		[DataMember]
		public string TargetZone{ get;set; }		
				
		[DataMember]
		public string TargetDloc{ get;set; }		
				
		[DataMember]
		public string MeasuringUnitNo{ get;set; }		
				
		[DataMember]
		public decimal? Package{ get;set; }		
				
		[DataMember]
		public decimal? Max{ get;set; }		
				
		[DataMember]
		public decimal? Min{ get;set; }		
				
		[DataMember]
		public decimal? Num{ get;set; }		
				
		[DataMember]
		public decimal? BoxNum{ get;set; }		
				
		[DataMember]
		public int? TranState{ get;set; }		
				
		[DataMember]
		public DateTime? TranDate{ get;set; }		
				
		[DataMember]
		public string SupplierNum{ get;set; }		
				
		[DataMember]
		public string PartCname{ get;set; }		
				
		[DataMember]
		public string BoxParts{ get;set; }		
				
		[DataMember]
		public int? PickupSeqNo{ get;set; }		
				
		[DataMember]
		public string RdcDloc{ get;set; }		
				
		[DataMember]
		public int? ActualPackageQty{ get;set; }		
				
		[DataMember]
		public decimal? ActualQty{ get;set; }		
				
		[DataMember]
		public string InnerLocation{ get;set; }		
				
		[DataMember]
		public string Location{ get;set; }		
				
		[DataMember]
		public string StorageLocation{ get;set; }		
				
		[DataMember]
		public string InhousePackageModel{ get;set; }		
				
		[DataMember]
		public decimal? InhousePackage{ get;set; }		
				
		[DataMember]
		public int? RequiredPackageQty{ get;set; }		
				
		[DataMember]
		public decimal? RequiredQty{ get;set; }		
				
		[DataMember]
		public string BarcodeType{ get;set; }		
				
		[DataMember]
		public DateTime? RequiredDate{ get;set; }		
				
		[DataMember]
		public string PachageType{ get;set; }		
				
		[DataMember]
		public string LinePosition{ get;set; }		
				
		[DataMember]
		public string RunsheetNo{ get;set; }		
				
		[DataMember]
		public string PartNickname{ get;set; }		
				
		[DataMember]
		public string SupplierName{ get;set; }		
				
		[DataMember]
		public string Dock{ get;set; }		
				
		[DataMember]
		public string SupplierSname{ get;set; }		
				
		[DataMember]
		public string PackageModel{ get;set; }		
				
		[DataMember]
		public string PartCls{ get;set; }		
				
		[DataMember]
		public string PartUnits{ get;set; }		
				
		[DataMember]
		public int? IsBatch{ get;set; }		
				
		[DataMember]
		public int? TranType{ get;set; }		
				
		[DataMember]
		public string OriginPlace{ get;set; }		
				
		[DataMember]
		public decimal? PartPrice{ get;set; }		
				
		[DataMember]
		public string CostCenter{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public bool? SettledFlag{ get;set; }		
				
		[DataMember]
		public string Keeper{ get;set; }		
				
		[DataMember]
		public Guid? StocksFid{ get;set; }		
				
		[DataMember]
		public bool ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public int? TranOrderType{ get;set; }		
				
		[DataMember]
		public int? RunsheetType{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			TranDetailsInfo info = new TranDetailsInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.TranNo = this.TranNo;
			info.Plant = this.Plant;
			info.BatchNo = this.BatchNo;
			info.PartNo = this.PartNo;
			info.BarcodeData = this.BarcodeData;
			info.WmNo = this.WmNo;
			info.ZoneNo = this.ZoneNo;
			info.Dloc = this.Dloc;
			info.TargetWm = this.TargetWm;
			info.TargetZone = this.TargetZone;
			info.TargetDloc = this.TargetDloc;
			info.MeasuringUnitNo = this.MeasuringUnitNo;
			info.Package = this.Package;
			info.Max = this.Max;
			info.Min = this.Min;
			info.Num = this.Num;
			info.BoxNum = this.BoxNum;
			info.TranState = this.TranState;
			info.TranDate = this.TranDate;
			info.SupplierNum = this.SupplierNum;
			info.PartCname = this.PartCname;
			info.BoxParts = this.BoxParts;
			info.PickupSeqNo = this.PickupSeqNo;
			info.RdcDloc = this.RdcDloc;
			info.ActualPackageQty = this.ActualPackageQty;
			info.ActualQty = this.ActualQty;
			info.InnerLocation = this.InnerLocation;
			info.Location = this.Location;
			info.StorageLocation = this.StorageLocation;
			info.InhousePackageModel = this.InhousePackageModel;
			info.InhousePackage = this.InhousePackage;
			info.RequiredPackageQty = this.RequiredPackageQty;
			info.RequiredQty = this.RequiredQty;
			info.BarcodeType = this.BarcodeType;
			info.RequiredDate = this.RequiredDate;
			info.PachageType = this.PachageType;
			info.LinePosition = this.LinePosition;
			info.RunsheetNo = this.RunsheetNo;
			info.PartNickname = this.PartNickname;
			info.SupplierName = this.SupplierName;
			info.Dock = this.Dock;
			info.SupplierSname = this.SupplierSname;
			info.PackageModel = this.PackageModel;
			info.PartCls = this.PartCls;
			info.PartUnits = this.PartUnits;
			info.IsBatch = this.IsBatch;
			info.TranType = this.TranType;
			info.OriginPlace = this.OriginPlace;
			info.PartPrice = this.PartPrice;
			info.CostCenter = this.CostCenter;
			info.Comments = this.Comments;
			info.SettledFlag = this.SettledFlag;
			info.Keeper = this.Keeper;
			info.StocksFid = this.StocksFid;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			info.TranOrderType = this.TranOrderType;
			info.RunsheetType = this.RunsheetType;
			return info;			
		}
		 
		public TranDetailsInfo Clone()
		{
			return ((ICloneable) this).Clone() as TranDetailsInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// TranDetailsInfoCollection对应表[TT_WMM_TRAN_DETAILS]
    /// </summary>
	public partial class TranDetailsInfoCollection : BusinessObjectCollection<TranDetailsInfo>
	{
		public TranDetailsInfoCollection():base("TT_WMM_TRAN_DETAILS"){}	
	}
}
