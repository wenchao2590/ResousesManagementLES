#region Declaim
//---------------------------------------------------------------------------
// Name:		InventoryOrderPartInfo
// Function: 	Expose data in table InventoryOrderPart from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年6月26日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// InventoryOrderPartInfo对应表[TT_WMM_INVENTORY_ORDER_PART]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class InventoryOrderPartInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public InventoryOrderPartInfo( 
					long aId,

					Guid aFid,

					string aOrderCode,

					Guid aOrderFid,

					string aWmNo,

					string aZoneNo,

					string aDloc,

					string aPartNo,

					string aSupplierNum,

					string aPackageModel,

					decimal aPackage,

					string aPartCname,

					int aPackageQty,

					decimal aPartQty,

					decimal aReferenceQty,

					decimal aDifferenceQty,

					decimal aSapMenge,

					decimal aSapDqty,

					string aComments,

					bool aValidFlag,

					DateTime aCreateDate,

					string aCreateUser,

					DateTime aModifyDate,

					string aModifyUser

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			OrderCode = aOrderCode;
		 
			OrderFid = aOrderFid;
		 
			WmNo = aWmNo;
		 
			ZoneNo = aZoneNo;
		 
			Dloc = aDloc;
		 
			PartNo = aPartNo;
		 
			SupplierNum = aSupplierNum;
		 
			PackageModel = aPackageModel;
		 
			Package = aPackage;
		 
			PartCname = aPartCname;
		 
			PackageQty = aPackageQty;
		 
			PartQty = aPartQty;
		 
			ReferenceQty = aReferenceQty;
		 
			DifferenceQty = aDifferenceQty;
		 
			SapMenge = aSapMenge;
		 
			SapDqty = aSapDqty;
		 
			Comments = aComments;
		 
			ValidFlag = aValidFlag;
		 
			CreateDate = aCreateDate;
		 
			CreateUser = aCreateUser;
		 
			ModifyDate = aModifyDate;
		 
			ModifyUser = aModifyUser;
		}
		
		public InventoryOrderPartInfo():base("TT_WMM_INVENTORY_ORDER_PART")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                       _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField ORDER_CODEField = new DataSchemaField();
			ORDER_CODEField.Name = "ORDER_CODE";
			ORDER_CODEField.Type = typeof(string).ToString();
			ORDER_CODEField.Index = 2;
			fields.Add(ORDER_CODEField);
			 
			DataSchemaField ORDER_FIDField = new DataSchemaField();
			ORDER_FIDField.Name = "ORDER_FID";
			ORDER_FIDField.Type = typeof(Guid).ToString();
			ORDER_FIDField.Index = 3;
			fields.Add(ORDER_FIDField);
			 
			DataSchemaField WM_NOField = new DataSchemaField();
			WM_NOField.Name = "WM_NO";
			WM_NOField.Type = typeof(string).ToString();
			WM_NOField.Index = 4;
			fields.Add(WM_NOField);
			 
			DataSchemaField ZONE_NOField = new DataSchemaField();
			ZONE_NOField.Name = "ZONE_NO";
			ZONE_NOField.Type = typeof(string).ToString();
			ZONE_NOField.Index = 5;
			fields.Add(ZONE_NOField);
			 
			DataSchemaField DLOCField = new DataSchemaField();
			DLOCField.Name = "DLOC";
			DLOCField.Type = typeof(string).ToString();
			DLOCField.Index = 6;
			fields.Add(DLOCField);
			 
			DataSchemaField PART_NOField = new DataSchemaField();
			PART_NOField.Name = "PART_NO";
			PART_NOField.Type = typeof(string).ToString();
			PART_NOField.Index = 7;
			fields.Add(PART_NOField);
			 
			DataSchemaField SUPPLIER_NUMField = new DataSchemaField();
			SUPPLIER_NUMField.Name = "SUPPLIER_NUM";
			SUPPLIER_NUMField.Type = typeof(string).ToString();
			SUPPLIER_NUMField.Index = 8;
			fields.Add(SUPPLIER_NUMField);
			 
			DataSchemaField PACKAGE_MODELField = new DataSchemaField();
			PACKAGE_MODELField.Name = "PACKAGE_MODEL";
			PACKAGE_MODELField.Type = typeof(string).ToString();
			PACKAGE_MODELField.Index = 9;
			fields.Add(PACKAGE_MODELField);
			 
			DataSchemaField PACKAGEField = new DataSchemaField();
			PACKAGEField.Name = "PACKAGE";
			PACKAGEField.Type = typeof(decimal).ToString();
			PACKAGEField.Index = 10;
			fields.Add(PACKAGEField);
			 
			DataSchemaField PART_CNAMEField = new DataSchemaField();
			PART_CNAMEField.Name = "PART_CNAME";
			PART_CNAMEField.Type = typeof(string).ToString();
			PART_CNAMEField.Index = 11;
			fields.Add(PART_CNAMEField);
			 
			DataSchemaField PACKAGE_QTYField = new DataSchemaField();
			PACKAGE_QTYField.Name = "PACKAGE_QTY";
			PACKAGE_QTYField.Type = typeof(int).ToString();
			PACKAGE_QTYField.Index = 12;
			fields.Add(PACKAGE_QTYField);
			 
			DataSchemaField PART_QTYField = new DataSchemaField();
			PART_QTYField.Name = "PART_QTY";
			PART_QTYField.Type = typeof(decimal).ToString();
			PART_QTYField.Index = 13;
			fields.Add(PART_QTYField);
			 
			DataSchemaField REFERENCE_QTYField = new DataSchemaField();
			REFERENCE_QTYField.Name = "REFERENCE_QTY";
			REFERENCE_QTYField.Type = typeof(decimal).ToString();
			REFERENCE_QTYField.Index = 14;
			fields.Add(REFERENCE_QTYField);
			 
			DataSchemaField DIFFERENCE_QTYField = new DataSchemaField();
			DIFFERENCE_QTYField.Name = "DIFFERENCE_QTY";
			DIFFERENCE_QTYField.Type = typeof(decimal).ToString();
			DIFFERENCE_QTYField.Index = 15;
			fields.Add(DIFFERENCE_QTYField);
			 
			DataSchemaField SAP_MENGEField = new DataSchemaField();
			SAP_MENGEField.Name = "SAP_MENGE";
			SAP_MENGEField.Type = typeof(decimal).ToString();
			SAP_MENGEField.Index = 16;
			fields.Add(SAP_MENGEField);
			 
			DataSchemaField SAP_DQTYField = new DataSchemaField();
			SAP_DQTYField.Name = "SAP_DQTY";
			SAP_DQTYField.Type = typeof(decimal).ToString();
			SAP_DQTYField.Index = 17;
			fields.Add(SAP_DQTYField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 18;
			fields.Add(COMMENTSField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 19;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 20;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 21;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 22;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 23;
			fields.Add(MODIFY_USERField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public string OrderCode{ get;set; }		
				
		[DataMember]
		public Guid? OrderFid{ get;set; }		
				
		[DataMember]
		public string WmNo{ get;set; }		
				
		[DataMember]
		public string ZoneNo{ get;set; }		
				
		[DataMember]
		public string Dloc{ get;set; }		
				
		[DataMember]
		public string PartNo{ get;set; }		
				
		[DataMember]
		public string SupplierNum{ get;set; }		
				
		[DataMember]
		public string PackageModel{ get;set; }		
				
		[DataMember]
		public decimal? Package{ get;set; }		
				
		[DataMember]
		public string PartCname{ get;set; }		
				
		[DataMember]
		public int? PackageQty{ get;set; }		
				
		[DataMember]
		public decimal? PartQty{ get;set; }		
				
		[DataMember]
		public decimal? ReferenceQty{ get;set; }		
				
		[DataMember]
		public decimal? DifferenceQty{ get;set; }		
				
		[DataMember]
		public decimal? SapMenge{ get;set; }		
				
		[DataMember]
		public decimal? SapDqty{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public bool ValidFlag{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			InventoryOrderPartInfo info = new InventoryOrderPartInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.OrderCode = this.OrderCode;
			info.OrderFid = this.OrderFid;
			info.WmNo = this.WmNo;
			info.ZoneNo = this.ZoneNo;
			info.Dloc = this.Dloc;
			info.PartNo = this.PartNo;
			info.SupplierNum = this.SupplierNum;
			info.PackageModel = this.PackageModel;
			info.Package = this.Package;
			info.PartCname = this.PartCname;
			info.PackageQty = this.PackageQty;
			info.PartQty = this.PartQty;
			info.ReferenceQty = this.ReferenceQty;
			info.DifferenceQty = this.DifferenceQty;
			info.SapMenge = this.SapMenge;
			info.SapDqty = this.SapDqty;
			info.Comments = this.Comments;
			info.ValidFlag = this.ValidFlag;
			info.CreateDate = this.CreateDate;
			info.CreateUser = this.CreateUser;
			info.ModifyDate = this.ModifyDate;
			info.ModifyUser = this.ModifyUser;
			return info;			
		}
		 
		public InventoryOrderPartInfo Clone()
		{
			return ((ICloneable) this).Clone() as InventoryOrderPartInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// InventoryOrderPartInfoCollection对应表[TT_WMM_INVENTORY_ORDER_PART]
    /// </summary>
	public partial class InventoryOrderPartInfoCollection : BusinessObjectCollection<InventoryOrderPartInfo>
	{
		public InventoryOrderPartInfoCollection():base("TT_WMM_INVENTORY_ORDER_PART"){}	
	}
}
