#region Declaim
//---------------------------------------------------------------------------
// Name:		PorderLackMaterialDetailInfo
// Function: 	Expose data in table PorderLackMaterialDetail from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月10日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// PorderLackMaterialDetailInfo对应表[TT_ATP_PORDER_LACK_MATERIAL_DETAIL]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class PorderLackMaterialDetailInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public PorderLackMaterialDetailInfo( 
					long aId,

					Guid aFid,

					bool aValidFlag,

					string aCreateUser,

					DateTime aCreateDate,

					string aModifyUser,

					DateTime aModifyDate,

					Guid aLackOrderFid,

					Guid aLackDetailFid,

					Guid aLackPorderFid,

					Guid aProductionOrderFid,

					string aPartNo,

					string aSupplierNum,

					string aPlant,

					decimal aRequireQty,

					decimal aLackQty,

					string aPartPurchaser,

					string aProductionOrderNo,

					string aAssemblyLine,

					DateTime aOrderDate

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		 
			LackOrderFid = aLackOrderFid;
		 
			LackDetailFid = aLackDetailFid;
		 
			LackPorderFid = aLackPorderFid;
		 
			ProductionOrderFid = aProductionOrderFid;
		 
			PartNo = aPartNo;
		 
			SupplierNum = aSupplierNum;
		 
			Plant = aPlant;
		 
			RequireQty = aRequireQty;
		 
			LackQty = aLackQty;
		 
			PartPurchaser = aPartPurchaser;
		 
			ProductionOrderNo = aProductionOrderNo;
		 
			AssemblyLine = aAssemblyLine;
		 
			OrderDate = aOrderDate;
		}
		
		public PorderLackMaterialDetailInfo():base("TT_ATP_PORDER_LACK_MATERIAL_DETAIL")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                   _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 2;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 3;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 4;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 5;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 6;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField LACK_ORDER_FIDField = new DataSchemaField();
			LACK_ORDER_FIDField.Name = "LACK_ORDER_FID";
			LACK_ORDER_FIDField.Type = typeof(Guid).ToString();
			LACK_ORDER_FIDField.Index = 7;
			fields.Add(LACK_ORDER_FIDField);
			 
			DataSchemaField LACK_DETAIL_FIDField = new DataSchemaField();
			LACK_DETAIL_FIDField.Name = "LACK_DETAIL_FID";
			LACK_DETAIL_FIDField.Type = typeof(Guid).ToString();
			LACK_DETAIL_FIDField.Index = 8;
			fields.Add(LACK_DETAIL_FIDField);
			 
			DataSchemaField LACK_PORDER_FIDField = new DataSchemaField();
			LACK_PORDER_FIDField.Name = "LACK_PORDER_FID";
			LACK_PORDER_FIDField.Type = typeof(Guid).ToString();
			LACK_PORDER_FIDField.Index = 9;
			fields.Add(LACK_PORDER_FIDField);
			 
			DataSchemaField PRODUCTION_ORDER_FIDField = new DataSchemaField();
			PRODUCTION_ORDER_FIDField.Name = "PRODUCTION_ORDER_FID";
			PRODUCTION_ORDER_FIDField.Type = typeof(Guid).ToString();
			PRODUCTION_ORDER_FIDField.Index = 10;
			fields.Add(PRODUCTION_ORDER_FIDField);
			 
			DataSchemaField PART_NOField = new DataSchemaField();
			PART_NOField.Name = "PART_NO";
			PART_NOField.Type = typeof(string).ToString();
			PART_NOField.Index = 11;
			fields.Add(PART_NOField);
			 
			DataSchemaField SUPPLIER_NUMField = new DataSchemaField();
			SUPPLIER_NUMField.Name = "SUPPLIER_NUM";
			SUPPLIER_NUMField.Type = typeof(string).ToString();
			SUPPLIER_NUMField.Index = 12;
			fields.Add(SUPPLIER_NUMField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 13;
			fields.Add(PLANTField);
			 
			DataSchemaField REQUIRE_QTYField = new DataSchemaField();
			REQUIRE_QTYField.Name = "REQUIRE_QTY";
			REQUIRE_QTYField.Type = typeof(decimal).ToString();
			REQUIRE_QTYField.Index = 14;
			fields.Add(REQUIRE_QTYField);
			 
			DataSchemaField LACK_QTYField = new DataSchemaField();
			LACK_QTYField.Name = "LACK_QTY";
			LACK_QTYField.Type = typeof(decimal).ToString();
			LACK_QTYField.Index = 15;
			fields.Add(LACK_QTYField);
			 
			DataSchemaField PART_PURCHASERField = new DataSchemaField();
			PART_PURCHASERField.Name = "PART_PURCHASER";
			PART_PURCHASERField.Type = typeof(string).ToString();
			PART_PURCHASERField.Index = 16;
			fields.Add(PART_PURCHASERField);
			 
			DataSchemaField PRODUCTION_ORDER_NOField = new DataSchemaField();
			PRODUCTION_ORDER_NOField.Name = "PRODUCTION_ORDER_NO";
			PRODUCTION_ORDER_NOField.Type = typeof(string).ToString();
			PRODUCTION_ORDER_NOField.Index = 17;
			fields.Add(PRODUCTION_ORDER_NOField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 18;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField ORDER_DATEField = new DataSchemaField();
			ORDER_DATEField.Name = "ORDER_DATE";
			ORDER_DATEField.Type = typeof(DateTime).ToString();
			ORDER_DATEField.Index = 19;
			fields.Add(ORDER_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public bool ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public Guid? LackOrderFid{ get;set; }		
				
		[DataMember]
		public Guid? LackDetailFid{ get;set; }		
				
		[DataMember]
		public Guid? LackPorderFid{ get;set; }		
				
		[DataMember]
		public Guid? ProductionOrderFid{ get;set; }		
				
		[DataMember]
		public string PartNo{ get;set; }		
				
		[DataMember]
		public string SupplierNum{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public decimal? RequireQty{ get;set; }		
				
		[DataMember]
		public decimal? LackQty{ get;set; }		
				
		[DataMember]
		public string PartPurchaser{ get;set; }		
				
		[DataMember]
		public string ProductionOrderNo{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public DateTime? OrderDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			PorderLackMaterialDetailInfo info = new PorderLackMaterialDetailInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			info.LackOrderFid = this.LackOrderFid;
			info.LackDetailFid = this.LackDetailFid;
			info.LackPorderFid = this.LackPorderFid;
			info.ProductionOrderFid = this.ProductionOrderFid;
			info.PartNo = this.PartNo;
			info.SupplierNum = this.SupplierNum;
			info.Plant = this.Plant;
			info.RequireQty = this.RequireQty;
			info.LackQty = this.LackQty;
			info.PartPurchaser = this.PartPurchaser;
			info.ProductionOrderNo = this.ProductionOrderNo;
			info.AssemblyLine = this.AssemblyLine;
			info.OrderDate = this.OrderDate;
			return info;			
		}
		 
		public PorderLackMaterialDetailInfo Clone()
		{
			return ((ICloneable) this).Clone() as PorderLackMaterialDetailInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// PorderLackMaterialDetailInfoCollection对应表[TT_ATP_PORDER_LACK_MATERIAL_DETAIL]
    /// </summary>
	public partial class PorderLackMaterialDetailInfoCollection : BusinessObjectCollection<PorderLackMaterialDetailInfo>
	{
		public PorderLackMaterialDetailInfoCollection():base("TT_ATP_PORDER_LACK_MATERIAL_DETAIL"){}	
	}
}
