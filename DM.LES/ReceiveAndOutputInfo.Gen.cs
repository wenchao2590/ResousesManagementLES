#region Declaim
//---------------------------------------------------------------------------
// Name:		ReceiveAndOutputInfo
// Function: 	Expose data in table ReceiveAndOutput from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年5月21日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// ReceiveAndOutputInfo对应表[V_WMM_RECEIVE_AND_OUTPUT]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class ReceiveAndOutputInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public ReceiveAndOutputInfo( 
					long aOrderId,

					long aDetailId,

					string aOrderNo,

					string aRunsheetNo,

					string aPlant,

					string aWmNo,

					string aZoneNo,

					string aTargetWm,

					string aTargetZone,

					string aTargetDloc,

					string aPartNo,

					string aPartCname,

					string aSupplierNum,

					int aRequiredBoxNum,

					int aActualBoxNum,

					decimal aRequiredQty,

					decimal aActualQty,

					int aIsOutput,

					string aFinalWm,

					string aFinalZone,

					bool aIsScanBox,

					decimal aUnqualifiedQty,

					int aCheckMode,

					int aCheckStatus,

					decimal aOperableNumber,

					int aOperationType,

					decimal aPackage,

					string aPackageModel

				 
		) : this()
		{
			 
			OrderId = aOrderId;
		 
			DetailId = aDetailId;
		 
			OrderNo = aOrderNo;
		 
			RunsheetNo = aRunsheetNo;
		 
			Plant = aPlant;
		 
			WmNo = aWmNo;
		 
			ZoneNo = aZoneNo;
		 
			TargetWm = aTargetWm;
		 
			TargetZone = aTargetZone;
		 
			TargetDloc = aTargetDloc;
		 
			PartNo = aPartNo;
		 
			PartCname = aPartCname;
		 
			SupplierNum = aSupplierNum;
		 
			RequiredBoxNum = aRequiredBoxNum;
		 
			ActualBoxNum = aActualBoxNum;
		 
			RequiredQty = aRequiredQty;
		 
			ActualQty = aActualQty;
		 
			IsOutput = aIsOutput;
		 
			FinalWm = aFinalWm;
		 
			FinalZone = aFinalZone;
		 
			IsScanBox = aIsScanBox;
		 
			UnqualifiedQty = aUnqualifiedQty;
		 
			CheckMode = aCheckMode;
		 
			CheckStatus = aCheckStatus;
		 
			OperableNumber = aOperableNumber;
		 
			OperationType = aOperationType;
		 
			Package = aPackage;
		 
			PackageModel = aPackageModel;
		}
		
		public ReceiveAndOutputInfo():base("V_WMM_RECEIVE_AND_OUTPUT")
		{
			List<string> keys = new List<string>();
			                            _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField ORDER_IDField = new DataSchemaField();
			ORDER_IDField.Name = "ORDER_ID";
			ORDER_IDField.Type = typeof(long).ToString();
			ORDER_IDField.Index = 0;
			fields.Add(ORDER_IDField);
			 
			DataSchemaField DETAIL_IDField = new DataSchemaField();
			DETAIL_IDField.Name = "DETAIL_ID";
			DETAIL_IDField.Type = typeof(long).ToString();
			DETAIL_IDField.Index = 1;
			fields.Add(DETAIL_IDField);
			 
			DataSchemaField ORDER_NOField = new DataSchemaField();
			ORDER_NOField.Name = "ORDER_NO";
			ORDER_NOField.Type = typeof(string).ToString();
			ORDER_NOField.Index = 2;
			fields.Add(ORDER_NOField);
			 
			DataSchemaField RUNSHEET_NOField = new DataSchemaField();
			RUNSHEET_NOField.Name = "RUNSHEET_NO";
			RUNSHEET_NOField.Type = typeof(string).ToString();
			RUNSHEET_NOField.Index = 3;
			fields.Add(RUNSHEET_NOField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 4;
			fields.Add(PLANTField);
			 
			DataSchemaField WM_NOField = new DataSchemaField();
			WM_NOField.Name = "WM_NO";
			WM_NOField.Type = typeof(string).ToString();
			WM_NOField.Index = 5;
			fields.Add(WM_NOField);
			 
			DataSchemaField ZONE_NOField = new DataSchemaField();
			ZONE_NOField.Name = "ZONE_NO";
			ZONE_NOField.Type = typeof(string).ToString();
			ZONE_NOField.Index = 6;
			fields.Add(ZONE_NOField);
			 
			DataSchemaField TARGET_WMField = new DataSchemaField();
			TARGET_WMField.Name = "TARGET_WM";
			TARGET_WMField.Type = typeof(string).ToString();
			TARGET_WMField.Index = 7;
			fields.Add(TARGET_WMField);
			 
			DataSchemaField TARGET_ZONEField = new DataSchemaField();
			TARGET_ZONEField.Name = "TARGET_ZONE";
			TARGET_ZONEField.Type = typeof(string).ToString();
			TARGET_ZONEField.Index = 8;
			fields.Add(TARGET_ZONEField);
			 
			DataSchemaField TARGET_DLOCField = new DataSchemaField();
			TARGET_DLOCField.Name = "TARGET_DLOC";
			TARGET_DLOCField.Type = typeof(string).ToString();
			TARGET_DLOCField.Index = 9;
			fields.Add(TARGET_DLOCField);
			 
			DataSchemaField PART_NOField = new DataSchemaField();
			PART_NOField.Name = "PART_NO";
			PART_NOField.Type = typeof(string).ToString();
			PART_NOField.Index = 10;
			fields.Add(PART_NOField);
			 
			DataSchemaField PART_CNAMEField = new DataSchemaField();
			PART_CNAMEField.Name = "PART_CNAME";
			PART_CNAMEField.Type = typeof(string).ToString();
			PART_CNAMEField.Index = 11;
			fields.Add(PART_CNAMEField);
			 
			DataSchemaField SUPPLIER_NUMField = new DataSchemaField();
			SUPPLIER_NUMField.Name = "SUPPLIER_NUM";
			SUPPLIER_NUMField.Type = typeof(string).ToString();
			SUPPLIER_NUMField.Index = 12;
			fields.Add(SUPPLIER_NUMField);
			 
			DataSchemaField REQUIRED_BOX_NUMField = new DataSchemaField();
			REQUIRED_BOX_NUMField.Name = "REQUIRED_BOX_NUM";
			REQUIRED_BOX_NUMField.Type = typeof(int).ToString();
			REQUIRED_BOX_NUMField.Index = 13;
			fields.Add(REQUIRED_BOX_NUMField);
			 
			DataSchemaField ACTUAL_BOX_NUMField = new DataSchemaField();
			ACTUAL_BOX_NUMField.Name = "ACTUAL_BOX_NUM";
			ACTUAL_BOX_NUMField.Type = typeof(int).ToString();
			ACTUAL_BOX_NUMField.Index = 14;
			fields.Add(ACTUAL_BOX_NUMField);
			 
			DataSchemaField REQUIRED_QTYField = new DataSchemaField();
			REQUIRED_QTYField.Name = "REQUIRED_QTY";
			REQUIRED_QTYField.Type = typeof(decimal).ToString();
			REQUIRED_QTYField.Index = 15;
			fields.Add(REQUIRED_QTYField);
			 
			DataSchemaField ACTUAL_QTYField = new DataSchemaField();
			ACTUAL_QTYField.Name = "ACTUAL_QTY";
			ACTUAL_QTYField.Type = typeof(decimal).ToString();
			ACTUAL_QTYField.Index = 16;
			fields.Add(ACTUAL_QTYField);
			 
			DataSchemaField IS_OUTPUTField = new DataSchemaField();
			IS_OUTPUTField.Name = "IS_OUTPUT";
			IS_OUTPUTField.Type = typeof(int).ToString();
			IS_OUTPUTField.Index = 17;
			fields.Add(IS_OUTPUTField);
			 
			DataSchemaField FINAL_WMField = new DataSchemaField();
			FINAL_WMField.Name = "FINAL_WM";
			FINAL_WMField.Type = typeof(string).ToString();
			FINAL_WMField.Index = 18;
			fields.Add(FINAL_WMField);
			 
			DataSchemaField FINAL_ZONEField = new DataSchemaField();
			FINAL_ZONEField.Name = "FINAL_ZONE";
			FINAL_ZONEField.Type = typeof(string).ToString();
			FINAL_ZONEField.Index = 19;
			fields.Add(FINAL_ZONEField);
			 
			DataSchemaField IS_SCAN_BOXField = new DataSchemaField();
			IS_SCAN_BOXField.Name = "IS_SCAN_BOX";
			IS_SCAN_BOXField.Type = typeof(bool).ToString();
			IS_SCAN_BOXField.Index = 20;
			fields.Add(IS_SCAN_BOXField);
			 
			DataSchemaField UNQUALIFIED_QTYField = new DataSchemaField();
			UNQUALIFIED_QTYField.Name = "UNQUALIFIED_QTY";
			UNQUALIFIED_QTYField.Type = typeof(decimal).ToString();
			UNQUALIFIED_QTYField.Index = 21;
			fields.Add(UNQUALIFIED_QTYField);
			 
			DataSchemaField CHECK_MODEField = new DataSchemaField();
			CHECK_MODEField.Name = "CHECK_MODE";
			CHECK_MODEField.Type = typeof(int).ToString();
			CHECK_MODEField.Index = 22;
			fields.Add(CHECK_MODEField);
			 
			DataSchemaField CHECK_STATUSField = new DataSchemaField();
			CHECK_STATUSField.Name = "CHECK_STATUS";
			CHECK_STATUSField.Type = typeof(int).ToString();
			CHECK_STATUSField.Index = 23;
			fields.Add(CHECK_STATUSField);
			 
			DataSchemaField OPERABLE_NUMBERField = new DataSchemaField();
			OPERABLE_NUMBERField.Name = "OPERABLE_NUMBER";
			OPERABLE_NUMBERField.Type = typeof(decimal).ToString();
			OPERABLE_NUMBERField.Index = 24;
			fields.Add(OPERABLE_NUMBERField);
			 
			DataSchemaField OPERATION_TYPEField = new DataSchemaField();
			OPERATION_TYPEField.Name = "OPERATION_TYPE";
			OPERATION_TYPEField.Type = typeof(int).ToString();
			OPERATION_TYPEField.Index = 25;
			fields.Add(OPERATION_TYPEField);
			 
			DataSchemaField PACKAGEField = new DataSchemaField();
			PACKAGEField.Name = "PACKAGE";
			PACKAGEField.Type = typeof(decimal).ToString();
			PACKAGEField.Index = 26;
			fields.Add(PACKAGEField);
			 
			DataSchemaField PACKAGE_MODELField = new DataSchemaField();
			PACKAGE_MODELField.Name = "PACKAGE_MODEL";
			PACKAGE_MODELField.Type = typeof(string).ToString();
			PACKAGE_MODELField.Index = 27;
			fields.Add(PACKAGE_MODELField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long? OrderId{ get;set; }		
				
		[DataMember]
		public long DetailId{ get;set; }		
				
		[DataMember]
		public string OrderNo{ get;set; }		
				
		[DataMember]
		public string RunsheetNo{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string WmNo{ get;set; }		
				
		[DataMember]
		public string ZoneNo{ get;set; }		
				
		[DataMember]
		public string TargetWm{ get;set; }		
				
		[DataMember]
		public string TargetZone{ get;set; }		
				
		[DataMember]
		public string TargetDloc{ get;set; }		
				
		[DataMember]
		public string PartNo{ get;set; }		
				
		[DataMember]
		public string PartCname{ get;set; }		
				
		[DataMember]
		public string SupplierNum{ get;set; }		
				
		[DataMember]
		public int RequiredBoxNum{ get;set; }		
				
		[DataMember]
		public int ActualBoxNum{ get;set; }		
				
		[DataMember]
		public decimal RequiredQty{ get;set; }		
				
		[DataMember]
		public decimal ActualQty{ get;set; }		
				
		[DataMember]
		public int IsOutput{ get;set; }		
				
		[DataMember]
		public string FinalWm{ get;set; }		
				
		[DataMember]
		public string FinalZone{ get;set; }		
				
		[DataMember]
		public bool IsScanBox{ get;set; }		
				
		[DataMember]
		public decimal UnqualifiedQty{ get;set; }		
				
		[DataMember]
		public int CheckMode{ get;set; }		
				
		[DataMember]
		public int CheckStatus{ get;set; }		
				
		[DataMember]
		public decimal? OperableNumber{ get;set; }		
				
		[DataMember]
		public int OperationType{ get;set; }		
				
		[DataMember]
		public decimal Package{ get;set; }		
				
		[DataMember]
		public string PackageModel{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			ReceiveAndOutputInfo info = new ReceiveAndOutputInfo();

			info.OrderId = this.OrderId;
			info.DetailId = this.DetailId;
			info.OrderNo = this.OrderNo;
			info.RunsheetNo = this.RunsheetNo;
			info.Plant = this.Plant;
			info.WmNo = this.WmNo;
			info.ZoneNo = this.ZoneNo;
			info.TargetWm = this.TargetWm;
			info.TargetZone = this.TargetZone;
			info.TargetDloc = this.TargetDloc;
			info.PartNo = this.PartNo;
			info.PartCname = this.PartCname;
			info.SupplierNum = this.SupplierNum;
			info.RequiredBoxNum = this.RequiredBoxNum;
			info.ActualBoxNum = this.ActualBoxNum;
			info.RequiredQty = this.RequiredQty;
			info.ActualQty = this.ActualQty;
			info.IsOutput = this.IsOutput;
			info.FinalWm = this.FinalWm;
			info.FinalZone = this.FinalZone;
			info.IsScanBox = this.IsScanBox;
			info.UnqualifiedQty = this.UnqualifiedQty;
			info.CheckMode = this.CheckMode;
			info.CheckStatus = this.CheckStatus;
			info.OperableNumber = this.OperableNumber;
			info.OperationType = this.OperationType;
			info.Package = this.Package;
			info.PackageModel = this.PackageModel;
			return info;			
		}
		 
		public ReceiveAndOutputInfo Clone()
		{
			return ((ICloneable) this).Clone() as ReceiveAndOutputInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// ReceiveAndOutputInfoCollection对应表[V_WMM_RECEIVE_AND_OUTPUT]
    /// </summary>
	public partial class ReceiveAndOutputInfoCollection : BusinessObjectCollection<ReceiveAndOutputInfo>
	{
		public ReceiveAndOutputInfoCollection():base("V_WMM_RECEIVE_AND_OUTPUT"){}	
	}
}
