#region Declaim
//---------------------------------------------------------------------------
// Name:		SapSupplierQuotaInfo
// Function: 	Expose data in table SapSupplierQuota from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年5月9日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// SapSupplierQuotaInfo对应表[TI_IFM_SAP_SUPPLIER_QUOTA]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class SapSupplierQuotaInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public SapSupplierQuotaInfo( 
					long aId,

					Guid aFid,

					Guid aLogFid,

					string aPartNo,

					string aWerks,

					string aQtype,

					DateTime aIDate,

					DateTime aEDate,

					string aZnrmm,

					int aQupos,

					string aLifnr,

					string aSupplierName,

					int aQuote,

					string aZstop,

					string aFlag,

					int aProcessFlag,

					DateTime aProcessTime,

					string aComments,

					bool aValidFlag,

					string aCreateUser,

					DateTime aCreateDate,

					string aModifyUser,

					DateTime aModifyDate

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			LogFid = aLogFid;
		 
			PartNo = aPartNo;
		 
			Werks = aWerks;
		 
			Qtype = aQtype;
		 
			IDate = aIDate;
		 
			EDate = aEDate;
		 
			Znrmm = aZnrmm;
		 
			Qupos = aQupos;
		 
			Lifnr = aLifnr;
		 
			SupplierName = aSupplierName;
		 
			Quote = aQuote;
		 
			Zstop = aZstop;
		 
			Flag = aFlag;
		 
			ProcessFlag = aProcessFlag;
		 
			ProcessTime = aProcessTime;
		 
			Comments = aComments;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		}
		
		public SapSupplierQuotaInfo():base("TI_IFM_SAP_SUPPLIER_QUOTA")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                      _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField LOG_FIDField = new DataSchemaField();
			LOG_FIDField.Name = "LOG_FID";
			LOG_FIDField.Type = typeof(Guid).ToString();
			LOG_FIDField.Index = 2;
			fields.Add(LOG_FIDField);
			 
			DataSchemaField PART_NOField = new DataSchemaField();
			PART_NOField.Name = "PART_NO";
			PART_NOField.Type = typeof(string).ToString();
			PART_NOField.Index = 3;
			fields.Add(PART_NOField);
			 
			DataSchemaField WERKSField = new DataSchemaField();
			WERKSField.Name = "WERKS";
			WERKSField.Type = typeof(string).ToString();
			WERKSField.Index = 4;
			fields.Add(WERKSField);
			 
			DataSchemaField QTYPEField = new DataSchemaField();
			QTYPEField.Name = "QTYPE";
			QTYPEField.Type = typeof(string).ToString();
			QTYPEField.Index = 5;
			fields.Add(QTYPEField);
			 
			DataSchemaField I_DATEField = new DataSchemaField();
			I_DATEField.Name = "I_DATE";
			I_DATEField.Type = typeof(DateTime).ToString();
			I_DATEField.Index = 6;
			fields.Add(I_DATEField);
			 
			DataSchemaField E_DATEField = new DataSchemaField();
			E_DATEField.Name = "E_DATE";
			E_DATEField.Type = typeof(DateTime).ToString();
			E_DATEField.Index = 7;
			fields.Add(E_DATEField);
			 
			DataSchemaField ZNRMMField = new DataSchemaField();
			ZNRMMField.Name = "ZNRMM";
			ZNRMMField.Type = typeof(string).ToString();
			ZNRMMField.Index = 8;
			fields.Add(ZNRMMField);
			 
			DataSchemaField QUPOSField = new DataSchemaField();
			QUPOSField.Name = "QUPOS";
			QUPOSField.Type = typeof(int).ToString();
			QUPOSField.Index = 9;
			fields.Add(QUPOSField);
			 
			DataSchemaField LIFNRField = new DataSchemaField();
			LIFNRField.Name = "LIFNR";
			LIFNRField.Type = typeof(string).ToString();
			LIFNRField.Index = 10;
			fields.Add(LIFNRField);
			 
			DataSchemaField SUPPLIER_NAMEField = new DataSchemaField();
			SUPPLIER_NAMEField.Name = "SUPPLIER_NAME";
			SUPPLIER_NAMEField.Type = typeof(string).ToString();
			SUPPLIER_NAMEField.Index = 11;
			fields.Add(SUPPLIER_NAMEField);
			 
			DataSchemaField QUOTEField = new DataSchemaField();
			QUOTEField.Name = "QUOTE";
			QUOTEField.Type = typeof(int).ToString();
			QUOTEField.Index = 12;
			fields.Add(QUOTEField);
			 
			DataSchemaField ZSTOPField = new DataSchemaField();
			ZSTOPField.Name = "ZSTOP";
			ZSTOPField.Type = typeof(string).ToString();
			ZSTOPField.Index = 13;
			fields.Add(ZSTOPField);
			 
			DataSchemaField FLAGField = new DataSchemaField();
			FLAGField.Name = "FLAG";
			FLAGField.Type = typeof(string).ToString();
			FLAGField.Index = 14;
			fields.Add(FLAGField);
			 
			DataSchemaField PROCESS_FLAGField = new DataSchemaField();
			PROCESS_FLAGField.Name = "PROCESS_FLAG";
			PROCESS_FLAGField.Type = typeof(int).ToString();
			PROCESS_FLAGField.Index = 15;
			fields.Add(PROCESS_FLAGField);
			 
			DataSchemaField PROCESS_TIMEField = new DataSchemaField();
			PROCESS_TIMEField.Name = "PROCESS_TIME";
			PROCESS_TIMEField.Type = typeof(DateTime).ToString();
			PROCESS_TIMEField.Index = 16;
			fields.Add(PROCESS_TIMEField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 17;
			fields.Add(COMMENTSField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 18;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 19;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 20;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 21;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 22;
			fields.Add(MODIFY_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid Fid{ get;set; }		
				
		[DataMember]
		public Guid? LogFid{ get;set; }		
				
		[DataMember]
		public string PartNo{ get;set; }		
				
		[DataMember]
		public string Werks{ get;set; }		
				
		[DataMember]
		public string Qtype{ get;set; }		
				
		[DataMember]
		public DateTime? IDate{ get;set; }		
				
		[DataMember]
		public DateTime? EDate{ get;set; }		
				
		[DataMember]
		public string Znrmm{ get;set; }		
				
		[DataMember]
		public int? Qupos{ get;set; }		
				
		[DataMember]
		public string Lifnr{ get;set; }		
				
		[DataMember]
		public string SupplierName{ get;set; }		
				
		[DataMember]
		public int? Quote{ get;set; }		
				
		[DataMember]
		public string Zstop{ get;set; }		
				
		[DataMember]
		public string Flag{ get;set; }		
				
		[DataMember]
		public int? ProcessFlag{ get;set; }		
				
		[DataMember]
		public DateTime? ProcessTime{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public bool ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			SapSupplierQuotaInfo info = new SapSupplierQuotaInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.LogFid = this.LogFid;
			info.PartNo = this.PartNo;
			info.Werks = this.Werks;
			info.Qtype = this.Qtype;
			info.IDate = this.IDate;
			info.EDate = this.EDate;
			info.Znrmm = this.Znrmm;
			info.Qupos = this.Qupos;
			info.Lifnr = this.Lifnr;
			info.SupplierName = this.SupplierName;
			info.Quote = this.Quote;
			info.Zstop = this.Zstop;
			info.Flag = this.Flag;
			info.ProcessFlag = this.ProcessFlag;
			info.ProcessTime = this.ProcessTime;
			info.Comments = this.Comments;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			return info;			
		}
		 
		public SapSupplierQuotaInfo Clone()
		{
			return ((ICloneable) this).Clone() as SapSupplierQuotaInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// SapSupplierQuotaInfoCollection对应表[TI_IFM_SAP_SUPPLIER_QUOTA]
    /// </summary>
	public partial class SapSupplierQuotaInfoCollection : BusinessObjectCollection<SapSupplierQuotaInfo>
	{
		public SapSupplierQuotaInfoCollection():base("TI_IFM_SAP_SUPPLIER_QUOTA"){}	
	}
}
