#region Declaim
//---------------------------------------------------------------------------
// Name:		CustReceiveInfoInfo
// Function: 	Expose data in table CustReceiveInfo from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年5月30日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// CustReceiveInfoInfo对应表[TM_BAS_CUST_RECEIVE_INFO]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class CustReceiveInfoInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public CustReceiveInfoInfo( 
					string aCustCode,

					string aContactsCode,

					string aContactsName,

					string aCompanyName,

					string aReceiveAddress,

					string aContactsMobile,

					string aContactsTel,

					string aComments,

					DateTime aModifyDate,

					string aCreateUser,

					long aId,

					DateTime aCreateDate,

					Guid aFid,

					bool aValidFlag,

					string aModifyUser

				 
		) : this()
		{
			 
			CustCode = aCustCode;
		 
			ContactsCode = aContactsCode;
		 
			ContactsName = aContactsName;
		 
			CompanyName = aCompanyName;
		 
			ReceiveAddress = aReceiveAddress;
		 
			ContactsMobile = aContactsMobile;
		 
			ContactsTel = aContactsTel;
		 
			Comments = aComments;
		 
			ModifyDate = aModifyDate;
		 
			CreateUser = aCreateUser;
		 
			Id = aId;
		 
			CreateDate = aCreateDate;
		 
			Fid = aFid;
		 
			ValidFlag = aValidFlag;
		 
			ModifyUser = aModifyUser;
		}
		
		public CustReceiveInfoInfo():base("TM_BAS_CUST_RECEIVE_INFO")
		{
			List<string> keys = new List<string>();
			           			keys.Add("ID");    _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField CUST_CODEField = new DataSchemaField();
			CUST_CODEField.Name = "CUST_CODE";
			CUST_CODEField.Type = typeof(string).ToString();
			CUST_CODEField.Index = 0;
			fields.Add(CUST_CODEField);
			 
			DataSchemaField CONTACTS_CODEField = new DataSchemaField();
			CONTACTS_CODEField.Name = "CONTACTS_CODE";
			CONTACTS_CODEField.Type = typeof(string).ToString();
			CONTACTS_CODEField.Index = 1;
			fields.Add(CONTACTS_CODEField);
			 
			DataSchemaField CONTACTS_NAMEField = new DataSchemaField();
			CONTACTS_NAMEField.Name = "CONTACTS_NAME";
			CONTACTS_NAMEField.Type = typeof(string).ToString();
			CONTACTS_NAMEField.Index = 2;
			fields.Add(CONTACTS_NAMEField);
			 
			DataSchemaField COMPANY_NAMEField = new DataSchemaField();
			COMPANY_NAMEField.Name = "COMPANY_NAME";
			COMPANY_NAMEField.Type = typeof(string).ToString();
			COMPANY_NAMEField.Index = 3;
			fields.Add(COMPANY_NAMEField);
			 
			DataSchemaField RECEIVE_ADDRESSField = new DataSchemaField();
			RECEIVE_ADDRESSField.Name = "RECEIVE_ADDRESS";
			RECEIVE_ADDRESSField.Type = typeof(string).ToString();
			RECEIVE_ADDRESSField.Index = 4;
			fields.Add(RECEIVE_ADDRESSField);
			 
			DataSchemaField CONTACTS_MOBILEField = new DataSchemaField();
			CONTACTS_MOBILEField.Name = "CONTACTS_MOBILE";
			CONTACTS_MOBILEField.Type = typeof(string).ToString();
			CONTACTS_MOBILEField.Index = 5;
			fields.Add(CONTACTS_MOBILEField);
			 
			DataSchemaField CONTACTS_TELField = new DataSchemaField();
			CONTACTS_TELField.Name = "CONTACTS_TEL";
			CONTACTS_TELField.Type = typeof(string).ToString();
			CONTACTS_TELField.Index = 6;
			fields.Add(CONTACTS_TELField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 7;
			fields.Add(COMMENTSField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 8;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 9;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 10;
			fields.Add(IDField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 11;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 12;
			fields.Add(FIDField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 13;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 14;
			fields.Add(MODIFY_USERField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public string CustCode{ get;set; }		
				
		[DataMember]
		public string ContactsCode{ get;set; }		
				
		[DataMember]
		public string ContactsName{ get;set; }		
				
		[DataMember]
		public string CompanyName{ get;set; }		
				
		[DataMember]
		public string ReceiveAddress{ get;set; }		
				
		[DataMember]
		public string ContactsMobile{ get;set; }		
				
		[DataMember]
		public string ContactsTel{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public bool ValidFlag{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			CustReceiveInfoInfo info = new CustReceiveInfoInfo();

			info.CustCode = this.CustCode;
			info.ContactsCode = this.ContactsCode;
			info.ContactsName = this.ContactsName;
			info.CompanyName = this.CompanyName;
			info.ReceiveAddress = this.ReceiveAddress;
			info.ContactsMobile = this.ContactsMobile;
			info.ContactsTel = this.ContactsTel;
			info.Comments = this.Comments;
			info.ModifyDate = this.ModifyDate;
			info.CreateUser = this.CreateUser;
			info.Id = this.Id;
			info.CreateDate = this.CreateDate;
			info.Fid = this.Fid;
			info.ValidFlag = this.ValidFlag;
			info.ModifyUser = this.ModifyUser;
			return info;			
		}
		 
		public CustReceiveInfoInfo Clone()
		{
			return ((ICloneable) this).Clone() as CustReceiveInfoInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// CustReceiveInfoInfoCollection对应表[TM_BAS_CUST_RECEIVE_INFO]
    /// </summary>
	public partial class CustReceiveInfoInfoCollection : BusinessObjectCollection<CustReceiveInfoInfo>
	{
		public CustReceiveInfoInfoCollection():base("TM_BAS_CUST_RECEIVE_INFO"){}	
	}
}
