#region Declaim
//---------------------------------------------------------------------------
// Name:		PackageApplianceInfo
// Function: 	Expose data in table PackageAppliance from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年5月22日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// PackageApplianceInfo对应表[TM_BAS_PACKAGE_APPLIANCE]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class PackageApplianceInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public PackageApplianceInfo( 
					long aId,

					Guid aFid,

					string aPackageNo,

					string aPlant,

					string aAssemblyLine,

					string aPlantZone,

					string aWorkshop,

					string aSupplierNum,

					string aTransSupplierNum,

					string aPackageCname,

					string aPackageEname,

					string aBoxType,

					int aPackageType,

					bool aIsRepeat,

					bool aIsGeneral,

					int aMaterial,

					decimal aBoxWeight,

					int aUseSchope,

					DateTime aEffectiveDate,

					DateTime aExpireDate,

					decimal aMaxHigh,

					decimal aMaxWeight,

					decimal aMaxLoadWeight,

					decimal aMaxLoadNum,

					int aLayerBoxNum,

					int aStackingNum,

					string aLogicalPk,

					string aStorageLocation,

					bool aIsActive,

					int aPackageResource,

					int aTotalPackageQty,

					decimal aPackageLength,

					decimal aPackageWidth,

					decimal aPackageHeight,

					string aComments,

					bool aValidFlag,

					string aCreateUser,

					DateTime aCreateDate,

					string aModifyUser,

					DateTime aModifyDate

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			PackageNo = aPackageNo;
		 
			Plant = aPlant;
		 
			AssemblyLine = aAssemblyLine;
		 
			PlantZone = aPlantZone;
		 
			Workshop = aWorkshop;
		 
			SupplierNum = aSupplierNum;
		 
			TransSupplierNum = aTransSupplierNum;
		 
			PackageCname = aPackageCname;
		 
			PackageEname = aPackageEname;
		 
			BoxType = aBoxType;
		 
			PackageType = aPackageType;
		 
			IsRepeat = aIsRepeat;
		 
			IsGeneral = aIsGeneral;
		 
			Material = aMaterial;
		 
			BoxWeight = aBoxWeight;
		 
			UseSchope = aUseSchope;
		 
			EffectiveDate = aEffectiveDate;
		 
			ExpireDate = aExpireDate;
		 
			MaxHigh = aMaxHigh;
		 
			MaxWeight = aMaxWeight;
		 
			MaxLoadWeight = aMaxLoadWeight;
		 
			MaxLoadNum = aMaxLoadNum;
		 
			LayerBoxNum = aLayerBoxNum;
		 
			StackingNum = aStackingNum;
		 
			LogicalPk = aLogicalPk;
		 
			StorageLocation = aStorageLocation;
		 
			IsActive = aIsActive;
		 
			PackageResource = aPackageResource;
		 
			TotalPackageQty = aTotalPackageQty;
		 
			PackageLength = aPackageLength;
		 
			PackageWidth = aPackageWidth;
		 
			PackageHeight = aPackageHeight;
		 
			Comments = aComments;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		}
		
		public PackageApplianceInfo():base("TM_BAS_PACKAGE_APPLIANCE")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                                       _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField PACKAGE_NOField = new DataSchemaField();
			PACKAGE_NOField.Name = "PACKAGE_NO";
			PACKAGE_NOField.Type = typeof(string).ToString();
			PACKAGE_NOField.Index = 2;
			fields.Add(PACKAGE_NOField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 3;
			fields.Add(PLANTField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 4;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField PLANT_ZONEField = new DataSchemaField();
			PLANT_ZONEField.Name = "PLANT_ZONE";
			PLANT_ZONEField.Type = typeof(string).ToString();
			PLANT_ZONEField.Index = 5;
			fields.Add(PLANT_ZONEField);
			 
			DataSchemaField WORKSHOPField = new DataSchemaField();
			WORKSHOPField.Name = "WORKSHOP";
			WORKSHOPField.Type = typeof(string).ToString();
			WORKSHOPField.Index = 6;
			fields.Add(WORKSHOPField);
			 
			DataSchemaField SUPPLIER_NUMField = new DataSchemaField();
			SUPPLIER_NUMField.Name = "SUPPLIER_NUM";
			SUPPLIER_NUMField.Type = typeof(string).ToString();
			SUPPLIER_NUMField.Index = 7;
			fields.Add(SUPPLIER_NUMField);
			 
			DataSchemaField TRANS_SUPPLIER_NUMField = new DataSchemaField();
			TRANS_SUPPLIER_NUMField.Name = "TRANS_SUPPLIER_NUM";
			TRANS_SUPPLIER_NUMField.Type = typeof(string).ToString();
			TRANS_SUPPLIER_NUMField.Index = 8;
			fields.Add(TRANS_SUPPLIER_NUMField);
			 
			DataSchemaField PACKAGE_CNAMEField = new DataSchemaField();
			PACKAGE_CNAMEField.Name = "PACKAGE_CNAME";
			PACKAGE_CNAMEField.Type = typeof(string).ToString();
			PACKAGE_CNAMEField.Index = 9;
			fields.Add(PACKAGE_CNAMEField);
			 
			DataSchemaField PACKAGE_ENAMEField = new DataSchemaField();
			PACKAGE_ENAMEField.Name = "PACKAGE_ENAME";
			PACKAGE_ENAMEField.Type = typeof(string).ToString();
			PACKAGE_ENAMEField.Index = 10;
			fields.Add(PACKAGE_ENAMEField);
			 
			DataSchemaField BOX_TYPEField = new DataSchemaField();
			BOX_TYPEField.Name = "BOX_TYPE";
			BOX_TYPEField.Type = typeof(string).ToString();
			BOX_TYPEField.Index = 11;
			fields.Add(BOX_TYPEField);
			 
			DataSchemaField PACKAGE_TYPEField = new DataSchemaField();
			PACKAGE_TYPEField.Name = "PACKAGE_TYPE";
			PACKAGE_TYPEField.Type = typeof(int).ToString();
			PACKAGE_TYPEField.Index = 12;
			fields.Add(PACKAGE_TYPEField);
			 
			DataSchemaField IS_REPEATField = new DataSchemaField();
			IS_REPEATField.Name = "IS_REPEAT";
			IS_REPEATField.Type = typeof(bool).ToString();
			IS_REPEATField.Index = 13;
			fields.Add(IS_REPEATField);
			 
			DataSchemaField IS_GENERALField = new DataSchemaField();
			IS_GENERALField.Name = "IS_GENERAL";
			IS_GENERALField.Type = typeof(bool).ToString();
			IS_GENERALField.Index = 14;
			fields.Add(IS_GENERALField);
			 
			DataSchemaField MATERIALField = new DataSchemaField();
			MATERIALField.Name = "MATERIAL";
			MATERIALField.Type = typeof(int).ToString();
			MATERIALField.Index = 15;
			fields.Add(MATERIALField);
			 
			DataSchemaField BOX_WEIGHTField = new DataSchemaField();
			BOX_WEIGHTField.Name = "BOX_WEIGHT";
			BOX_WEIGHTField.Type = typeof(decimal).ToString();
			BOX_WEIGHTField.Index = 16;
			fields.Add(BOX_WEIGHTField);
			 
			DataSchemaField USE_SCHOPEField = new DataSchemaField();
			USE_SCHOPEField.Name = "USE_SCHOPE";
			USE_SCHOPEField.Type = typeof(int).ToString();
			USE_SCHOPEField.Index = 17;
			fields.Add(USE_SCHOPEField);
			 
			DataSchemaField EFFECTIVE_DATEField = new DataSchemaField();
			EFFECTIVE_DATEField.Name = "EFFECTIVE_DATE";
			EFFECTIVE_DATEField.Type = typeof(DateTime).ToString();
			EFFECTIVE_DATEField.Index = 18;
			fields.Add(EFFECTIVE_DATEField);
			 
			DataSchemaField EXPIRE_DATEField = new DataSchemaField();
			EXPIRE_DATEField.Name = "EXPIRE_DATE";
			EXPIRE_DATEField.Type = typeof(DateTime).ToString();
			EXPIRE_DATEField.Index = 19;
			fields.Add(EXPIRE_DATEField);
			 
			DataSchemaField MAX_HIGHField = new DataSchemaField();
			MAX_HIGHField.Name = "MAX_HIGH";
			MAX_HIGHField.Type = typeof(decimal).ToString();
			MAX_HIGHField.Index = 20;
			fields.Add(MAX_HIGHField);
			 
			DataSchemaField MAX_WEIGHTField = new DataSchemaField();
			MAX_WEIGHTField.Name = "MAX_WEIGHT";
			MAX_WEIGHTField.Type = typeof(decimal).ToString();
			MAX_WEIGHTField.Index = 21;
			fields.Add(MAX_WEIGHTField);
			 
			DataSchemaField MAX_LOAD_WEIGHTField = new DataSchemaField();
			MAX_LOAD_WEIGHTField.Name = "MAX_LOAD_WEIGHT";
			MAX_LOAD_WEIGHTField.Type = typeof(decimal).ToString();
			MAX_LOAD_WEIGHTField.Index = 22;
			fields.Add(MAX_LOAD_WEIGHTField);
			 
			DataSchemaField MAX_LOAD_NUMField = new DataSchemaField();
			MAX_LOAD_NUMField.Name = "MAX_LOAD_NUM";
			MAX_LOAD_NUMField.Type = typeof(decimal).ToString();
			MAX_LOAD_NUMField.Index = 23;
			fields.Add(MAX_LOAD_NUMField);
			 
			DataSchemaField LAYER_BOX_NUMField = new DataSchemaField();
			LAYER_BOX_NUMField.Name = "LAYER_BOX_NUM";
			LAYER_BOX_NUMField.Type = typeof(int).ToString();
			LAYER_BOX_NUMField.Index = 24;
			fields.Add(LAYER_BOX_NUMField);
			 
			DataSchemaField STACKING_NUMField = new DataSchemaField();
			STACKING_NUMField.Name = "STACKING_NUM";
			STACKING_NUMField.Type = typeof(int).ToString();
			STACKING_NUMField.Index = 25;
			fields.Add(STACKING_NUMField);
			 
			DataSchemaField LOGICAL_PKField = new DataSchemaField();
			LOGICAL_PKField.Name = "LOGICAL_PK";
			LOGICAL_PKField.Type = typeof(string).ToString();
			LOGICAL_PKField.Index = 26;
			fields.Add(LOGICAL_PKField);
			 
			DataSchemaField STORAGE_LOCATIONField = new DataSchemaField();
			STORAGE_LOCATIONField.Name = "STORAGE_LOCATION";
			STORAGE_LOCATIONField.Type = typeof(string).ToString();
			STORAGE_LOCATIONField.Index = 27;
			fields.Add(STORAGE_LOCATIONField);
			 
			DataSchemaField IS_ACTIVEField = new DataSchemaField();
			IS_ACTIVEField.Name = "IS_ACTIVE";
			IS_ACTIVEField.Type = typeof(bool).ToString();
			IS_ACTIVEField.Index = 28;
			fields.Add(IS_ACTIVEField);
			 
			DataSchemaField PACKAGE_RESOURCEField = new DataSchemaField();
			PACKAGE_RESOURCEField.Name = "PACKAGE_RESOURCE";
			PACKAGE_RESOURCEField.Type = typeof(int).ToString();
			PACKAGE_RESOURCEField.Index = 29;
			fields.Add(PACKAGE_RESOURCEField);
			 
			DataSchemaField TOTAL_PACKAGE_QTYField = new DataSchemaField();
			TOTAL_PACKAGE_QTYField.Name = "TOTAL_PACKAGE_QTY";
			TOTAL_PACKAGE_QTYField.Type = typeof(int).ToString();
			TOTAL_PACKAGE_QTYField.Index = 30;
			fields.Add(TOTAL_PACKAGE_QTYField);
			 
			DataSchemaField PACKAGE_LENGTHField = new DataSchemaField();
			PACKAGE_LENGTHField.Name = "PACKAGE_LENGTH";
			PACKAGE_LENGTHField.Type = typeof(decimal).ToString();
			PACKAGE_LENGTHField.Index = 31;
			fields.Add(PACKAGE_LENGTHField);
			 
			DataSchemaField PACKAGE_WIDTHField = new DataSchemaField();
			PACKAGE_WIDTHField.Name = "PACKAGE_WIDTH";
			PACKAGE_WIDTHField.Type = typeof(decimal).ToString();
			PACKAGE_WIDTHField.Index = 32;
			fields.Add(PACKAGE_WIDTHField);
			 
			DataSchemaField PACKAGE_HEIGHTField = new DataSchemaField();
			PACKAGE_HEIGHTField.Name = "PACKAGE_HEIGHT";
			PACKAGE_HEIGHTField.Type = typeof(decimal).ToString();
			PACKAGE_HEIGHTField.Index = 33;
			fields.Add(PACKAGE_HEIGHTField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 34;
			fields.Add(COMMENTSField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 35;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 36;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 37;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 38;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 39;
			fields.Add(MODIFY_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public string PackageNo{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string PlantZone{ get;set; }		
				
		[DataMember]
		public string Workshop{ get;set; }		
				
		[DataMember]
		public string SupplierNum{ get;set; }		
				
		[DataMember]
		public string TransSupplierNum{ get;set; }		
				
		[DataMember]
		public string PackageCname{ get;set; }		
				
		[DataMember]
		public string PackageEname{ get;set; }		
				
		[DataMember]
		public string BoxType{ get;set; }		
				
		[DataMember]
		public int? PackageType{ get;set; }		
				
		[DataMember]
		public bool? IsRepeat{ get;set; }		
				
		[DataMember]
		public bool? IsGeneral{ get;set; }		
				
		[DataMember]
		public int? Material{ get;set; }		
				
		[DataMember]
		public decimal? BoxWeight{ get;set; }		
				
		[DataMember]
		public int? UseSchope{ get;set; }		
				
		[DataMember]
		public DateTime? EffectiveDate{ get;set; }		
				
		[DataMember]
		public DateTime? ExpireDate{ get;set; }		
				
		[DataMember]
		public decimal? MaxHigh{ get;set; }		
				
		[DataMember]
		public decimal? MaxWeight{ get;set; }		
				
		[DataMember]
		public decimal? MaxLoadWeight{ get;set; }		
				
		[DataMember]
		public decimal? MaxLoadNum{ get;set; }		
				
		[DataMember]
		public int? LayerBoxNum{ get;set; }		
				
		[DataMember]
		public int? StackingNum{ get;set; }		
				
		[DataMember]
		public string LogicalPk{ get;set; }		
				
		[DataMember]
		public string StorageLocation{ get;set; }		
				
		[DataMember]
		public bool? IsActive{ get;set; }		
				
		[DataMember]
		public int? PackageResource{ get;set; }		
				
		[DataMember]
		public int? TotalPackageQty{ get;set; }		
				
		[DataMember]
		public decimal? PackageLength{ get;set; }		
				
		[DataMember]
		public decimal? PackageWidth{ get;set; }		
				
		[DataMember]
		public decimal? PackageHeight{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public bool ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			PackageApplianceInfo info = new PackageApplianceInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.PackageNo = this.PackageNo;
			info.Plant = this.Plant;
			info.AssemblyLine = this.AssemblyLine;
			info.PlantZone = this.PlantZone;
			info.Workshop = this.Workshop;
			info.SupplierNum = this.SupplierNum;
			info.TransSupplierNum = this.TransSupplierNum;
			info.PackageCname = this.PackageCname;
			info.PackageEname = this.PackageEname;
			info.BoxType = this.BoxType;
			info.PackageType = this.PackageType;
			info.IsRepeat = this.IsRepeat;
			info.IsGeneral = this.IsGeneral;
			info.Material = this.Material;
			info.BoxWeight = this.BoxWeight;
			info.UseSchope = this.UseSchope;
			info.EffectiveDate = this.EffectiveDate;
			info.ExpireDate = this.ExpireDate;
			info.MaxHigh = this.MaxHigh;
			info.MaxWeight = this.MaxWeight;
			info.MaxLoadWeight = this.MaxLoadWeight;
			info.MaxLoadNum = this.MaxLoadNum;
			info.LayerBoxNum = this.LayerBoxNum;
			info.StackingNum = this.StackingNum;
			info.LogicalPk = this.LogicalPk;
			info.StorageLocation = this.StorageLocation;
			info.IsActive = this.IsActive;
			info.PackageResource = this.PackageResource;
			info.TotalPackageQty = this.TotalPackageQty;
			info.PackageLength = this.PackageLength;
			info.PackageWidth = this.PackageWidth;
			info.PackageHeight = this.PackageHeight;
			info.Comments = this.Comments;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			return info;			
		}
		 
		public PackageApplianceInfo Clone()
		{
			return ((ICloneable) this).Clone() as PackageApplianceInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// PackageApplianceInfoCollection对应表[TM_BAS_PACKAGE_APPLIANCE]
    /// </summary>
	public partial class PackageApplianceInfoCollection : BusinessObjectCollection<PackageApplianceInfo>
	{
		public PackageApplianceInfoCollection():base("TM_BAS_PACKAGE_APPLIANCE"){}	
	}
}
