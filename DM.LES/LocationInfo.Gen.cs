#region Declaim
//---------------------------------------------------------------------------
// Name:		LocationInfo
// Function: 	Expose data in table Location from database as business object to MES system.
// Tool:		T4
// CreateDate:	2020年3月30日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// LocationInfo对应表[TM_BAS_LOCATION]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class LocationInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public LocationInfo( 
					string aPlant,

					string aWorkshop,

					string aAssemblyLine,

					string aWorkshopSection,

					string aLocation,

					string aPlantZone,

					int aLocationType,

					string aRegion,

					int aFootprint,

					int aFootprintNo,

					int aSequenceNo,

					int aPickupSeqNo,

					string aDcpPoint,

					string aComments,

					string aModifyUser,

					long aId,

					bool aValidFlag,

					string aCreateUser,

					DateTime aModifyDate,

					Guid aFid,

					string aLocationName,

					DateTime aCreateDate

				 
		) : this()
		{
			 
			Plant = aPlant;
		 
			Workshop = aWorkshop;
		 
			AssemblyLine = aAssemblyLine;
		 
			WorkshopSection = aWorkshopSection;
		 
			Location = aLocation;
		 
			PlantZone = aPlantZone;
		 
			LocationType = aLocationType;
		 
			Region = aRegion;
		 
			Footprint = aFootprint;
		 
			FootprintNo = aFootprintNo;
		 
			SequenceNo = aSequenceNo;
		 
			PickupSeqNo = aPickupSeqNo;
		 
			DcpPoint = aDcpPoint;
		 
			Comments = aComments;
		 
			ModifyUser = aModifyUser;
		 
			Id = aId;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			ModifyDate = aModifyDate;
		 
			Fid = aFid;
		 
			LocationName = aLocationName;
		 
			CreateDate = aCreateDate;
		}
		
		public LocationInfo():base("TM_BAS_LOCATION")
		{
			List<string> keys = new List<string>();
			                			keys.Add("ID");      _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 0;
			fields.Add(PLANTField);
			 
			DataSchemaField WORKSHOPField = new DataSchemaField();
			WORKSHOPField.Name = "WORKSHOP";
			WORKSHOPField.Type = typeof(string).ToString();
			WORKSHOPField.Index = 1;
			fields.Add(WORKSHOPField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 2;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField WORKSHOP_SECTIONField = new DataSchemaField();
			WORKSHOP_SECTIONField.Name = "WORKSHOP_SECTION";
			WORKSHOP_SECTIONField.Type = typeof(string).ToString();
			WORKSHOP_SECTIONField.Index = 3;
			fields.Add(WORKSHOP_SECTIONField);
			 
			DataSchemaField LOCATIONField = new DataSchemaField();
			LOCATIONField.Name = "LOCATION";
			LOCATIONField.Type = typeof(string).ToString();
			LOCATIONField.Index = 4;
			fields.Add(LOCATIONField);
			 
			DataSchemaField PLANT_ZONEField = new DataSchemaField();
			PLANT_ZONEField.Name = "PLANT_ZONE";
			PLANT_ZONEField.Type = typeof(string).ToString();
			PLANT_ZONEField.Index = 5;
			fields.Add(PLANT_ZONEField);
			 
			DataSchemaField LOCATION_TYPEField = new DataSchemaField();
			LOCATION_TYPEField.Name = "LOCATION_TYPE";
			LOCATION_TYPEField.Type = typeof(int).ToString();
			LOCATION_TYPEField.Index = 6;
			fields.Add(LOCATION_TYPEField);
			 
			DataSchemaField REGIONField = new DataSchemaField();
			REGIONField.Name = "REGION";
			REGIONField.Type = typeof(string).ToString();
			REGIONField.Index = 7;
			fields.Add(REGIONField);
			 
			DataSchemaField FOOTPRINTField = new DataSchemaField();
			FOOTPRINTField.Name = "FOOTPRINT";
			FOOTPRINTField.Type = typeof(int).ToString();
			FOOTPRINTField.Index = 8;
			fields.Add(FOOTPRINTField);
			 
			DataSchemaField FOOTPRINT_NOField = new DataSchemaField();
			FOOTPRINT_NOField.Name = "FOOTPRINT_NO";
			FOOTPRINT_NOField.Type = typeof(int).ToString();
			FOOTPRINT_NOField.Index = 9;
			fields.Add(FOOTPRINT_NOField);
			 
			DataSchemaField SEQUENCE_NOField = new DataSchemaField();
			SEQUENCE_NOField.Name = "SEQUENCE_NO";
			SEQUENCE_NOField.Type = typeof(int).ToString();
			SEQUENCE_NOField.Index = 10;
			fields.Add(SEQUENCE_NOField);
			 
			DataSchemaField PICKUP_SEQ_NOField = new DataSchemaField();
			PICKUP_SEQ_NOField.Name = "PICKUP_SEQ_NO";
			PICKUP_SEQ_NOField.Type = typeof(int).ToString();
			PICKUP_SEQ_NOField.Index = 11;
			fields.Add(PICKUP_SEQ_NOField);
			 
			DataSchemaField DCP_POINTField = new DataSchemaField();
			DCP_POINTField.Name = "DCP_POINT";
			DCP_POINTField.Type = typeof(string).ToString();
			DCP_POINTField.Index = 12;
			fields.Add(DCP_POINTField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 13;
			fields.Add(COMMENTSField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 14;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 15;
			fields.Add(IDField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 16;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 17;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 18;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 19;
			fields.Add(FIDField);
			 
			DataSchemaField LOCATION_NAMEField = new DataSchemaField();
			LOCATION_NAMEField.Name = "LOCATION_NAME";
			LOCATION_NAMEField.Type = typeof(string).ToString();
			LOCATION_NAMEField.Index = 20;
			fields.Add(LOCATION_NAMEField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 21;
			fields.Add(CREATE_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string Workshop{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string WorkshopSection{ get;set; }		
				
		[DataMember]
		public string Location{ get;set; }		
				
		[DataMember]
		public string PlantZone{ get;set; }		
				
		[DataMember]
		public int? LocationType{ get;set; }		
				
		[DataMember]
		public string Region{ get;set; }		
				
		[DataMember]
		public int? Footprint{ get;set; }		
				
		[DataMember]
		public int? FootprintNo{ get;set; }		
				
		[DataMember]
		public int? SequenceNo{ get;set; }		
				
		[DataMember]
		public int? PickupSeqNo{ get;set; }		
				
		[DataMember]
		public string DcpPoint{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public string LocationName{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			LocationInfo info = new LocationInfo();

			info.Plant = this.Plant;
			info.Workshop = this.Workshop;
			info.AssemblyLine = this.AssemblyLine;
			info.WorkshopSection = this.WorkshopSection;
			info.Location = this.Location;
			info.PlantZone = this.PlantZone;
			info.LocationType = this.LocationType;
			info.Region = this.Region;
			info.Footprint = this.Footprint;
			info.FootprintNo = this.FootprintNo;
			info.SequenceNo = this.SequenceNo;
			info.PickupSeqNo = this.PickupSeqNo;
			info.DcpPoint = this.DcpPoint;
			info.Comments = this.Comments;
			info.ModifyUser = this.ModifyUser;
			info.Id = this.Id;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.ModifyDate = this.ModifyDate;
			info.Fid = this.Fid;
			info.LocationName = this.LocationName;
			info.CreateDate = this.CreateDate;
			return info;			
		}
		 
		public LocationInfo Clone()
		{
			return ((ICloneable) this).Clone() as LocationInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// LocationInfoCollection对应表[TM_BAS_LOCATION]
    /// </summary>
	public partial class LocationInfoCollection : BusinessObjectCollection<LocationInfo>
	{
		public LocationInfoCollection():base("TM_BAS_LOCATION"){}	
	}
}
