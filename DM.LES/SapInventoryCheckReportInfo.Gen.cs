#region Declaim
//---------------------------------------------------------------------------
// Name:		SapInventoryCheckReportInfo
// Function: 	Expose data in table SapInventoryCheckReport from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月24日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// SapInventoryCheckReportInfo对应表[TI_IFM_SAP_INVENTORY_CHECK_REPORT]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class SapInventoryCheckReportInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public SapInventoryCheckReportInfo( 
					long aId,

					Guid aFid,

					Guid aLogFid,

					string aIblnr,

					string aLgort,

					string aRemarks,

					string aMatnr,

					decimal aMenge,

					DateTime aZldat,

					int aAqty,

					int aDqty,

					int aProcessFlag,

					DateTime aProcessTime,

					bool aValidFlag,

					string aCreateUser,

					DateTime aCreateDate,

					string aModifyUser,

					DateTime aModifyDate,

					string aComments

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			LogFid = aLogFid;
		 
			Iblnr = aIblnr;
		 
			Lgort = aLgort;
		 
			Remarks = aRemarks;
		 
			Matnr = aMatnr;
		 
			Menge = aMenge;
		 
			Zldat = aZldat;
		 
			Aqty = aAqty;
		 
			Dqty = aDqty;
		 
			ProcessFlag = aProcessFlag;
		 
			ProcessTime = aProcessTime;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		 
			Comments = aComments;
		}
		
		public SapInventoryCheckReportInfo():base("TI_IFM_SAP_INVENTORY_CHECK_REPORT")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                  _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField LOG_FIDField = new DataSchemaField();
			LOG_FIDField.Name = "LOG_FID";
			LOG_FIDField.Type = typeof(Guid).ToString();
			LOG_FIDField.Index = 2;
			fields.Add(LOG_FIDField);
			 
			DataSchemaField IBLNRField = new DataSchemaField();
			IBLNRField.Name = "IBLNR";
			IBLNRField.Type = typeof(string).ToString();
			IBLNRField.Index = 3;
			fields.Add(IBLNRField);
			 
			DataSchemaField LGORTField = new DataSchemaField();
			LGORTField.Name = "LGORT";
			LGORTField.Type = typeof(string).ToString();
			LGORTField.Index = 4;
			fields.Add(LGORTField);
			 
			DataSchemaField REMARKSField = new DataSchemaField();
			REMARKSField.Name = "REMARKS";
			REMARKSField.Type = typeof(string).ToString();
			REMARKSField.Index = 5;
			fields.Add(REMARKSField);
			 
			DataSchemaField MATNRField = new DataSchemaField();
			MATNRField.Name = "MATNR";
			MATNRField.Type = typeof(string).ToString();
			MATNRField.Index = 6;
			fields.Add(MATNRField);
			 
			DataSchemaField MENGEField = new DataSchemaField();
			MENGEField.Name = "MENGE";
			MENGEField.Type = typeof(decimal).ToString();
			MENGEField.Index = 7;
			fields.Add(MENGEField);
			 
			DataSchemaField ZLDATField = new DataSchemaField();
			ZLDATField.Name = "ZLDAT";
			ZLDATField.Type = typeof(DateTime).ToString();
			ZLDATField.Index = 8;
			fields.Add(ZLDATField);
			 
			DataSchemaField AQTYField = new DataSchemaField();
			AQTYField.Name = "AQTY";
			AQTYField.Type = typeof(int).ToString();
			AQTYField.Index = 9;
			fields.Add(AQTYField);
			 
			DataSchemaField DQTYField = new DataSchemaField();
			DQTYField.Name = "DQTY";
			DQTYField.Type = typeof(int).ToString();
			DQTYField.Index = 10;
			fields.Add(DQTYField);
			 
			DataSchemaField PROCESS_FLAGField = new DataSchemaField();
			PROCESS_FLAGField.Name = "PROCESS_FLAG";
			PROCESS_FLAGField.Type = typeof(int).ToString();
			PROCESS_FLAGField.Index = 11;
			fields.Add(PROCESS_FLAGField);
			 
			DataSchemaField PROCESS_TIMEField = new DataSchemaField();
			PROCESS_TIMEField.Name = "PROCESS_TIME";
			PROCESS_TIMEField.Type = typeof(DateTime).ToString();
			PROCESS_TIMEField.Index = 12;
			fields.Add(PROCESS_TIMEField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 13;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 14;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 15;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 16;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 17;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 18;
			fields.Add(COMMENTSField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public Guid? LogFid{ get;set; }		
				
		[DataMember]
		public string Iblnr{ get;set; }		
				
		[DataMember]
		public string Lgort{ get;set; }		
				
		[DataMember]
		public string Remarks{ get;set; }		
				
		[DataMember]
		public string Matnr{ get;set; }		
				
		[DataMember]
		public decimal? Menge{ get;set; }		
				
		[DataMember]
		public DateTime? Zldat{ get;set; }		
				
		[DataMember]
		public int? Aqty{ get;set; }		
				
		[DataMember]
		public int? Dqty{ get;set; }		
				
		[DataMember]
		public int? ProcessFlag{ get;set; }		
				
		[DataMember]
		public DateTime? ProcessTime{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			SapInventoryCheckReportInfo info = new SapInventoryCheckReportInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.LogFid = this.LogFid;
			info.Iblnr = this.Iblnr;
			info.Lgort = this.Lgort;
			info.Remarks = this.Remarks;
			info.Matnr = this.Matnr;
			info.Menge = this.Menge;
			info.Zldat = this.Zldat;
			info.Aqty = this.Aqty;
			info.Dqty = this.Dqty;
			info.ProcessFlag = this.ProcessFlag;
			info.ProcessTime = this.ProcessTime;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			info.Comments = this.Comments;
			return info;			
		}
		 
		public SapInventoryCheckReportInfo Clone()
		{
			return ((ICloneable) this).Clone() as SapInventoryCheckReportInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// SapInventoryCheckReportInfoCollection对应表[TI_IFM_SAP_INVENTORY_CHECK_REPORT]
    /// </summary>
	public partial class SapInventoryCheckReportInfoCollection : BusinessObjectCollection<SapInventoryCheckReportInfo>
	{
		public SapInventoryCheckReportInfoCollection():base("TI_IFM_SAP_INVENTORY_CHECK_REPORT"){}	
	}
}
