#region Declaim
//---------------------------------------------------------------------------
// Name:		JisCounterLogInfo
// Function: 	Expose data in table JisCounterLog from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月11日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// JisCounterLogInfo对应表[TT_MPM_JIS_COUNTER_LOG]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class JisCounterLogInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public JisCounterLogInfo( 
					long aId,

					Guid aFid,

					Guid aCounterFid,

					Guid aSourceDataFid,

					int aSourceDataType,

					string aSourceData,

					decimal aPartQty,

					string aPartNo,

					string aPartCname,

					string aPartVersion,

					string aSupplierNum,

					string aPlant,

					string aPlantZone,

					string aWorkshop,

					string aAssemblyLine,

					string aWorkshopSection,

					string aLocation,

					string aComments,

					bool aValidFlag,

					DateTime aCreateDate,

					string aCreateUser,

					DateTime aModifyDate,

					string aModifyUser

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			CounterFid = aCounterFid;
		 
			SourceDataFid = aSourceDataFid;
		 
			SourceDataType = aSourceDataType;
		 
			SourceData = aSourceData;
		 
			PartQty = aPartQty;
		 
			PartNo = aPartNo;
		 
			PartCname = aPartCname;
		 
			PartVersion = aPartVersion;
		 
			SupplierNum = aSupplierNum;
		 
			Plant = aPlant;
		 
			PlantZone = aPlantZone;
		 
			Workshop = aWorkshop;
		 
			AssemblyLine = aAssemblyLine;
		 
			WorkshopSection = aWorkshopSection;
		 
			Location = aLocation;
		 
			Comments = aComments;
		 
			ValidFlag = aValidFlag;
		 
			CreateDate = aCreateDate;
		 
			CreateUser = aCreateUser;
		 
			ModifyDate = aModifyDate;
		 
			ModifyUser = aModifyUser;
		}
		
		public JisCounterLogInfo():base("TT_MPM_JIS_COUNTER_LOG")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                      _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField COUNTER_FIDField = new DataSchemaField();
			COUNTER_FIDField.Name = "COUNTER_FID";
			COUNTER_FIDField.Type = typeof(Guid).ToString();
			COUNTER_FIDField.Index = 2;
			fields.Add(COUNTER_FIDField);
			 
			DataSchemaField SOURCE_DATA_FIDField = new DataSchemaField();
			SOURCE_DATA_FIDField.Name = "SOURCE_DATA_FID";
			SOURCE_DATA_FIDField.Type = typeof(Guid).ToString();
			SOURCE_DATA_FIDField.Index = 3;
			fields.Add(SOURCE_DATA_FIDField);
			 
			DataSchemaField SOURCE_DATA_TYPEField = new DataSchemaField();
			SOURCE_DATA_TYPEField.Name = "SOURCE_DATA_TYPE";
			SOURCE_DATA_TYPEField.Type = typeof(int).ToString();
			SOURCE_DATA_TYPEField.Index = 4;
			fields.Add(SOURCE_DATA_TYPEField);
			 
			DataSchemaField SOURCE_DATAField = new DataSchemaField();
			SOURCE_DATAField.Name = "SOURCE_DATA";
			SOURCE_DATAField.Type = typeof(string).ToString();
			SOURCE_DATAField.Index = 5;
			fields.Add(SOURCE_DATAField);
			 
			DataSchemaField PART_QTYField = new DataSchemaField();
			PART_QTYField.Name = "PART_QTY";
			PART_QTYField.Type = typeof(decimal).ToString();
			PART_QTYField.Index = 6;
			fields.Add(PART_QTYField);
			 
			DataSchemaField PART_NOField = new DataSchemaField();
			PART_NOField.Name = "PART_NO";
			PART_NOField.Type = typeof(string).ToString();
			PART_NOField.Index = 7;
			fields.Add(PART_NOField);
			 
			DataSchemaField PART_CNAMEField = new DataSchemaField();
			PART_CNAMEField.Name = "PART_CNAME";
			PART_CNAMEField.Type = typeof(string).ToString();
			PART_CNAMEField.Index = 8;
			fields.Add(PART_CNAMEField);
			 
			DataSchemaField PART_VERSIONField = new DataSchemaField();
			PART_VERSIONField.Name = "PART_VERSION";
			PART_VERSIONField.Type = typeof(string).ToString();
			PART_VERSIONField.Index = 9;
			fields.Add(PART_VERSIONField);
			 
			DataSchemaField SUPPLIER_NUMField = new DataSchemaField();
			SUPPLIER_NUMField.Name = "SUPPLIER_NUM";
			SUPPLIER_NUMField.Type = typeof(string).ToString();
			SUPPLIER_NUMField.Index = 10;
			fields.Add(SUPPLIER_NUMField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 11;
			fields.Add(PLANTField);
			 
			DataSchemaField PLANT_ZONEField = new DataSchemaField();
			PLANT_ZONEField.Name = "PLANT_ZONE";
			PLANT_ZONEField.Type = typeof(string).ToString();
			PLANT_ZONEField.Index = 12;
			fields.Add(PLANT_ZONEField);
			 
			DataSchemaField WORKSHOPField = new DataSchemaField();
			WORKSHOPField.Name = "WORKSHOP";
			WORKSHOPField.Type = typeof(string).ToString();
			WORKSHOPField.Index = 13;
			fields.Add(WORKSHOPField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 14;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField WORKSHOP_SECTIONField = new DataSchemaField();
			WORKSHOP_SECTIONField.Name = "WORKSHOP_SECTION";
			WORKSHOP_SECTIONField.Type = typeof(string).ToString();
			WORKSHOP_SECTIONField.Index = 15;
			fields.Add(WORKSHOP_SECTIONField);
			 
			DataSchemaField LOCATIONField = new DataSchemaField();
			LOCATIONField.Name = "LOCATION";
			LOCATIONField.Type = typeof(string).ToString();
			LOCATIONField.Index = 16;
			fields.Add(LOCATIONField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 17;
			fields.Add(COMMENTSField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 18;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 19;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 20;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 21;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 22;
			fields.Add(MODIFY_USERField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public Guid? CounterFid{ get;set; }		
				
		[DataMember]
		public Guid? SourceDataFid{ get;set; }		
				
		[DataMember]
		public int? SourceDataType{ get;set; }		
				
		[DataMember]
		public string SourceData{ get;set; }		
				
		[DataMember]
		public decimal? PartQty{ get;set; }		
				
		[DataMember]
		public string PartNo{ get;set; }		
				
		[DataMember]
		public string PartCname{ get;set; }		
				
		[DataMember]
		public string PartVersion{ get;set; }		
				
		[DataMember]
		public string SupplierNum{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string PlantZone{ get;set; }		
				
		[DataMember]
		public string Workshop{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string WorkshopSection{ get;set; }		
				
		[DataMember]
		public string Location{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public bool ValidFlag{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			JisCounterLogInfo info = new JisCounterLogInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.CounterFid = this.CounterFid;
			info.SourceDataFid = this.SourceDataFid;
			info.SourceDataType = this.SourceDataType;
			info.SourceData = this.SourceData;
			info.PartQty = this.PartQty;
			info.PartNo = this.PartNo;
			info.PartCname = this.PartCname;
			info.PartVersion = this.PartVersion;
			info.SupplierNum = this.SupplierNum;
			info.Plant = this.Plant;
			info.PlantZone = this.PlantZone;
			info.Workshop = this.Workshop;
			info.AssemblyLine = this.AssemblyLine;
			info.WorkshopSection = this.WorkshopSection;
			info.Location = this.Location;
			info.Comments = this.Comments;
			info.ValidFlag = this.ValidFlag;
			info.CreateDate = this.CreateDate;
			info.CreateUser = this.CreateUser;
			info.ModifyDate = this.ModifyDate;
			info.ModifyUser = this.ModifyUser;
			return info;			
		}
		 
		public JisCounterLogInfo Clone()
		{
			return ((ICloneable) this).Clone() as JisCounterLogInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// JisCounterLogInfoCollection对应表[TT_MPM_JIS_COUNTER_LOG]
    /// </summary>
	public partial class JisCounterLogInfoCollection : BusinessObjectCollection<JisCounterLogInfo>
	{
		public JisCounterLogInfoCollection():base("TT_MPM_JIS_COUNTER_LOG"){}	
	}
}
