#region Declaim
//---------------------------------------------------------------------------
// Name:		SapOutboundDetailLogInfo
// Function: 	Expose data in table SapOutboundDetailLog from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年5月8日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// SapOutboundDetailLogInfo对应表[TI_IFM_SAP_OUTBOUND_DETAIL_LOG]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class SapOutboundDetailLogInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public SapOutboundDetailLogInfo( 
					int aId,

					Guid aFid,

					Guid aLogFid,

					string aTransNo,

					string aMethodCode,

					DateTime aExecuteStartTime,

					DateTime aExecuteEndTime,

					int aExecuteResult,

					string aErrorCode,

					string aErrorMsg,

					bool aValidFlag,

					string aCreateUser,

					DateTime aCreateDate,

					string aModifyUser,

					DateTime aModifyDate

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			LogFid = aLogFid;
		 
			TransNo = aTransNo;
		 
			MethodCode = aMethodCode;
		 
			ExecuteStartTime = aExecuteStartTime;
		 
			ExecuteEndTime = aExecuteEndTime;
		 
			ExecuteResult = aExecuteResult;
		 
			ErrorCode = aErrorCode;
		 
			ErrorMsg = aErrorMsg;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		}
		
		public SapOutboundDetailLogInfo():base("TI_IFM_SAP_OUTBOUND_DETAIL_LOG")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");              _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(int).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField LOG_FIDField = new DataSchemaField();
			LOG_FIDField.Name = "LOG_FID";
			LOG_FIDField.Type = typeof(Guid).ToString();
			LOG_FIDField.Index = 2;
			fields.Add(LOG_FIDField);
			 
			DataSchemaField TRANS_NOField = new DataSchemaField();
			TRANS_NOField.Name = "TRANS_NO";
			TRANS_NOField.Type = typeof(string).ToString();
			TRANS_NOField.Index = 3;
			fields.Add(TRANS_NOField);
			 
			DataSchemaField METHOD_CODEField = new DataSchemaField();
			METHOD_CODEField.Name = "METHOD_CODE";
			METHOD_CODEField.Type = typeof(string).ToString();
			METHOD_CODEField.Index = 4;
			fields.Add(METHOD_CODEField);
			 
			DataSchemaField EXECUTE_START_TIMEField = new DataSchemaField();
			EXECUTE_START_TIMEField.Name = "EXECUTE_START_TIME";
			EXECUTE_START_TIMEField.Type = typeof(DateTime).ToString();
			EXECUTE_START_TIMEField.Index = 5;
			fields.Add(EXECUTE_START_TIMEField);
			 
			DataSchemaField EXECUTE_END_TIMEField = new DataSchemaField();
			EXECUTE_END_TIMEField.Name = "EXECUTE_END_TIME";
			EXECUTE_END_TIMEField.Type = typeof(DateTime).ToString();
			EXECUTE_END_TIMEField.Index = 6;
			fields.Add(EXECUTE_END_TIMEField);
			 
			DataSchemaField EXECUTE_RESULTField = new DataSchemaField();
			EXECUTE_RESULTField.Name = "EXECUTE_RESULT";
			EXECUTE_RESULTField.Type = typeof(int).ToString();
			EXECUTE_RESULTField.Index = 7;
			fields.Add(EXECUTE_RESULTField);
			 
			DataSchemaField ERROR_CODEField = new DataSchemaField();
			ERROR_CODEField.Name = "ERROR_CODE";
			ERROR_CODEField.Type = typeof(string).ToString();
			ERROR_CODEField.Index = 8;
			fields.Add(ERROR_CODEField);
			 
			DataSchemaField ERROR_MSGField = new DataSchemaField();
			ERROR_MSGField.Name = "ERROR_MSG";
			ERROR_MSGField.Type = typeof(string).ToString();
			ERROR_MSGField.Index = 9;
			fields.Add(ERROR_MSGField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 10;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 11;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 12;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 13;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 14;
			fields.Add(MODIFY_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public int Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public Guid? LogFid{ get;set; }		
				
		[DataMember]
		public string TransNo{ get;set; }		
				
		[DataMember]
		public string MethodCode{ get;set; }		
				
		[DataMember]
		public DateTime? ExecuteStartTime{ get;set; }		
				
		[DataMember]
		public DateTime? ExecuteEndTime{ get;set; }		
				
		[DataMember]
		public int? ExecuteResult{ get;set; }		
				
		[DataMember]
		public string ErrorCode{ get;set; }		
				
		[DataMember]
		public string ErrorMsg{ get;set; }		
				
		[DataMember]
		public bool ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			SapOutboundDetailLogInfo info = new SapOutboundDetailLogInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.LogFid = this.LogFid;
			info.TransNo = this.TransNo;
			info.MethodCode = this.MethodCode;
			info.ExecuteStartTime = this.ExecuteStartTime;
			info.ExecuteEndTime = this.ExecuteEndTime;
			info.ExecuteResult = this.ExecuteResult;
			info.ErrorCode = this.ErrorCode;
			info.ErrorMsg = this.ErrorMsg;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			return info;			
		}
		 
		public SapOutboundDetailLogInfo Clone()
		{
			return ((ICloneable) this).Clone() as SapOutboundDetailLogInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// SapOutboundDetailLogInfoCollection对应表[TI_IFM_SAP_OUTBOUND_DETAIL_LOG]
    /// </summary>
	public partial class SapOutboundDetailLogInfoCollection : BusinessObjectCollection<SapOutboundDetailLogInfo>
	{
		public SapOutboundDetailLogInfoCollection():base("TI_IFM_SAP_OUTBOUND_DETAIL_LOG"){}	
	}
}
