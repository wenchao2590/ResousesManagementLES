#region Declaim
//---------------------------------------------------------------------------
// Name:		PackageStocksInfo
// Function: 	Expose data in table PackageStocks from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月13日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// PackageStocksInfo对应表[TT_PCM_PACKAGE_STOCKS]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class PackageStocksInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public PackageStocksInfo( 
					long aId,

					Guid aFid,

					string aPackageNo,

					string aPlant,

					string aPlantZone,

					string aWorkshop,

					string aAssemblyLine,

					string aWmNo,

					string aZoneNo,

					string aDloc,

					string aKeeper,

					string aTranser,

					string aInformationer,

					int aStock,

					int aEmptyStock,

					int aFullStock,

					string aComments,

					bool aValidFlag,

					string aCreateUser,

					DateTime aCreateDate,

					string aModifyUser,

					DateTime aModifyDate

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			PackageNo = aPackageNo;
		 
			Plant = aPlant;
		 
			PlantZone = aPlantZone;
		 
			Workshop = aWorkshop;
		 
			AssemblyLine = aAssemblyLine;
		 
			WmNo = aWmNo;
		 
			ZoneNo = aZoneNo;
		 
			Dloc = aDloc;
		 
			Keeper = aKeeper;
		 
			Transer = aTranser;
		 
			Informationer = aInformationer;
		 
			Stock = aStock;
		 
			EmptyStock = aEmptyStock;
		 
			FullStock = aFullStock;
		 
			Comments = aComments;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		}
		
		public PackageStocksInfo():base("TT_PCM_PACKAGE_STOCKS")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                     _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField PACKAGE_NOField = new DataSchemaField();
			PACKAGE_NOField.Name = "PACKAGE_NO";
			PACKAGE_NOField.Type = typeof(string).ToString();
			PACKAGE_NOField.Index = 2;
			fields.Add(PACKAGE_NOField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 3;
			fields.Add(PLANTField);
			 
			DataSchemaField PLANT_ZONEField = new DataSchemaField();
			PLANT_ZONEField.Name = "PLANT_ZONE";
			PLANT_ZONEField.Type = typeof(string).ToString();
			PLANT_ZONEField.Index = 4;
			fields.Add(PLANT_ZONEField);
			 
			DataSchemaField WORKSHOPField = new DataSchemaField();
			WORKSHOPField.Name = "WORKSHOP";
			WORKSHOPField.Type = typeof(string).ToString();
			WORKSHOPField.Index = 5;
			fields.Add(WORKSHOPField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 6;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField WM_NOField = new DataSchemaField();
			WM_NOField.Name = "WM_NO";
			WM_NOField.Type = typeof(string).ToString();
			WM_NOField.Index = 7;
			fields.Add(WM_NOField);
			 
			DataSchemaField ZONE_NOField = new DataSchemaField();
			ZONE_NOField.Name = "ZONE_NO";
			ZONE_NOField.Type = typeof(string).ToString();
			ZONE_NOField.Index = 8;
			fields.Add(ZONE_NOField);
			 
			DataSchemaField DLOCField = new DataSchemaField();
			DLOCField.Name = "DLOC";
			DLOCField.Type = typeof(string).ToString();
			DLOCField.Index = 9;
			fields.Add(DLOCField);
			 
			DataSchemaField KEEPERField = new DataSchemaField();
			KEEPERField.Name = "KEEPER";
			KEEPERField.Type = typeof(string).ToString();
			KEEPERField.Index = 10;
			fields.Add(KEEPERField);
			 
			DataSchemaField TRANSERField = new DataSchemaField();
			TRANSERField.Name = "TRANSER";
			TRANSERField.Type = typeof(string).ToString();
			TRANSERField.Index = 11;
			fields.Add(TRANSERField);
			 
			DataSchemaField INFORMATIONERField = new DataSchemaField();
			INFORMATIONERField.Name = "INFORMATIONER";
			INFORMATIONERField.Type = typeof(string).ToString();
			INFORMATIONERField.Index = 12;
			fields.Add(INFORMATIONERField);
			 
			DataSchemaField STOCKField = new DataSchemaField();
			STOCKField.Name = "STOCK";
			STOCKField.Type = typeof(int).ToString();
			STOCKField.Index = 13;
			fields.Add(STOCKField);
			 
			DataSchemaField EMPTY_STOCKField = new DataSchemaField();
			EMPTY_STOCKField.Name = "EMPTY_STOCK";
			EMPTY_STOCKField.Type = typeof(int).ToString();
			EMPTY_STOCKField.Index = 14;
			fields.Add(EMPTY_STOCKField);
			 
			DataSchemaField FULL_STOCKField = new DataSchemaField();
			FULL_STOCKField.Name = "FULL_STOCK";
			FULL_STOCKField.Type = typeof(int).ToString();
			FULL_STOCKField.Index = 15;
			fields.Add(FULL_STOCKField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 16;
			fields.Add(COMMENTSField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 17;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 18;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 19;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 20;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 21;
			fields.Add(MODIFY_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public string PackageNo{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string PlantZone{ get;set; }		
				
		[DataMember]
		public string Workshop{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string WmNo{ get;set; }		
				
		[DataMember]
		public string ZoneNo{ get;set; }		
				
		[DataMember]
		public string Dloc{ get;set; }		
				
		[DataMember]
		public string Keeper{ get;set; }		
				
		[DataMember]
		public string Transer{ get;set; }		
				
		[DataMember]
		public string Informationer{ get;set; }		
				
		[DataMember]
		public int? Stock{ get;set; }		
				
		[DataMember]
		public int? EmptyStock{ get;set; }		
				
		[DataMember]
		public int? FullStock{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			PackageStocksInfo info = new PackageStocksInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.PackageNo = this.PackageNo;
			info.Plant = this.Plant;
			info.PlantZone = this.PlantZone;
			info.Workshop = this.Workshop;
			info.AssemblyLine = this.AssemblyLine;
			info.WmNo = this.WmNo;
			info.ZoneNo = this.ZoneNo;
			info.Dloc = this.Dloc;
			info.Keeper = this.Keeper;
			info.Transer = this.Transer;
			info.Informationer = this.Informationer;
			info.Stock = this.Stock;
			info.EmptyStock = this.EmptyStock;
			info.FullStock = this.FullStock;
			info.Comments = this.Comments;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			return info;			
		}
		 
		public PackageStocksInfo Clone()
		{
			return ((ICloneable) this).Clone() as PackageStocksInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// PackageStocksInfoCollection对应表[TT_PCM_PACKAGE_STOCKS]
    /// </summary>
	public partial class PackageStocksInfoCollection : BusinessObjectCollection<PackageStocksInfo>
	{
		public PackageStocksInfoCollection():base("TT_PCM_PACKAGE_STOCKS"){}	
	}
}
