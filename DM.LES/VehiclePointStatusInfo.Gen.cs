#region Declaim
//---------------------------------------------------------------------------
// Name:		VehiclePointStatusInfo
// Function: 	Expose data in table VehiclePointStatus from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月11日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// VehiclePointStatusInfo对应表[TT_BAS_VEHICLE_POINT_STATUS]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class VehiclePointStatusInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public VehiclePointStatusInfo( 
					long aId,

					Guid aFid,

					string aOrderNo,

					string aStatusPointCode,

					string aPlant,

					string aWorkshop,

					string aAssemblyLine,

					string aSpj,

					string aKnr,

					DateTime aPassTime,

					string aSchicht,

					int aVehicleStatus,

					int aShift,

					string aVin,

					string aRunningNo,

					long aSeqNo,

					string aModelNo,

					string aComments,

					int aProcessFlag,

					DateTime aProcessTime,

					bool aValidFlag,

					DateTime aCreateDate,

					string aCreateUser,

					DateTime aModifyDate,

					string aModifyUser

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			OrderNo = aOrderNo;
		 
			StatusPointCode = aStatusPointCode;
		 
			Plant = aPlant;
		 
			Workshop = aWorkshop;
		 
			AssemblyLine = aAssemblyLine;
		 
			Spj = aSpj;
		 
			Knr = aKnr;
		 
			PassTime = aPassTime;
		 
			Schicht = aSchicht;
		 
			VehicleStatus = aVehicleStatus;
		 
			Shift = aShift;
		 
			Vin = aVin;
		 
			RunningNo = aRunningNo;
		 
			SeqNo = aSeqNo;
		 
			ModelNo = aModelNo;
		 
			Comments = aComments;
		 
			ProcessFlag = aProcessFlag;
		 
			ProcessTime = aProcessTime;
		 
			ValidFlag = aValidFlag;
		 
			CreateDate = aCreateDate;
		 
			CreateUser = aCreateUser;
		 
			ModifyDate = aModifyDate;
		 
			ModifyUser = aModifyUser;
		}
		
		public VehiclePointStatusInfo():base("TT_BAS_VEHICLE_POINT_STATUS")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                        _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField ORDER_NOField = new DataSchemaField();
			ORDER_NOField.Name = "ORDER_NO";
			ORDER_NOField.Type = typeof(string).ToString();
			ORDER_NOField.Index = 2;
			fields.Add(ORDER_NOField);
			 
			DataSchemaField STATUS_POINT_CODEField = new DataSchemaField();
			STATUS_POINT_CODEField.Name = "STATUS_POINT_CODE";
			STATUS_POINT_CODEField.Type = typeof(string).ToString();
			STATUS_POINT_CODEField.Index = 3;
			fields.Add(STATUS_POINT_CODEField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 4;
			fields.Add(PLANTField);
			 
			DataSchemaField WORKSHOPField = new DataSchemaField();
			WORKSHOPField.Name = "WORKSHOP";
			WORKSHOPField.Type = typeof(string).ToString();
			WORKSHOPField.Index = 5;
			fields.Add(WORKSHOPField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 6;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField SPJField = new DataSchemaField();
			SPJField.Name = "SPJ";
			SPJField.Type = typeof(string).ToString();
			SPJField.Index = 7;
			fields.Add(SPJField);
			 
			DataSchemaField KNRField = new DataSchemaField();
			KNRField.Name = "KNR";
			KNRField.Type = typeof(string).ToString();
			KNRField.Index = 8;
			fields.Add(KNRField);
			 
			DataSchemaField PASS_TIMEField = new DataSchemaField();
			PASS_TIMEField.Name = "PASS_TIME";
			PASS_TIMEField.Type = typeof(DateTime).ToString();
			PASS_TIMEField.Index = 9;
			fields.Add(PASS_TIMEField);
			 
			DataSchemaField SCHICHTField = new DataSchemaField();
			SCHICHTField.Name = "SCHICHT";
			SCHICHTField.Type = typeof(string).ToString();
			SCHICHTField.Index = 10;
			fields.Add(SCHICHTField);
			 
			DataSchemaField VEHICLE_STATUSField = new DataSchemaField();
			VEHICLE_STATUSField.Name = "VEHICLE_STATUS";
			VEHICLE_STATUSField.Type = typeof(int).ToString();
			VEHICLE_STATUSField.Index = 11;
			fields.Add(VEHICLE_STATUSField);
			 
			DataSchemaField SHIFTField = new DataSchemaField();
			SHIFTField.Name = "SHIFT";
			SHIFTField.Type = typeof(int).ToString();
			SHIFTField.Index = 12;
			fields.Add(SHIFTField);
			 
			DataSchemaField VINField = new DataSchemaField();
			VINField.Name = "VIN";
			VINField.Type = typeof(string).ToString();
			VINField.Index = 13;
			fields.Add(VINField);
			 
			DataSchemaField RUNNING_NOField = new DataSchemaField();
			RUNNING_NOField.Name = "RUNNING_NO";
			RUNNING_NOField.Type = typeof(string).ToString();
			RUNNING_NOField.Index = 14;
			fields.Add(RUNNING_NOField);
			 
			DataSchemaField SEQ_NOField = new DataSchemaField();
			SEQ_NOField.Name = "SEQ_NO";
			SEQ_NOField.Type = typeof(long).ToString();
			SEQ_NOField.Index = 15;
			fields.Add(SEQ_NOField);
			 
			DataSchemaField MODEL_NOField = new DataSchemaField();
			MODEL_NOField.Name = "MODEL_NO";
			MODEL_NOField.Type = typeof(string).ToString();
			MODEL_NOField.Index = 16;
			fields.Add(MODEL_NOField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 17;
			fields.Add(COMMENTSField);
			 
			DataSchemaField PROCESS_FLAGField = new DataSchemaField();
			PROCESS_FLAGField.Name = "PROCESS_FLAG";
			PROCESS_FLAGField.Type = typeof(int).ToString();
			PROCESS_FLAGField.Index = 18;
			fields.Add(PROCESS_FLAGField);
			 
			DataSchemaField PROCESS_TIMEField = new DataSchemaField();
			PROCESS_TIMEField.Name = "PROCESS_TIME";
			PROCESS_TIMEField.Type = typeof(DateTime).ToString();
			PROCESS_TIMEField.Index = 19;
			fields.Add(PROCESS_TIMEField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 20;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 21;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 22;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 23;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 24;
			fields.Add(MODIFY_USERField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public string OrderNo{ get;set; }		
				
		[DataMember]
		public string StatusPointCode{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string Workshop{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string Spj{ get;set; }		
				
		[DataMember]
		public string Knr{ get;set; }		
				
		[DataMember]
		public DateTime? PassTime{ get;set; }		
				
		[DataMember]
		public string Schicht{ get;set; }		
				
		[DataMember]
		public int? VehicleStatus{ get;set; }		
				
		[DataMember]
		public int? Shift{ get;set; }		
				
		[DataMember]
		public string Vin{ get;set; }		
				
		[DataMember]
		public string RunningNo{ get;set; }		
				
		[DataMember]
		public long? SeqNo{ get;set; }		
				
		[DataMember]
		public string ModelNo{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public int? ProcessFlag{ get;set; }		
				
		[DataMember]
		public DateTime? ProcessTime{ get;set; }		
				
		[DataMember]
		public bool ValidFlag{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			VehiclePointStatusInfo info = new VehiclePointStatusInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.OrderNo = this.OrderNo;
			info.StatusPointCode = this.StatusPointCode;
			info.Plant = this.Plant;
			info.Workshop = this.Workshop;
			info.AssemblyLine = this.AssemblyLine;
			info.Spj = this.Spj;
			info.Knr = this.Knr;
			info.PassTime = this.PassTime;
			info.Schicht = this.Schicht;
			info.VehicleStatus = this.VehicleStatus;
			info.Shift = this.Shift;
			info.Vin = this.Vin;
			info.RunningNo = this.RunningNo;
			info.SeqNo = this.SeqNo;
			info.ModelNo = this.ModelNo;
			info.Comments = this.Comments;
			info.ProcessFlag = this.ProcessFlag;
			info.ProcessTime = this.ProcessTime;
			info.ValidFlag = this.ValidFlag;
			info.CreateDate = this.CreateDate;
			info.CreateUser = this.CreateUser;
			info.ModifyDate = this.ModifyDate;
			info.ModifyUser = this.ModifyUser;
			return info;			
		}
		 
		public VehiclePointStatusInfo Clone()
		{
			return ((ICloneable) this).Clone() as VehiclePointStatusInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// VehiclePointStatusInfoCollection对应表[TT_BAS_VEHICLE_POINT_STATUS]
    /// </summary>
	public partial class VehiclePointStatusInfoCollection : BusinessObjectCollection<VehiclePointStatusInfo>
	{
		public VehiclePointStatusInfoCollection():base("TT_BAS_VEHICLE_POINT_STATUS"){}	
	}
}
