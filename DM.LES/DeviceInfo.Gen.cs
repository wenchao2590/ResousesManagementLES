#region Declaim
//---------------------------------------------------------------------------
// Name:		DeviceInfo
// Function: 	Expose data in table Device from database as business object to MES system.
// Tool:		T4
// CreateDate:	2020-12-08
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// DeviceInfo对应表[TM_BAS_DEVICE]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class DeviceInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public DeviceInfo( 
					string aDeviceCode,

					string aDeviceCnname,

					string aDeviceSname,

					string aDeviceEnname,

					string aManufacturer,

					string aManufacturerAddress,

					string aManufacturerTell,

					string aDealerCode,

					string aDealerCnname,

					string aDealerAddress,

					string aDealerTell,

					string aComments,

					bool aValidFlag,

					long aId,

					string aModifyUser,

					string aCreateUser,

					DateTime aModifyDate,

					Guid aFid,

					DateTime aCreateDate

				 
		) : this()
		{
			 
			DeviceCode = aDeviceCode;
		 
			DeviceCnname = aDeviceCnname;
		 
			DeviceSname = aDeviceSname;
		 
			DeviceEnname = aDeviceEnname;
		 
			Manufacturer = aManufacturer;
		 
			ManufacturerAddress = aManufacturerAddress;
		 
			ManufacturerTell = aManufacturerTell;
		 
			DealerCode = aDealerCode;
		 
			DealerCnname = aDealerCnname;
		 
			DealerAddress = aDealerAddress;
		 
			DealerTell = aDealerTell;
		 
			Comments = aComments;
		 
			ValidFlag = aValidFlag;
		 
			Id = aId;
		 
			ModifyUser = aModifyUser;
		 
			CreateUser = aCreateUser;
		 
			ModifyDate = aModifyDate;
		 
			Fid = aFid;
		 
			CreateDate = aCreateDate;
		}
		
		public DeviceInfo():base("TM_BAS_DEVICE")
		{
			List<string> keys = new List<string>();
			              			keys.Add("ID");     _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField DEVICE_CODEField = new DataSchemaField();
			DEVICE_CODEField.Name = "DEVICE_CODE";
			DEVICE_CODEField.Type = typeof(string).ToString();
			DEVICE_CODEField.Index = 0;
			fields.Add(DEVICE_CODEField);
			 
			DataSchemaField DEVICE_CNNAMEField = new DataSchemaField();
			DEVICE_CNNAMEField.Name = "DEVICE_CNNAME";
			DEVICE_CNNAMEField.Type = typeof(string).ToString();
			DEVICE_CNNAMEField.Index = 1;
			fields.Add(DEVICE_CNNAMEField);
			 
			DataSchemaField DEVICE_SNAMEField = new DataSchemaField();
			DEVICE_SNAMEField.Name = "DEVICE_SNAME";
			DEVICE_SNAMEField.Type = typeof(string).ToString();
			DEVICE_SNAMEField.Index = 2;
			fields.Add(DEVICE_SNAMEField);
			 
			DataSchemaField DEVICE_ENNAMEField = new DataSchemaField();
			DEVICE_ENNAMEField.Name = "DEVICE_ENNAME";
			DEVICE_ENNAMEField.Type = typeof(string).ToString();
			DEVICE_ENNAMEField.Index = 3;
			fields.Add(DEVICE_ENNAMEField);
			 
			DataSchemaField MANUFACTURERField = new DataSchemaField();
			MANUFACTURERField.Name = "MANUFACTURER";
			MANUFACTURERField.Type = typeof(string).ToString();
			MANUFACTURERField.Index = 4;
			fields.Add(MANUFACTURERField);
			 
			DataSchemaField MANUFACTURER_ADDRESSField = new DataSchemaField();
			MANUFACTURER_ADDRESSField.Name = "MANUFACTURER_ADDRESS";
			MANUFACTURER_ADDRESSField.Type = typeof(string).ToString();
			MANUFACTURER_ADDRESSField.Index = 5;
			fields.Add(MANUFACTURER_ADDRESSField);
			 
			DataSchemaField MANUFACTURER_TELLField = new DataSchemaField();
			MANUFACTURER_TELLField.Name = "MANUFACTURER_TELL";
			MANUFACTURER_TELLField.Type = typeof(string).ToString();
			MANUFACTURER_TELLField.Index = 6;
			fields.Add(MANUFACTURER_TELLField);
			 
			DataSchemaField DEALER_CODEField = new DataSchemaField();
			DEALER_CODEField.Name = "DEALER_CODE";
			DEALER_CODEField.Type = typeof(string).ToString();
			DEALER_CODEField.Index = 7;
			fields.Add(DEALER_CODEField);
			 
			DataSchemaField DEALER_CNNAMEField = new DataSchemaField();
			DEALER_CNNAMEField.Name = "DEALER_CNNAME";
			DEALER_CNNAMEField.Type = typeof(string).ToString();
			DEALER_CNNAMEField.Index = 8;
			fields.Add(DEALER_CNNAMEField);
			 
			DataSchemaField DEALER_ADDRESSField = new DataSchemaField();
			DEALER_ADDRESSField.Name = "DEALER_ADDRESS";
			DEALER_ADDRESSField.Type = typeof(string).ToString();
			DEALER_ADDRESSField.Index = 9;
			fields.Add(DEALER_ADDRESSField);
			 
			DataSchemaField DEALER_TELLField = new DataSchemaField();
			DEALER_TELLField.Name = "DEALER_TELL";
			DEALER_TELLField.Type = typeof(string).ToString();
			DEALER_TELLField.Index = 10;
			fields.Add(DEALER_TELLField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 11;
			fields.Add(COMMENTSField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 12;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 13;
			fields.Add(IDField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 14;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 15;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 16;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 17;
			fields.Add(FIDField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 18;
			fields.Add(CREATE_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public string DeviceCode{ get;set; }		
				
		[DataMember]
		public string DeviceCnname{ get;set; }		
				
		[DataMember]
		public string DeviceSname{ get;set; }		
				
		[DataMember]
		public string DeviceEnname{ get;set; }		
				
		[DataMember]
		public string Manufacturer{ get;set; }		
				
		[DataMember]
		public string ManufacturerAddress{ get;set; }		
				
		[DataMember]
		public string ManufacturerTell{ get;set; }		
				
		[DataMember]
		public string DealerCode{ get;set; }		
				
		[DataMember]
		public string DealerCnname{ get;set; }		
				
		[DataMember]
		public string DealerAddress{ get;set; }		
				
		[DataMember]
		public string DealerTell{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			DeviceInfo info = new DeviceInfo();

			info.DeviceCode = this.DeviceCode;
			info.DeviceCnname = this.DeviceCnname;
			info.DeviceSname = this.DeviceSname;
			info.DeviceEnname = this.DeviceEnname;
			info.Manufacturer = this.Manufacturer;
			info.ManufacturerAddress = this.ManufacturerAddress;
			info.ManufacturerTell = this.ManufacturerTell;
			info.DealerCode = this.DealerCode;
			info.DealerCnname = this.DealerCnname;
			info.DealerAddress = this.DealerAddress;
			info.DealerTell = this.DealerTell;
			info.Comments = this.Comments;
			info.ValidFlag = this.ValidFlag;
			info.Id = this.Id;
			info.ModifyUser = this.ModifyUser;
			info.CreateUser = this.CreateUser;
			info.ModifyDate = this.ModifyDate;
			info.Fid = this.Fid;
			info.CreateDate = this.CreateDate;
			return info;			
		}
		 
		public DeviceInfo Clone()
		{
			return ((ICloneable) this).Clone() as DeviceInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// DeviceInfoCollection对应表[TM_BAS_DEVICE]
    /// </summary>
	public partial class DeviceInfoCollection : BusinessObjectCollection<DeviceInfo>
	{
		public DeviceInfoCollection():base("TM_BAS_DEVICE"){}	
	}
}
