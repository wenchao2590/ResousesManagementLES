#region Declaim
//---------------------------------------------------------------------------
// Name:		ReceiveInfo
// Function: 	Expose data in table Receive from database as business object to MES system.
// Tool:		T4
// CreateDate:	2020年10月6日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// ReceiveInfo对应表[TT_WMM_RECEIVE]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class ReceiveInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public ReceiveInfo( 
					long aReceiveId,

					string aReceiveNo,

					string aPlant,

					string aSupplierNum,

					string aWmNo,

					string aZoneNo,

					string aDeliveryLocationNo,

					string aDock,

					DateTime aSendTime,

					int aReceiveType,

					DateTime aTranTime,

					string aReceiveReason,

					string aBookKeeper,

					int aConfirmFlag,

					int aPartType,

					string aTransSupplierNum,

					string aPlanNo,

					string aAsnNo,

					string aLogicalPk,

					string aBusinessPk,

					string aRunsheetNo,

					string aAssemblyLine,

					string aPlantZone,

					string aWorkshop,

					int aSupplierType,

					int aErpFlag,

					string aRunsheetCode,

					string aDeliveryLocationName,

					string aComments,

					DateTime aUpdateDate,

					string aUpdateUser,

					DateTime aCreateDate,

					string aCreateUser,

					int aPtlFlag,

					DateTime aPtlTime,

					Guid aFid,

					bool aValidFlag

				 
		) : this()
		{
			 
			ReceiveId = aReceiveId;
		 
			ReceiveNo = aReceiveNo;
		 
			Plant = aPlant;
		 
			SupplierNum = aSupplierNum;
		 
			WmNo = aWmNo;
		 
			ZoneNo = aZoneNo;
		 
			DeliveryLocationNo = aDeliveryLocationNo;
		 
			Dock = aDock;
		 
			SendTime = aSendTime;
		 
			ReceiveType = aReceiveType;
		 
			TranTime = aTranTime;
		 
			ReceiveReason = aReceiveReason;
		 
			BookKeeper = aBookKeeper;
		 
			ConfirmFlag = aConfirmFlag;
		 
			PartType = aPartType;
		 
			TransSupplierNum = aTransSupplierNum;
		 
			PlanNo = aPlanNo;
		 
			AsnNo = aAsnNo;
		 
			LogicalPk = aLogicalPk;
		 
			BusinessPk = aBusinessPk;
		 
			RunsheetNo = aRunsheetNo;
		 
			AssemblyLine = aAssemblyLine;
		 
			PlantZone = aPlantZone;
		 
			Workshop = aWorkshop;
		 
			SupplierType = aSupplierType;
		 
			ErpFlag = aErpFlag;
		 
			RunsheetCode = aRunsheetCode;
		 
			DeliveryLocationName = aDeliveryLocationName;
		 
			Comments = aComments;
		 
			UpdateDate = aUpdateDate;
		 
			UpdateUser = aUpdateUser;
		 
			CreateDate = aCreateDate;
		 
			CreateUser = aCreateUser;
		 
			PtlFlag = aPtlFlag;
		 
			PtlTime = aPtlTime;
		 
			Fid = aFid;
		 
			ValidFlag = aValidFlag;
		}
		
		public ReceiveInfo():base("TT_WMM_RECEIVE")
		{
			List<string> keys = new List<string>();
			 			keys.Add("RECEIVE_ID");                                    _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField RECEIVE_IDField = new DataSchemaField();
			RECEIVE_IDField.Name = "RECEIVE_ID";
			RECEIVE_IDField.Type = typeof(long).ToString();
			RECEIVE_IDField.Index = 0;
			fields.Add(RECEIVE_IDField);
			 
			DataSchemaField RECEIVE_NOField = new DataSchemaField();
			RECEIVE_NOField.Name = "RECEIVE_NO";
			RECEIVE_NOField.Type = typeof(string).ToString();
			RECEIVE_NOField.Index = 1;
			fields.Add(RECEIVE_NOField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 2;
			fields.Add(PLANTField);
			 
			DataSchemaField SUPPLIER_NUMField = new DataSchemaField();
			SUPPLIER_NUMField.Name = "SUPPLIER_NUM";
			SUPPLIER_NUMField.Type = typeof(string).ToString();
			SUPPLIER_NUMField.Index = 3;
			fields.Add(SUPPLIER_NUMField);
			 
			DataSchemaField WM_NOField = new DataSchemaField();
			WM_NOField.Name = "WM_NO";
			WM_NOField.Type = typeof(string).ToString();
			WM_NOField.Index = 4;
			fields.Add(WM_NOField);
			 
			DataSchemaField ZONE_NOField = new DataSchemaField();
			ZONE_NOField.Name = "ZONE_NO";
			ZONE_NOField.Type = typeof(string).ToString();
			ZONE_NOField.Index = 5;
			fields.Add(ZONE_NOField);
			 
			DataSchemaField DELIVERY_LOCATION_NOField = new DataSchemaField();
			DELIVERY_LOCATION_NOField.Name = "DELIVERY_LOCATION_NO";
			DELIVERY_LOCATION_NOField.Type = typeof(string).ToString();
			DELIVERY_LOCATION_NOField.Index = 6;
			fields.Add(DELIVERY_LOCATION_NOField);
			 
			DataSchemaField DOCKField = new DataSchemaField();
			DOCKField.Name = "DOCK";
			DOCKField.Type = typeof(string).ToString();
			DOCKField.Index = 7;
			fields.Add(DOCKField);
			 
			DataSchemaField SEND_TIMEField = new DataSchemaField();
			SEND_TIMEField.Name = "SEND_TIME";
			SEND_TIMEField.Type = typeof(DateTime).ToString();
			SEND_TIMEField.Index = 8;
			fields.Add(SEND_TIMEField);
			 
			DataSchemaField RECEIVE_TYPEField = new DataSchemaField();
			RECEIVE_TYPEField.Name = "RECEIVE_TYPE";
			RECEIVE_TYPEField.Type = typeof(int).ToString();
			RECEIVE_TYPEField.Index = 9;
			fields.Add(RECEIVE_TYPEField);
			 
			DataSchemaField TRAN_TIMEField = new DataSchemaField();
			TRAN_TIMEField.Name = "TRAN_TIME";
			TRAN_TIMEField.Type = typeof(DateTime).ToString();
			TRAN_TIMEField.Index = 10;
			fields.Add(TRAN_TIMEField);
			 
			DataSchemaField RECEIVE_REASONField = new DataSchemaField();
			RECEIVE_REASONField.Name = "RECEIVE_REASON";
			RECEIVE_REASONField.Type = typeof(string).ToString();
			RECEIVE_REASONField.Index = 11;
			fields.Add(RECEIVE_REASONField);
			 
			DataSchemaField BOOK_KEEPERField = new DataSchemaField();
			BOOK_KEEPERField.Name = "BOOK_KEEPER";
			BOOK_KEEPERField.Type = typeof(string).ToString();
			BOOK_KEEPERField.Index = 12;
			fields.Add(BOOK_KEEPERField);
			 
			DataSchemaField CONFIRM_FLAGField = new DataSchemaField();
			CONFIRM_FLAGField.Name = "CONFIRM_FLAG";
			CONFIRM_FLAGField.Type = typeof(int).ToString();
			CONFIRM_FLAGField.Index = 13;
			fields.Add(CONFIRM_FLAGField);
			 
			DataSchemaField PART_TYPEField = new DataSchemaField();
			PART_TYPEField.Name = "PART_TYPE";
			PART_TYPEField.Type = typeof(int).ToString();
			PART_TYPEField.Index = 14;
			fields.Add(PART_TYPEField);
			 
			DataSchemaField TRANS_SUPPLIER_NUMField = new DataSchemaField();
			TRANS_SUPPLIER_NUMField.Name = "TRANS_SUPPLIER_NUM";
			TRANS_SUPPLIER_NUMField.Type = typeof(string).ToString();
			TRANS_SUPPLIER_NUMField.Index = 15;
			fields.Add(TRANS_SUPPLIER_NUMField);
			 
			DataSchemaField PLAN_NOField = new DataSchemaField();
			PLAN_NOField.Name = "PLAN_NO";
			PLAN_NOField.Type = typeof(string).ToString();
			PLAN_NOField.Index = 16;
			fields.Add(PLAN_NOField);
			 
			DataSchemaField ASN_NOField = new DataSchemaField();
			ASN_NOField.Name = "ASN_NO";
			ASN_NOField.Type = typeof(string).ToString();
			ASN_NOField.Index = 17;
			fields.Add(ASN_NOField);
			 
			DataSchemaField LOGICAL_PKField = new DataSchemaField();
			LOGICAL_PKField.Name = "LOGICAL_PK";
			LOGICAL_PKField.Type = typeof(string).ToString();
			LOGICAL_PKField.Index = 18;
			fields.Add(LOGICAL_PKField);
			 
			DataSchemaField BUSINESS_PKField = new DataSchemaField();
			BUSINESS_PKField.Name = "BUSINESS_PK";
			BUSINESS_PKField.Type = typeof(string).ToString();
			BUSINESS_PKField.Index = 19;
			fields.Add(BUSINESS_PKField);
			 
			DataSchemaField RUNSHEET_NOField = new DataSchemaField();
			RUNSHEET_NOField.Name = "RUNSHEET_NO";
			RUNSHEET_NOField.Type = typeof(string).ToString();
			RUNSHEET_NOField.Index = 20;
			fields.Add(RUNSHEET_NOField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 21;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField PLANT_ZONEField = new DataSchemaField();
			PLANT_ZONEField.Name = "PLANT_ZONE";
			PLANT_ZONEField.Type = typeof(string).ToString();
			PLANT_ZONEField.Index = 22;
			fields.Add(PLANT_ZONEField);
			 
			DataSchemaField WORKSHOPField = new DataSchemaField();
			WORKSHOPField.Name = "WORKSHOP";
			WORKSHOPField.Type = typeof(string).ToString();
			WORKSHOPField.Index = 23;
			fields.Add(WORKSHOPField);
			 
			DataSchemaField SUPPLIER_TYPEField = new DataSchemaField();
			SUPPLIER_TYPEField.Name = "SUPPLIER_TYPE";
			SUPPLIER_TYPEField.Type = typeof(int).ToString();
			SUPPLIER_TYPEField.Index = 24;
			fields.Add(SUPPLIER_TYPEField);
			 
			DataSchemaField ERP_FLAGField = new DataSchemaField();
			ERP_FLAGField.Name = "ERP_FLAG";
			ERP_FLAGField.Type = typeof(int).ToString();
			ERP_FLAGField.Index = 25;
			fields.Add(ERP_FLAGField);
			 
			DataSchemaField RUNSHEET_CODEField = new DataSchemaField();
			RUNSHEET_CODEField.Name = "RUNSHEET_CODE";
			RUNSHEET_CODEField.Type = typeof(string).ToString();
			RUNSHEET_CODEField.Index = 26;
			fields.Add(RUNSHEET_CODEField);
			 
			DataSchemaField DELIVERY_LOCATION_NAMEField = new DataSchemaField();
			DELIVERY_LOCATION_NAMEField.Name = "DELIVERY_LOCATION_NAME";
			DELIVERY_LOCATION_NAMEField.Type = typeof(string).ToString();
			DELIVERY_LOCATION_NAMEField.Index = 27;
			fields.Add(DELIVERY_LOCATION_NAMEField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 28;
			fields.Add(COMMENTSField);
			 
			DataSchemaField UPDATE_DATEField = new DataSchemaField();
			UPDATE_DATEField.Name = "UPDATE_DATE";
			UPDATE_DATEField.Type = typeof(DateTime).ToString();
			UPDATE_DATEField.Index = 29;
			fields.Add(UPDATE_DATEField);
			 
			DataSchemaField UPDATE_USERField = new DataSchemaField();
			UPDATE_USERField.Name = "UPDATE_USER";
			UPDATE_USERField.Type = typeof(string).ToString();
			UPDATE_USERField.Index = 30;
			fields.Add(UPDATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 31;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 32;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField PTL_FLAGField = new DataSchemaField();
			PTL_FLAGField.Name = "PTL_FLAG";
			PTL_FLAGField.Type = typeof(int).ToString();
			PTL_FLAGField.Index = 33;
			fields.Add(PTL_FLAGField);
			 
			DataSchemaField PTL_TIMEField = new DataSchemaField();
			PTL_TIMEField.Name = "PTL_TIME";
			PTL_TIMEField.Type = typeof(DateTime).ToString();
			PTL_TIMEField.Index = 34;
			fields.Add(PTL_TIMEField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 35;
			fields.Add(FIDField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 36;
			fields.Add(VALID_FLAGField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long ReceiveId{ get;set; }		
				
		[DataMember]
		public string ReceiveNo{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string SupplierNum{ get;set; }		
				
		[DataMember]
		public string WmNo{ get;set; }		
				
		[DataMember]
		public string ZoneNo{ get;set; }		
				
		[DataMember]
		public string DeliveryLocationNo{ get;set; }		
				
		[DataMember]
		public string Dock{ get;set; }		
				
		[DataMember]
		public DateTime? SendTime{ get;set; }		
				
		[DataMember]
		public int? ReceiveType{ get;set; }		
				
		[DataMember]
		public DateTime? TranTime{ get;set; }		
				
		[DataMember]
		public string ReceiveReason{ get;set; }		
				
		[DataMember]
		public string BookKeeper{ get;set; }		
				
		[DataMember]
		public int? ConfirmFlag{ get;set; }		
				
		[DataMember]
		public int? PartType{ get;set; }		
				
		[DataMember]
		public string TransSupplierNum{ get;set; }		
				
		[DataMember]
		public string PlanNo{ get;set; }		
				
		[DataMember]
		public string AsnNo{ get;set; }		
				
		[DataMember]
		public string LogicalPk{ get;set; }		
				
		[DataMember]
		public string BusinessPk{ get;set; }		
				
		[DataMember]
		public string RunsheetNo{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string PlantZone{ get;set; }		
				
		[DataMember]
		public string Workshop{ get;set; }		
				
		[DataMember]
		public int? SupplierType{ get;set; }		
				
		[DataMember]
		public int? ErpFlag{ get;set; }		
				
		[DataMember]
		public string RunsheetCode{ get;set; }		
				
		[DataMember]
		public string DeliveryLocationName{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public DateTime? UpdateDate{ get;set; }		
				
		[DataMember]
		public string UpdateUser{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
				
		private int? _PtlFlag = 0;
		
		[DataMember]	
		public int? PtlFlag
		{
			get
			{
				return _PtlFlag;
			}
			set
			{
				_PtlFlag = value;
			}
		}
				
				
		[DataMember]
		public DateTime? PtlTime{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			ReceiveInfo info = new ReceiveInfo();

			info.ReceiveId = this.ReceiveId;
			info.ReceiveNo = this.ReceiveNo;
			info.Plant = this.Plant;
			info.SupplierNum = this.SupplierNum;
			info.WmNo = this.WmNo;
			info.ZoneNo = this.ZoneNo;
			info.DeliveryLocationNo = this.DeliveryLocationNo;
			info.Dock = this.Dock;
			info.SendTime = this.SendTime;
			info.ReceiveType = this.ReceiveType;
			info.TranTime = this.TranTime;
			info.ReceiveReason = this.ReceiveReason;
			info.BookKeeper = this.BookKeeper;
			info.ConfirmFlag = this.ConfirmFlag;
			info.PartType = this.PartType;
			info.TransSupplierNum = this.TransSupplierNum;
			info.PlanNo = this.PlanNo;
			info.AsnNo = this.AsnNo;
			info.LogicalPk = this.LogicalPk;
			info.BusinessPk = this.BusinessPk;
			info.RunsheetNo = this.RunsheetNo;
			info.AssemblyLine = this.AssemblyLine;
			info.PlantZone = this.PlantZone;
			info.Workshop = this.Workshop;
			info.SupplierType = this.SupplierType;
			info.ErpFlag = this.ErpFlag;
			info.RunsheetCode = this.RunsheetCode;
			info.DeliveryLocationName = this.DeliveryLocationName;
			info.Comments = this.Comments;
			info.UpdateDate = this.UpdateDate;
			info.UpdateUser = this.UpdateUser;
			info.CreateDate = this.CreateDate;
			info.CreateUser = this.CreateUser;
			info.PtlFlag = this.PtlFlag;
			info.PtlTime = this.PtlTime;
			info.Fid = this.Fid;
			info.ValidFlag = this.ValidFlag;
			return info;			
		}
		 
		public ReceiveInfo Clone()
		{
			return ((ICloneable) this).Clone() as ReceiveInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// ReceiveInfoCollection对应表[TT_WMM_RECEIVE]
    /// </summary>
	public partial class ReceiveInfoCollection : BusinessObjectCollection<ReceiveInfo>
	{
		public ReceiveInfoCollection():base("TT_WMM_RECEIVE"){}	
	}
}
