#region Declaim
//---------------------------------------------------------------------------
// Name:		JisPullOrderDetailInfo
// Function: 	Expose data in table JisPullOrderDetail from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月10日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// JisPullOrderDetailInfo对应表[TT_MPM_JIS_PULL_ORDER_DETAIL]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class JisPullOrderDetailInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public JisPullOrderDetailInfo( 
					long aId,

					Guid aFid,

					Guid aOrderFid,

					string aOrderCode,

					int aRowNo,

					string aSupplierNum,

					string aPartNo,

					string aPartVersion,

					string aPartCname,

					string aPartEname,

					string aMeasuringUnitNo,

					decimal aRequiredPartQty,

					decimal aActualPartQty,

					string aVehicheModelNo,

					int aDayVehicheSeqNo,

					string aProductionNo,

					int aInspectionMode,

					bool aInspectionFlag,

					string aComments,

					bool aValidFlag,

					DateTime aCreateDate,

					string aCreateUser,

					DateTime aModifyDate,

					string aModifyUser

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			OrderFid = aOrderFid;
		 
			OrderCode = aOrderCode;
		 
			RowNo = aRowNo;
		 
			SupplierNum = aSupplierNum;
		 
			PartNo = aPartNo;
		 
			PartVersion = aPartVersion;
		 
			PartCname = aPartCname;
		 
			PartEname = aPartEname;
		 
			MeasuringUnitNo = aMeasuringUnitNo;
		 
			RequiredPartQty = aRequiredPartQty;
		 
			ActualPartQty = aActualPartQty;
		 
			VehicheModelNo = aVehicheModelNo;
		 
			DayVehicheSeqNo = aDayVehicheSeqNo;
		 
			ProductionNo = aProductionNo;
		 
			InspectionMode = aInspectionMode;
		 
			InspectionFlag = aInspectionFlag;
		 
			Comments = aComments;
		 
			ValidFlag = aValidFlag;
		 
			CreateDate = aCreateDate;
		 
			CreateUser = aCreateUser;
		 
			ModifyDate = aModifyDate;
		 
			ModifyUser = aModifyUser;
		}
		
		public JisPullOrderDetailInfo():base("TT_MPM_JIS_PULL_ORDER_DETAIL")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                       _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField ORDER_FIDField = new DataSchemaField();
			ORDER_FIDField.Name = "ORDER_FID";
			ORDER_FIDField.Type = typeof(Guid).ToString();
			ORDER_FIDField.Index = 2;
			fields.Add(ORDER_FIDField);
			 
			DataSchemaField ORDER_CODEField = new DataSchemaField();
			ORDER_CODEField.Name = "ORDER_CODE";
			ORDER_CODEField.Type = typeof(string).ToString();
			ORDER_CODEField.Index = 3;
			fields.Add(ORDER_CODEField);
			 
			DataSchemaField ROW_NOField = new DataSchemaField();
			ROW_NOField.Name = "ROW_NO";
			ROW_NOField.Type = typeof(int).ToString();
			ROW_NOField.Index = 4;
			fields.Add(ROW_NOField);
			 
			DataSchemaField SUPPLIER_NUMField = new DataSchemaField();
			SUPPLIER_NUMField.Name = "SUPPLIER_NUM";
			SUPPLIER_NUMField.Type = typeof(string).ToString();
			SUPPLIER_NUMField.Index = 5;
			fields.Add(SUPPLIER_NUMField);
			 
			DataSchemaField PART_NOField = new DataSchemaField();
			PART_NOField.Name = "PART_NO";
			PART_NOField.Type = typeof(string).ToString();
			PART_NOField.Index = 6;
			fields.Add(PART_NOField);
			 
			DataSchemaField PART_VERSIONField = new DataSchemaField();
			PART_VERSIONField.Name = "PART_VERSION";
			PART_VERSIONField.Type = typeof(string).ToString();
			PART_VERSIONField.Index = 7;
			fields.Add(PART_VERSIONField);
			 
			DataSchemaField PART_CNAMEField = new DataSchemaField();
			PART_CNAMEField.Name = "PART_CNAME";
			PART_CNAMEField.Type = typeof(string).ToString();
			PART_CNAMEField.Index = 8;
			fields.Add(PART_CNAMEField);
			 
			DataSchemaField PART_ENAMEField = new DataSchemaField();
			PART_ENAMEField.Name = "PART_ENAME";
			PART_ENAMEField.Type = typeof(string).ToString();
			PART_ENAMEField.Index = 9;
			fields.Add(PART_ENAMEField);
			 
			DataSchemaField MEASURING_UNIT_NOField = new DataSchemaField();
			MEASURING_UNIT_NOField.Name = "MEASURING_UNIT_NO";
			MEASURING_UNIT_NOField.Type = typeof(string).ToString();
			MEASURING_UNIT_NOField.Index = 10;
			fields.Add(MEASURING_UNIT_NOField);
			 
			DataSchemaField REQUIRED_PART_QTYField = new DataSchemaField();
			REQUIRED_PART_QTYField.Name = "REQUIRED_PART_QTY";
			REQUIRED_PART_QTYField.Type = typeof(decimal).ToString();
			REQUIRED_PART_QTYField.Index = 11;
			fields.Add(REQUIRED_PART_QTYField);
			 
			DataSchemaField ACTUAL_PART_QTYField = new DataSchemaField();
			ACTUAL_PART_QTYField.Name = "ACTUAL_PART_QTY";
			ACTUAL_PART_QTYField.Type = typeof(decimal).ToString();
			ACTUAL_PART_QTYField.Index = 12;
			fields.Add(ACTUAL_PART_QTYField);
			 
			DataSchemaField VEHICHE_MODEL_NOField = new DataSchemaField();
			VEHICHE_MODEL_NOField.Name = "VEHICHE_MODEL_NO";
			VEHICHE_MODEL_NOField.Type = typeof(string).ToString();
			VEHICHE_MODEL_NOField.Index = 13;
			fields.Add(VEHICHE_MODEL_NOField);
			 
			DataSchemaField DAY_VEHICHE_SEQ_NOField = new DataSchemaField();
			DAY_VEHICHE_SEQ_NOField.Name = "DAY_VEHICHE_SEQ_NO";
			DAY_VEHICHE_SEQ_NOField.Type = typeof(int).ToString();
			DAY_VEHICHE_SEQ_NOField.Index = 14;
			fields.Add(DAY_VEHICHE_SEQ_NOField);
			 
			DataSchemaField PRODUCTION_NOField = new DataSchemaField();
			PRODUCTION_NOField.Name = "PRODUCTION_NO";
			PRODUCTION_NOField.Type = typeof(string).ToString();
			PRODUCTION_NOField.Index = 15;
			fields.Add(PRODUCTION_NOField);
			 
			DataSchemaField INSPECTION_MODEField = new DataSchemaField();
			INSPECTION_MODEField.Name = "INSPECTION_MODE";
			INSPECTION_MODEField.Type = typeof(int).ToString();
			INSPECTION_MODEField.Index = 16;
			fields.Add(INSPECTION_MODEField);
			 
			DataSchemaField INSPECTION_FLAGField = new DataSchemaField();
			INSPECTION_FLAGField.Name = "INSPECTION_FLAG";
			INSPECTION_FLAGField.Type = typeof(bool).ToString();
			INSPECTION_FLAGField.Index = 17;
			fields.Add(INSPECTION_FLAGField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 18;
			fields.Add(COMMENTSField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 19;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 20;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 21;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 22;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 23;
			fields.Add(MODIFY_USERField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public Guid? OrderFid{ get;set; }		
				
		[DataMember]
		public string OrderCode{ get;set; }		
				
		[DataMember]
		public int? RowNo{ get;set; }		
				
		[DataMember]
		public string SupplierNum{ get;set; }		
				
		[DataMember]
		public string PartNo{ get;set; }		
				
		[DataMember]
		public string PartVersion{ get;set; }		
				
		[DataMember]
		public string PartCname{ get;set; }		
				
		[DataMember]
		public string PartEname{ get;set; }		
				
		[DataMember]
		public string MeasuringUnitNo{ get;set; }		
				
		[DataMember]
		public decimal? RequiredPartQty{ get;set; }		
				
		[DataMember]
		public decimal? ActualPartQty{ get;set; }		
				
		[DataMember]
		public string VehicheModelNo{ get;set; }		
				
		[DataMember]
		public int? DayVehicheSeqNo{ get;set; }		
				
		[DataMember]
		public string ProductionNo{ get;set; }		
				
		[DataMember]
		public int? InspectionMode{ get;set; }		
				
		[DataMember]
		public bool? InspectionFlag{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public bool ValidFlag{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			JisPullOrderDetailInfo info = new JisPullOrderDetailInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.OrderFid = this.OrderFid;
			info.OrderCode = this.OrderCode;
			info.RowNo = this.RowNo;
			info.SupplierNum = this.SupplierNum;
			info.PartNo = this.PartNo;
			info.PartVersion = this.PartVersion;
			info.PartCname = this.PartCname;
			info.PartEname = this.PartEname;
			info.MeasuringUnitNo = this.MeasuringUnitNo;
			info.RequiredPartQty = this.RequiredPartQty;
			info.ActualPartQty = this.ActualPartQty;
			info.VehicheModelNo = this.VehicheModelNo;
			info.DayVehicheSeqNo = this.DayVehicheSeqNo;
			info.ProductionNo = this.ProductionNo;
			info.InspectionMode = this.InspectionMode;
			info.InspectionFlag = this.InspectionFlag;
			info.Comments = this.Comments;
			info.ValidFlag = this.ValidFlag;
			info.CreateDate = this.CreateDate;
			info.CreateUser = this.CreateUser;
			info.ModifyDate = this.ModifyDate;
			info.ModifyUser = this.ModifyUser;
			return info;			
		}
		 
		public JisPullOrderDetailInfo Clone()
		{
			return ((ICloneable) this).Clone() as JisPullOrderDetailInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// JisPullOrderDetailInfoCollection对应表[TT_MPM_JIS_PULL_ORDER_DETAIL]
    /// </summary>
	public partial class JisPullOrderDetailInfoCollection : BusinessObjectCollection<JisPullOrderDetailInfo>
	{
		public JisPullOrderDetailInfoCollection():base("TT_MPM_JIS_PULL_ORDER_DETAIL"){}	
	}
}
