#region Declaim
//---------------------------------------------------------------------------
// Name:		DiffanalyseReportsInfo
// Function: 	Expose data in table DiffanalyseReports from database as business object to MES system.
// Tool:		T4
// CreateDate:	2017年12月22日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// DiffanalyseReportsInfo对应表[TM_WMS_DIFFANALYSE_REPORTS]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class DiffanalyseReportsInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public DiffanalyseReportsInfo( 
					int aReportId,

					string aReportNo,

					string aNotificationNo,

					string aPlant,

					string aAssemblyLine,

					string aPlantZone,

					string aWorkshop,

					string aWmNo,

					string aZoneNo,

					int aCountType,

					string aPublishKeeper,

					DateTime aPublishTime,

					int aDiffStatus,

					string aComments,

					string aCreateUser,

					DateTime aCreateDate,

					string aUpdateUser,

					DateTime aUpdateDate

				 
		) : this()
		{
			 
			ReportId = aReportId;
		 
			ReportNo = aReportNo;
		 
			NotificationNo = aNotificationNo;
		 
			Plant = aPlant;
		 
			AssemblyLine = aAssemblyLine;
		 
			PlantZone = aPlantZone;
		 
			Workshop = aWorkshop;
		 
			WmNo = aWmNo;
		 
			ZoneNo = aZoneNo;
		 
			CountType = aCountType;
		 
			PublishKeeper = aPublishKeeper;
		 
			PublishTime = aPublishTime;
		 
			DiffStatus = aDiffStatus;
		 
			Comments = aComments;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			UpdateUser = aUpdateUser;
		 
			UpdateDate = aUpdateDate;
		}
		
		public DiffanalyseReportsInfo():base("TM_WMS_DIFFANALYSE_REPORTS")
		{
			List<string> keys = new List<string>();
			 			keys.Add("REPORT_ID");                 _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField REPORT_IDField = new DataSchemaField();
			REPORT_IDField.Name = "REPORT_ID";
			REPORT_IDField.Type = typeof(int).ToString();
			REPORT_IDField.Index = 0;
			fields.Add(REPORT_IDField);
			 
			DataSchemaField REPORT_NOField = new DataSchemaField();
			REPORT_NOField.Name = "REPORT_NO";
			REPORT_NOField.Type = typeof(string).ToString();
			REPORT_NOField.Index = 1;
			fields.Add(REPORT_NOField);
			 
			DataSchemaField NOTIFICATION_NOField = new DataSchemaField();
			NOTIFICATION_NOField.Name = "NOTIFICATION_NO";
			NOTIFICATION_NOField.Type = typeof(string).ToString();
			NOTIFICATION_NOField.Index = 2;
			fields.Add(NOTIFICATION_NOField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 3;
			fields.Add(PLANTField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 4;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField PLANT_ZONEField = new DataSchemaField();
			PLANT_ZONEField.Name = "PLANT_ZONE";
			PLANT_ZONEField.Type = typeof(string).ToString();
			PLANT_ZONEField.Index = 5;
			fields.Add(PLANT_ZONEField);
			 
			DataSchemaField WORKSHOPField = new DataSchemaField();
			WORKSHOPField.Name = "WORKSHOP";
			WORKSHOPField.Type = typeof(string).ToString();
			WORKSHOPField.Index = 6;
			fields.Add(WORKSHOPField);
			 
			DataSchemaField WM_NOField = new DataSchemaField();
			WM_NOField.Name = "WM_NO";
			WM_NOField.Type = typeof(string).ToString();
			WM_NOField.Index = 7;
			fields.Add(WM_NOField);
			 
			DataSchemaField ZONE_NOField = new DataSchemaField();
			ZONE_NOField.Name = "ZONE_NO";
			ZONE_NOField.Type = typeof(string).ToString();
			ZONE_NOField.Index = 8;
			fields.Add(ZONE_NOField);
			 
			DataSchemaField COUNT_TYPEField = new DataSchemaField();
			COUNT_TYPEField.Name = "COUNT_TYPE";
			COUNT_TYPEField.Type = typeof(int).ToString();
			COUNT_TYPEField.Index = 9;
			fields.Add(COUNT_TYPEField);
			 
			DataSchemaField PUBLISH_KEEPERField = new DataSchemaField();
			PUBLISH_KEEPERField.Name = "PUBLISH_KEEPER";
			PUBLISH_KEEPERField.Type = typeof(string).ToString();
			PUBLISH_KEEPERField.Index = 10;
			fields.Add(PUBLISH_KEEPERField);
			 
			DataSchemaField PUBLISH_TIMEField = new DataSchemaField();
			PUBLISH_TIMEField.Name = "PUBLISH_TIME";
			PUBLISH_TIMEField.Type = typeof(DateTime).ToString();
			PUBLISH_TIMEField.Index = 11;
			fields.Add(PUBLISH_TIMEField);
			 
			DataSchemaField DIFF_STATUSField = new DataSchemaField();
			DIFF_STATUSField.Name = "DIFF_STATUS";
			DIFF_STATUSField.Type = typeof(int).ToString();
			DIFF_STATUSField.Index = 12;
			fields.Add(DIFF_STATUSField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 13;
			fields.Add(COMMENTSField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 14;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 15;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField UPDATE_USERField = new DataSchemaField();
			UPDATE_USERField.Name = "UPDATE_USER";
			UPDATE_USERField.Type = typeof(string).ToString();
			UPDATE_USERField.Index = 16;
			fields.Add(UPDATE_USERField);
			 
			DataSchemaField UPDATE_DATEField = new DataSchemaField();
			UPDATE_DATEField.Name = "UPDATE_DATE";
			UPDATE_DATEField.Type = typeof(DateTime).ToString();
			UPDATE_DATEField.Index = 17;
			fields.Add(UPDATE_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public int ReportId{ get;set; }		
				
		[DataMember]
		public string ReportNo{ get;set; }		
				
		[DataMember]
		public string NotificationNo{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string PlantZone{ get;set; }		
				
		[DataMember]
		public string Workshop{ get;set; }		
				
		[DataMember]
		public string WmNo{ get;set; }		
				
		[DataMember]
		public string ZoneNo{ get;set; }		
				
		[DataMember]
		public int? CountType{ get;set; }		
				
		[DataMember]
		public string PublishKeeper{ get;set; }		
				
		[DataMember]
		public DateTime? PublishTime{ get;set; }		
				
		[DataMember]
		public int? DiffStatus{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string UpdateUser{ get;set; }		
				
		[DataMember]
		public DateTime? UpdateDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			DiffanalyseReportsInfo info = new DiffanalyseReportsInfo();

			info.ReportId = this.ReportId;
			info.ReportNo = this.ReportNo;
			info.NotificationNo = this.NotificationNo;
			info.Plant = this.Plant;
			info.AssemblyLine = this.AssemblyLine;
			info.PlantZone = this.PlantZone;
			info.Workshop = this.Workshop;
			info.WmNo = this.WmNo;
			info.ZoneNo = this.ZoneNo;
			info.CountType = this.CountType;
			info.PublishKeeper = this.PublishKeeper;
			info.PublishTime = this.PublishTime;
			info.DiffStatus = this.DiffStatus;
			info.Comments = this.Comments;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.UpdateUser = this.UpdateUser;
			info.UpdateDate = this.UpdateDate;
			return info;			
		}
		 
		public DiffanalyseReportsInfo Clone()
		{
			return ((ICloneable) this).Clone() as DiffanalyseReportsInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// DiffanalyseReportsInfoCollection对应表[TM_WMS_DIFFANALYSE_REPORTS]
    /// </summary>
	public partial class DiffanalyseReportsInfoCollection : BusinessObjectCollection<DiffanalyseReportsInfo>
	{
		public DiffanalyseReportsInfoCollection():base("TM_WMS_DIFFANALYSE_REPORTS"){}	
	}
}
