#region Declaim
//---------------------------------------------------------------------------
// Name:		PartTrayStockInfo
// Function: 	Expose data in table PartTrayStock from database as business object to MES system.
// Tool:		T4
// CreateDate:	2017年12月21日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// PartTrayStockInfo对应表[TR_BAS_PART_TRAY_STOCK]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class PartTrayStockInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public PartTrayStockInfo( 
					string aPlant,

					string aWmNo,

					string aZoneNo,

					string aDloc,

					string aPartNo,

					string aTrayNo,

					string aBatchNo,

					int aNum,

					int aBoxNum,

					int aDlocStatus,

					bool aValidFlag,

					string aModifyUser,

					long aId,

					string aCreateUser,

					DateTime aModifyDate,

					DateTime aCreateDate

				 
		) : this()
		{
			 
			Plant = aPlant;
		 
			WmNo = aWmNo;
		 
			ZoneNo = aZoneNo;
		 
			Dloc = aDloc;
		 
			PartNo = aPartNo;
		 
			TrayNo = aTrayNo;
		 
			BatchNo = aBatchNo;
		 
			Num = aNum;
		 
			BoxNum = aBoxNum;
		 
			DlocStatus = aDlocStatus;
		 
			ValidFlag = aValidFlag;
		 
			ModifyUser = aModifyUser;
		 
			Id = aId;
		 
			CreateUser = aCreateUser;
		 
			ModifyDate = aModifyDate;
		 
			CreateDate = aCreateDate;
		}
		
		public PartTrayStockInfo():base("TR_BAS_PART_TRAY_STOCK")
		{
			List<string> keys = new List<string>();
			             			keys.Add("ID");   _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 0;
			fields.Add(PLANTField);
			 
			DataSchemaField WM_NOField = new DataSchemaField();
			WM_NOField.Name = "WM_NO";
			WM_NOField.Type = typeof(string).ToString();
			WM_NOField.Index = 1;
			fields.Add(WM_NOField);
			 
			DataSchemaField ZONE_NOField = new DataSchemaField();
			ZONE_NOField.Name = "ZONE_NO";
			ZONE_NOField.Type = typeof(string).ToString();
			ZONE_NOField.Index = 2;
			fields.Add(ZONE_NOField);
			 
			DataSchemaField DLOCField = new DataSchemaField();
			DLOCField.Name = "DLOC";
			DLOCField.Type = typeof(string).ToString();
			DLOCField.Index = 3;
			fields.Add(DLOCField);
			 
			DataSchemaField PART_NOField = new DataSchemaField();
			PART_NOField.Name = "PART_NO";
			PART_NOField.Type = typeof(string).ToString();
			PART_NOField.Index = 4;
			fields.Add(PART_NOField);
			 
			DataSchemaField TRAY_NOField = new DataSchemaField();
			TRAY_NOField.Name = "TRAY_NO";
			TRAY_NOField.Type = typeof(string).ToString();
			TRAY_NOField.Index = 5;
			fields.Add(TRAY_NOField);
			 
			DataSchemaField BATCH_NOField = new DataSchemaField();
			BATCH_NOField.Name = "BATCH_NO";
			BATCH_NOField.Type = typeof(string).ToString();
			BATCH_NOField.Index = 6;
			fields.Add(BATCH_NOField);
			 
			DataSchemaField NUMField = new DataSchemaField();
			NUMField.Name = "NUM";
			NUMField.Type = typeof(int).ToString();
			NUMField.Index = 7;
			fields.Add(NUMField);
			 
			DataSchemaField BOX_NUMField = new DataSchemaField();
			BOX_NUMField.Name = "BOX_NUM";
			BOX_NUMField.Type = typeof(int).ToString();
			BOX_NUMField.Index = 8;
			fields.Add(BOX_NUMField);
			 
			DataSchemaField DLOC_STATUSField = new DataSchemaField();
			DLOC_STATUSField.Name = "DLOC_STATUS";
			DLOC_STATUSField.Type = typeof(int).ToString();
			DLOC_STATUSField.Index = 9;
			fields.Add(DLOC_STATUSField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 10;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 11;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 12;
			fields.Add(IDField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 13;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 14;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 15;
			fields.Add(CREATE_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string WmNo{ get;set; }		
				
		[DataMember]
		public string ZoneNo{ get;set; }		
				
		[DataMember]
		public string Dloc{ get;set; }		
				
		[DataMember]
		public string PartNo{ get;set; }		
				
		[DataMember]
		public string TrayNo{ get;set; }		
				
		[DataMember]
		public string BatchNo{ get;set; }		
				
		[DataMember]
		public int? Num{ get;set; }		
				
		[DataMember]
		public int? BoxNum{ get;set; }		
				
		[DataMember]
		public int? DlocStatus{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			PartTrayStockInfo info = new PartTrayStockInfo();

			info.Plant = this.Plant;
			info.WmNo = this.WmNo;
			info.ZoneNo = this.ZoneNo;
			info.Dloc = this.Dloc;
			info.PartNo = this.PartNo;
			info.TrayNo = this.TrayNo;
			info.BatchNo = this.BatchNo;
			info.Num = this.Num;
			info.BoxNum = this.BoxNum;
			info.DlocStatus = this.DlocStatus;
			info.ValidFlag = this.ValidFlag;
			info.ModifyUser = this.ModifyUser;
			info.Id = this.Id;
			info.CreateUser = this.CreateUser;
			info.ModifyDate = this.ModifyDate;
			info.CreateDate = this.CreateDate;
			return info;			
		}
		 
		public PartTrayStockInfo Clone()
		{
			return ((ICloneable) this).Clone() as PartTrayStockInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// PartTrayStockInfoCollection对应表[TR_BAS_PART_TRAY_STOCK]
    /// </summary>
	public partial class PartTrayStockInfoCollection : BusinessObjectCollection<PartTrayStockInfo>
	{
		public PartTrayStockInfoCollection():base("TR_BAS_PART_TRAY_STOCK"){}	
	}
}
