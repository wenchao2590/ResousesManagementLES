#region Declaim
//---------------------------------------------------------------------------
// Name:		MesMissingpartsDetailInfo
// Function: 	Expose data in table MesMissingpartsDetail from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月24日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// MesMissingpartsDetailInfo对应表[TI_IFM_MES_MISSINGPARTS_DETAIL]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class MesMissingpartsDetailInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public MesMissingpartsDetailInfo( 
					long aId,

					Guid aFid,

					Guid aLogFid,

					string aDmsNo,

					string aStationcode,

					string aMatercode,

					decimal aQty,

					bool aValidFlag,

					int aProcessFlag,

					DateTime aProcessTime,

					string aCreateUser,

					DateTime aCreateDate,

					string aModifyUser,

					DateTime aModifyDate

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			LogFid = aLogFid;
		 
			DmsNo = aDmsNo;
		 
			Stationcode = aStationcode;
		 
			Matercode = aMatercode;
		 
			Qty = aQty;
		 
			ValidFlag = aValidFlag;
		 
			ProcessFlag = aProcessFlag;
		 
			ProcessTime = aProcessTime;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		}
		
		public MesMissingpartsDetailInfo():base("TI_IFM_MES_MISSINGPARTS_DETAIL")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");             _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField LOG_FIDField = new DataSchemaField();
			LOG_FIDField.Name = "LOG_FID";
			LOG_FIDField.Type = typeof(Guid).ToString();
			LOG_FIDField.Index = 2;
			fields.Add(LOG_FIDField);
			 
			DataSchemaField DMS_NOField = new DataSchemaField();
			DMS_NOField.Name = "DMS_NO";
			DMS_NOField.Type = typeof(string).ToString();
			DMS_NOField.Index = 3;
			fields.Add(DMS_NOField);
			 
			DataSchemaField STATIONCODEField = new DataSchemaField();
			STATIONCODEField.Name = "STATIONCODE";
			STATIONCODEField.Type = typeof(string).ToString();
			STATIONCODEField.Index = 4;
			fields.Add(STATIONCODEField);
			 
			DataSchemaField MATERCODEField = new DataSchemaField();
			MATERCODEField.Name = "MATERCODE";
			MATERCODEField.Type = typeof(string).ToString();
			MATERCODEField.Index = 5;
			fields.Add(MATERCODEField);
			 
			DataSchemaField QTYField = new DataSchemaField();
			QTYField.Name = "QTY";
			QTYField.Type = typeof(decimal).ToString();
			QTYField.Index = 6;
			fields.Add(QTYField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 7;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField PROCESS_FLAGField = new DataSchemaField();
			PROCESS_FLAGField.Name = "PROCESS_FLAG";
			PROCESS_FLAGField.Type = typeof(int).ToString();
			PROCESS_FLAGField.Index = 8;
			fields.Add(PROCESS_FLAGField);
			 
			DataSchemaField PROCESS_TIMEField = new DataSchemaField();
			PROCESS_TIMEField.Name = "PROCESS_TIME";
			PROCESS_TIMEField.Type = typeof(DateTime).ToString();
			PROCESS_TIMEField.Index = 9;
			fields.Add(PROCESS_TIMEField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 10;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 11;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 12;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 13;
			fields.Add(MODIFY_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public Guid? LogFid{ get;set; }		
				
		[DataMember]
		public string DmsNo{ get;set; }		
				
		[DataMember]
		public string Stationcode{ get;set; }		
				
		[DataMember]
		public string Matercode{ get;set; }		
				
		[DataMember]
		public decimal? Qty{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public int? ProcessFlag{ get;set; }		
				
		[DataMember]
		public DateTime? ProcessTime{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			MesMissingpartsDetailInfo info = new MesMissingpartsDetailInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.LogFid = this.LogFid;
			info.DmsNo = this.DmsNo;
			info.Stationcode = this.Stationcode;
			info.Matercode = this.Matercode;
			info.Qty = this.Qty;
			info.ValidFlag = this.ValidFlag;
			info.ProcessFlag = this.ProcessFlag;
			info.ProcessTime = this.ProcessTime;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			return info;			
		}
		 
		public MesMissingpartsDetailInfo Clone()
		{
			return ((ICloneable) this).Clone() as MesMissingpartsDetailInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// MesMissingpartsDetailInfoCollection对应表[TI_IFM_MES_MISSINGPARTS_DETAIL]
    /// </summary>
	public partial class MesMissingpartsDetailInfoCollection : BusinessObjectCollection<MesMissingpartsDetailInfo>
	{
		public MesMissingpartsDetailInfoCollection():base("TI_IFM_MES_MISSINGPARTS_DETAIL"){}	
	}
}
