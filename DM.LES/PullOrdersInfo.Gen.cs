#region Declaim
//---------------------------------------------------------------------------
// Name:		PullOrdersInfo
// Function: 	Expose data in table PullOrders from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月17日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// PullOrdersInfo对应表[TT_BAS_PULL_ORDERS]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class PullOrdersInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public PullOrdersInfo( 
					long aId,

					Guid aFid,

					string aOrderNo,

					string aWerk,

					string aModelYear,

					string aModel,

					string aVehicleOrder,

					DateTime aOrderDate,

					string aAssemblyLine,

					string aVin,

					string aPartNo,

					bool aVorserie,

					string aSpj,

					string aKnr,

					string aFarbau,

					string aFarbin,

					string aPnrString,

					string aPnrStringCompute,

					int aDealFlag,

					string aStatusFlag,

					string aSignature,

					string aOrderFileName,

					string aOrderType,

					int aRecalculateFlag,

					int aChangeFlag,

					int aProcessLineSn,

					int aInitStstus,

					int aVersion,

					int aOrderStatus,

					decimal aQty,

					string aMeasuringUnit,

					string aZcolori,

					string aZcoloriD,

					string aPlanFlag,

					DateTime aPlanExecuteTime,

					string aComments,

					bool aValidFlag,

					string aCreateUser,

					DateTime aCreateDate,

					string aModifyUser,

					DateTime aModifyDate

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			OrderNo = aOrderNo;
		 
			Werk = aWerk;
		 
			ModelYear = aModelYear;
		 
			Model = aModel;
		 
			VehicleOrder = aVehicleOrder;
		 
			OrderDate = aOrderDate;
		 
			AssemblyLine = aAssemblyLine;
		 
			Vin = aVin;
		 
			PartNo = aPartNo;
		 
			Vorserie = aVorserie;
		 
			Spj = aSpj;
		 
			Knr = aKnr;
		 
			Farbau = aFarbau;
		 
			Farbin = aFarbin;
		 
			PnrString = aPnrString;
		 
			PnrStringCompute = aPnrStringCompute;
		 
			DealFlag = aDealFlag;
		 
			StatusFlag = aStatusFlag;
		 
			Signature = aSignature;
		 
			OrderFileName = aOrderFileName;
		 
			OrderType = aOrderType;
		 
			RecalculateFlag = aRecalculateFlag;
		 
			ChangeFlag = aChangeFlag;
		 
			ProcessLineSn = aProcessLineSn;
		 
			InitStstus = aInitStstus;
		 
			Version = aVersion;
		 
			OrderStatus = aOrderStatus;
		 
			Qty = aQty;
		 
			MeasuringUnit = aMeasuringUnit;
		 
			Zcolori = aZcolori;
		 
			ZcoloriD = aZcoloriD;
		 
			PlanFlag = aPlanFlag;
		 
			PlanExecuteTime = aPlanExecuteTime;
		 
			Comments = aComments;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		}
		
		public PullOrdersInfo():base("TT_BAS_PULL_ORDERS")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                                        _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField ORDER_NOField = new DataSchemaField();
			ORDER_NOField.Name = "ORDER_NO";
			ORDER_NOField.Type = typeof(string).ToString();
			ORDER_NOField.Index = 2;
			fields.Add(ORDER_NOField);
			 
			DataSchemaField WERKField = new DataSchemaField();
			WERKField.Name = "WERK";
			WERKField.Type = typeof(string).ToString();
			WERKField.Index = 3;
			fields.Add(WERKField);
			 
			DataSchemaField MODEL_YEARField = new DataSchemaField();
			MODEL_YEARField.Name = "MODEL_YEAR";
			MODEL_YEARField.Type = typeof(string).ToString();
			MODEL_YEARField.Index = 4;
			fields.Add(MODEL_YEARField);
			 
			DataSchemaField MODELField = new DataSchemaField();
			MODELField.Name = "MODEL";
			MODELField.Type = typeof(string).ToString();
			MODELField.Index = 5;
			fields.Add(MODELField);
			 
			DataSchemaField VEHICLE_ORDERField = new DataSchemaField();
			VEHICLE_ORDERField.Name = "VEHICLE_ORDER";
			VEHICLE_ORDERField.Type = typeof(string).ToString();
			VEHICLE_ORDERField.Index = 6;
			fields.Add(VEHICLE_ORDERField);
			 
			DataSchemaField ORDER_DATEField = new DataSchemaField();
			ORDER_DATEField.Name = "ORDER_DATE";
			ORDER_DATEField.Type = typeof(DateTime).ToString();
			ORDER_DATEField.Index = 7;
			fields.Add(ORDER_DATEField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 8;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField VINField = new DataSchemaField();
			VINField.Name = "VIN";
			VINField.Type = typeof(string).ToString();
			VINField.Index = 9;
			fields.Add(VINField);
			 
			DataSchemaField PART_NOField = new DataSchemaField();
			PART_NOField.Name = "PART_NO";
			PART_NOField.Type = typeof(string).ToString();
			PART_NOField.Index = 10;
			fields.Add(PART_NOField);
			 
			DataSchemaField VORSERIEField = new DataSchemaField();
			VORSERIEField.Name = "VORSERIE";
			VORSERIEField.Type = typeof(bool).ToString();
			VORSERIEField.Index = 11;
			fields.Add(VORSERIEField);
			 
			DataSchemaField SPJField = new DataSchemaField();
			SPJField.Name = "SPJ";
			SPJField.Type = typeof(string).ToString();
			SPJField.Index = 12;
			fields.Add(SPJField);
			 
			DataSchemaField KNRField = new DataSchemaField();
			KNRField.Name = "KNR";
			KNRField.Type = typeof(string).ToString();
			KNRField.Index = 13;
			fields.Add(KNRField);
			 
			DataSchemaField FARBAUField = new DataSchemaField();
			FARBAUField.Name = "FARBAU";
			FARBAUField.Type = typeof(string).ToString();
			FARBAUField.Index = 14;
			fields.Add(FARBAUField);
			 
			DataSchemaField FARBINField = new DataSchemaField();
			FARBINField.Name = "FARBIN";
			FARBINField.Type = typeof(string).ToString();
			FARBINField.Index = 15;
			fields.Add(FARBINField);
			 
			DataSchemaField PNR_STRINGField = new DataSchemaField();
			PNR_STRINGField.Name = "PNR_STRING";
			PNR_STRINGField.Type = typeof(string).ToString();
			PNR_STRINGField.Index = 16;
			fields.Add(PNR_STRINGField);
			 
			DataSchemaField PNR_STRING_COMPUTEField = new DataSchemaField();
			PNR_STRING_COMPUTEField.Name = "PNR_STRING_COMPUTE";
			PNR_STRING_COMPUTEField.Type = typeof(string).ToString();
			PNR_STRING_COMPUTEField.Index = 17;
			fields.Add(PNR_STRING_COMPUTEField);
			 
			DataSchemaField DEAL_FLAGField = new DataSchemaField();
			DEAL_FLAGField.Name = "DEAL_FLAG";
			DEAL_FLAGField.Type = typeof(int).ToString();
			DEAL_FLAGField.Index = 18;
			fields.Add(DEAL_FLAGField);
			 
			DataSchemaField STATUS_FLAGField = new DataSchemaField();
			STATUS_FLAGField.Name = "STATUS_FLAG";
			STATUS_FLAGField.Type = typeof(string).ToString();
			STATUS_FLAGField.Index = 19;
			fields.Add(STATUS_FLAGField);
			 
			DataSchemaField SIGNATUREField = new DataSchemaField();
			SIGNATUREField.Name = "SIGNATURE";
			SIGNATUREField.Type = typeof(string).ToString();
			SIGNATUREField.Index = 20;
			fields.Add(SIGNATUREField);
			 
			DataSchemaField ORDER_FILE_NAMEField = new DataSchemaField();
			ORDER_FILE_NAMEField.Name = "ORDER_FILE_NAME";
			ORDER_FILE_NAMEField.Type = typeof(string).ToString();
			ORDER_FILE_NAMEField.Index = 21;
			fields.Add(ORDER_FILE_NAMEField);
			 
			DataSchemaField ORDER_TYPEField = new DataSchemaField();
			ORDER_TYPEField.Name = "ORDER_TYPE";
			ORDER_TYPEField.Type = typeof(string).ToString();
			ORDER_TYPEField.Index = 22;
			fields.Add(ORDER_TYPEField);
			 
			DataSchemaField RECALCULATE_FLAGField = new DataSchemaField();
			RECALCULATE_FLAGField.Name = "RECALCULATE_FLAG";
			RECALCULATE_FLAGField.Type = typeof(int).ToString();
			RECALCULATE_FLAGField.Index = 23;
			fields.Add(RECALCULATE_FLAGField);
			 
			DataSchemaField CHANGE_FLAGField = new DataSchemaField();
			CHANGE_FLAGField.Name = "CHANGE_FLAG";
			CHANGE_FLAGField.Type = typeof(int).ToString();
			CHANGE_FLAGField.Index = 24;
			fields.Add(CHANGE_FLAGField);
			 
			DataSchemaField PROCESS_LINE_SNField = new DataSchemaField();
			PROCESS_LINE_SNField.Name = "PROCESS_LINE_SN";
			PROCESS_LINE_SNField.Type = typeof(int).ToString();
			PROCESS_LINE_SNField.Index = 25;
			fields.Add(PROCESS_LINE_SNField);
			 
			DataSchemaField INIT_STSTUSField = new DataSchemaField();
			INIT_STSTUSField.Name = "INIT_STSTUS";
			INIT_STSTUSField.Type = typeof(int).ToString();
			INIT_STSTUSField.Index = 26;
			fields.Add(INIT_STSTUSField);
			 
			DataSchemaField VERSIONField = new DataSchemaField();
			VERSIONField.Name = "VERSION";
			VERSIONField.Type = typeof(int).ToString();
			VERSIONField.Index = 27;
			fields.Add(VERSIONField);
			 
			DataSchemaField ORDER_STATUSField = new DataSchemaField();
			ORDER_STATUSField.Name = "ORDER_STATUS";
			ORDER_STATUSField.Type = typeof(int).ToString();
			ORDER_STATUSField.Index = 28;
			fields.Add(ORDER_STATUSField);
			 
			DataSchemaField QTYField = new DataSchemaField();
			QTYField.Name = "QTY";
			QTYField.Type = typeof(decimal).ToString();
			QTYField.Index = 29;
			fields.Add(QTYField);
			 
			DataSchemaField MEASURING_UNITField = new DataSchemaField();
			MEASURING_UNITField.Name = "MEASURING_UNIT";
			MEASURING_UNITField.Type = typeof(string).ToString();
			MEASURING_UNITField.Index = 30;
			fields.Add(MEASURING_UNITField);
			 
			DataSchemaField ZCOLORIField = new DataSchemaField();
			ZCOLORIField.Name = "ZCOLORI";
			ZCOLORIField.Type = typeof(string).ToString();
			ZCOLORIField.Index = 31;
			fields.Add(ZCOLORIField);
			 
			DataSchemaField ZCOLORI_DField = new DataSchemaField();
			ZCOLORI_DField.Name = "ZCOLORI_D";
			ZCOLORI_DField.Type = typeof(string).ToString();
			ZCOLORI_DField.Index = 32;
			fields.Add(ZCOLORI_DField);
			 
			DataSchemaField PLAN_FLAGField = new DataSchemaField();
			PLAN_FLAGField.Name = "PLAN_FLAG";
			PLAN_FLAGField.Type = typeof(string).ToString();
			PLAN_FLAGField.Index = 33;
			fields.Add(PLAN_FLAGField);
			 
			DataSchemaField PLAN_EXECUTE_TIMEField = new DataSchemaField();
			PLAN_EXECUTE_TIMEField.Name = "PLAN_EXECUTE_TIME";
			PLAN_EXECUTE_TIMEField.Type = typeof(DateTime).ToString();
			PLAN_EXECUTE_TIMEField.Index = 34;
			fields.Add(PLAN_EXECUTE_TIMEField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 35;
			fields.Add(COMMENTSField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 36;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 37;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 38;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 39;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 40;
			fields.Add(MODIFY_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public string OrderNo{ get;set; }		
				
		[DataMember]
		public string Werk{ get;set; }		
				
		[DataMember]
		public string ModelYear{ get;set; }		
				
		[DataMember]
		public string Model{ get;set; }		
				
		[DataMember]
		public string VehicleOrder{ get;set; }		
				
		[DataMember]
		public DateTime? OrderDate{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string Vin{ get;set; }		
				
		[DataMember]
		public string PartNo{ get;set; }		
				
		[DataMember]
		public bool? Vorserie{ get;set; }		
				
		[DataMember]
		public string Spj{ get;set; }		
				
		[DataMember]
		public string Knr{ get;set; }		
				
		[DataMember]
		public string Farbau{ get;set; }		
				
		[DataMember]
		public string Farbin{ get;set; }		
				
		[DataMember]
		public string PnrString{ get;set; }		
				
		[DataMember]
		public string PnrStringCompute{ get;set; }		
				
		[DataMember]
		public int? DealFlag{ get;set; }		
				
		[DataMember]
		public string StatusFlag{ get;set; }		
				
		[DataMember]
		public string Signature{ get;set; }		
				
		[DataMember]
		public string OrderFileName{ get;set; }		
				
		[DataMember]
		public string OrderType{ get;set; }		
				
		[DataMember]
		public int? RecalculateFlag{ get;set; }		
				
		[DataMember]
		public int? ChangeFlag{ get;set; }		
				
		[DataMember]
		public int? ProcessLineSn{ get;set; }		
				
		[DataMember]
		public int? InitStstus{ get;set; }		
				
		[DataMember]
		public int? Version{ get;set; }		
				
		[DataMember]
		public int? OrderStatus{ get;set; }		
				
		[DataMember]
		public decimal? Qty{ get;set; }		
				
		[DataMember]
		public string MeasuringUnit{ get;set; }		
				
		[DataMember]
		public string Zcolori{ get;set; }		
				
		[DataMember]
		public string ZcoloriD{ get;set; }		
				
		[DataMember]
		public string PlanFlag{ get;set; }		
				
		[DataMember]
		public DateTime? PlanExecuteTime{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			PullOrdersInfo info = new PullOrdersInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.OrderNo = this.OrderNo;
			info.Werk = this.Werk;
			info.ModelYear = this.ModelYear;
			info.Model = this.Model;
			info.VehicleOrder = this.VehicleOrder;
			info.OrderDate = this.OrderDate;
			info.AssemblyLine = this.AssemblyLine;
			info.Vin = this.Vin;
			info.PartNo = this.PartNo;
			info.Vorserie = this.Vorserie;
			info.Spj = this.Spj;
			info.Knr = this.Knr;
			info.Farbau = this.Farbau;
			info.Farbin = this.Farbin;
			info.PnrString = this.PnrString;
			info.PnrStringCompute = this.PnrStringCompute;
			info.DealFlag = this.DealFlag;
			info.StatusFlag = this.StatusFlag;
			info.Signature = this.Signature;
			info.OrderFileName = this.OrderFileName;
			info.OrderType = this.OrderType;
			info.RecalculateFlag = this.RecalculateFlag;
			info.ChangeFlag = this.ChangeFlag;
			info.ProcessLineSn = this.ProcessLineSn;
			info.InitStstus = this.InitStstus;
			info.Version = this.Version;
			info.OrderStatus = this.OrderStatus;
			info.Qty = this.Qty;
			info.MeasuringUnit = this.MeasuringUnit;
			info.Zcolori = this.Zcolori;
			info.ZcoloriD = this.ZcoloriD;
			info.PlanFlag = this.PlanFlag;
			info.PlanExecuteTime = this.PlanExecuteTime;
			info.Comments = this.Comments;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			return info;			
		}
		 
		public PullOrdersInfo Clone()
		{
			return ((ICloneable) this).Clone() as PullOrdersInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// PullOrdersInfoCollection对应表[TT_BAS_PULL_ORDERS]
    /// </summary>
	public partial class PullOrdersInfoCollection : BusinessObjectCollection<PullOrdersInfo>
	{
		public PullOrdersInfoCollection():base("TT_BAS_PULL_ORDERS"){}	
	}
}
