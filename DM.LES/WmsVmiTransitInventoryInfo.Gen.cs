#region Declaim
//---------------------------------------------------------------------------
// Name:		WmsVmiTransitInventoryInfo
// Function: 	Expose data in table WmsVmiTransitInventory from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月24日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// WmsVmiTransitInventoryInfo对应表[TI_IFM_WMS_VMI_TRANSIT_INVENTORY]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class WmsVmiTransitInventoryInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public WmsVmiTransitInventoryInfo( 
					long aId,

					Guid aFid,

					Guid aLogFid,

					string aTransferkey,

					string aTransferlinenumber,

					string aVmicode,

					string aFromstorerkey,

					string aFromsku,

					decimal aToqty,

					string aFromlot07,

					string aTolot07,

					bool aValidFlag,

					int aProcessFlag,

					DateTime aProcessTime,

					DateTime aCreateDate,

					string aCreateUser,

					DateTime aModifyDate,

					string aModifyUser,

					string aComments

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			LogFid = aLogFid;
		 
			Transferkey = aTransferkey;
		 
			Transferlinenumber = aTransferlinenumber;
		 
			Vmicode = aVmicode;
		 
			Fromstorerkey = aFromstorerkey;
		 
			Fromsku = aFromsku;
		 
			Toqty = aToqty;
		 
			Fromlot07 = aFromlot07;
		 
			Tolot07 = aTolot07;
		 
			ValidFlag = aValidFlag;
		 
			ProcessFlag = aProcessFlag;
		 
			ProcessTime = aProcessTime;
		 
			CreateDate = aCreateDate;
		 
			CreateUser = aCreateUser;
		 
			ModifyDate = aModifyDate;
		 
			ModifyUser = aModifyUser;
		 
			Comments = aComments;
		}
		
		public WmsVmiTransitInventoryInfo():base("TI_IFM_WMS_VMI_TRANSIT_INVENTORY")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                  _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField LOG_FIDField = new DataSchemaField();
			LOG_FIDField.Name = "LOG_FID";
			LOG_FIDField.Type = typeof(Guid).ToString();
			LOG_FIDField.Index = 2;
			fields.Add(LOG_FIDField);
			 
			DataSchemaField TRANSFERKEYField = new DataSchemaField();
			TRANSFERKEYField.Name = "TRANSFERKEY";
			TRANSFERKEYField.Type = typeof(string).ToString();
			TRANSFERKEYField.Index = 3;
			fields.Add(TRANSFERKEYField);
			 
			DataSchemaField TRANSFERLINENUMBERField = new DataSchemaField();
			TRANSFERLINENUMBERField.Name = "TRANSFERLINENUMBER";
			TRANSFERLINENUMBERField.Type = typeof(string).ToString();
			TRANSFERLINENUMBERField.Index = 4;
			fields.Add(TRANSFERLINENUMBERField);
			 
			DataSchemaField VMICODEField = new DataSchemaField();
			VMICODEField.Name = "VMICODE";
			VMICODEField.Type = typeof(string).ToString();
			VMICODEField.Index = 5;
			fields.Add(VMICODEField);
			 
			DataSchemaField FROMSTORERKEYField = new DataSchemaField();
			FROMSTORERKEYField.Name = "FROMSTORERKEY";
			FROMSTORERKEYField.Type = typeof(string).ToString();
			FROMSTORERKEYField.Index = 6;
			fields.Add(FROMSTORERKEYField);
			 
			DataSchemaField FROMSKUField = new DataSchemaField();
			FROMSKUField.Name = "FROMSKU";
			FROMSKUField.Type = typeof(string).ToString();
			FROMSKUField.Index = 7;
			fields.Add(FROMSKUField);
			 
			DataSchemaField TOQTYField = new DataSchemaField();
			TOQTYField.Name = "TOQTY";
			TOQTYField.Type = typeof(decimal).ToString();
			TOQTYField.Index = 8;
			fields.Add(TOQTYField);
			 
			DataSchemaField FROMLOT07Field = new DataSchemaField();
			FROMLOT07Field.Name = "FROMLOT07";
			FROMLOT07Field.Type = typeof(string).ToString();
			FROMLOT07Field.Index = 9;
			fields.Add(FROMLOT07Field);
			 
			DataSchemaField TOLOT07Field = new DataSchemaField();
			TOLOT07Field.Name = "TOLOT07";
			TOLOT07Field.Type = typeof(string).ToString();
			TOLOT07Field.Index = 10;
			fields.Add(TOLOT07Field);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 11;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField PROCESS_FLAGField = new DataSchemaField();
			PROCESS_FLAGField.Name = "PROCESS_FLAG";
			PROCESS_FLAGField.Type = typeof(int).ToString();
			PROCESS_FLAGField.Index = 12;
			fields.Add(PROCESS_FLAGField);
			 
			DataSchemaField PROCESS_TIMEField = new DataSchemaField();
			PROCESS_TIMEField.Name = "PROCESS_TIME";
			PROCESS_TIMEField.Type = typeof(DateTime).ToString();
			PROCESS_TIMEField.Index = 13;
			fields.Add(PROCESS_TIMEField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 14;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 15;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 16;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 17;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 18;
			fields.Add(COMMENTSField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public Guid? LogFid{ get;set; }		
				
		[DataMember]
		public string Transferkey{ get;set; }		
				
		[DataMember]
		public string Transferlinenumber{ get;set; }		
				
		[DataMember]
		public string Vmicode{ get;set; }		
				
		[DataMember]
		public string Fromstorerkey{ get;set; }		
				
		[DataMember]
		public string Fromsku{ get;set; }		
				
		[DataMember]
		public decimal? Toqty{ get;set; }		
				
		[DataMember]
		public string Fromlot07{ get;set; }		
				
		[DataMember]
		public string Tolot07{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public int? ProcessFlag{ get;set; }		
				
		[DataMember]
		public DateTime? ProcessTime{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			WmsVmiTransitInventoryInfo info = new WmsVmiTransitInventoryInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.LogFid = this.LogFid;
			info.Transferkey = this.Transferkey;
			info.Transferlinenumber = this.Transferlinenumber;
			info.Vmicode = this.Vmicode;
			info.Fromstorerkey = this.Fromstorerkey;
			info.Fromsku = this.Fromsku;
			info.Toqty = this.Toqty;
			info.Fromlot07 = this.Fromlot07;
			info.Tolot07 = this.Tolot07;
			info.ValidFlag = this.ValidFlag;
			info.ProcessFlag = this.ProcessFlag;
			info.ProcessTime = this.ProcessTime;
			info.CreateDate = this.CreateDate;
			info.CreateUser = this.CreateUser;
			info.ModifyDate = this.ModifyDate;
			info.ModifyUser = this.ModifyUser;
			info.Comments = this.Comments;
			return info;			
		}
		 
		public WmsVmiTransitInventoryInfo Clone()
		{
			return ((ICloneable) this).Clone() as WmsVmiTransitInventoryInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// WmsVmiTransitInventoryInfoCollection对应表[TI_IFM_WMS_VMI_TRANSIT_INVENTORY]
    /// </summary>
	public partial class WmsVmiTransitInventoryInfoCollection : BusinessObjectCollection<WmsVmiTransitInventoryInfo>
	{
		public WmsVmiTransitInventoryInfoCollection():base("TI_IFM_WMS_VMI_TRANSIT_INVENTORY"){}	
	}
}
