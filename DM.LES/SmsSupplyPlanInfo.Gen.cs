#region Declaim
//---------------------------------------------------------------------------
// Name:		SmsSupplyPlanInfo
// Function: 	Expose data in table SmsSupplyPlan from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月24日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// SmsSupplyPlanInfo对应表[TI_IFM_SMS_SUPPLY_PLAN]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class SmsSupplyPlanInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public SmsSupplyPlanInfo( 
					long aId,

					Guid aFid,

					Guid aLogFid,

					string aSupplierCode,

					string aPartNo,

					DateTime aRequireDate,

					decimal aPartQty,

					int aProcessFlag,

					DateTime aProcessTime,

					string aComments,

					bool aValidFlag,

					string aCreateUser,

					DateTime aCreateDate,

					string aModifyUser,

					DateTime aModifyDate

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			LogFid = aLogFid;
		 
			SupplierCode = aSupplierCode;
		 
			PartNo = aPartNo;
		 
			RequireDate = aRequireDate;
		 
			PartQty = aPartQty;
		 
			ProcessFlag = aProcessFlag;
		 
			ProcessTime = aProcessTime;
		 
			Comments = aComments;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		}
		
		public SmsSupplyPlanInfo():base("TI_IFM_SMS_SUPPLY_PLAN")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");              _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField LOG_FIDField = new DataSchemaField();
			LOG_FIDField.Name = "LOG_FID";
			LOG_FIDField.Type = typeof(Guid).ToString();
			LOG_FIDField.Index = 2;
			fields.Add(LOG_FIDField);
			 
			DataSchemaField SUPPLIER_CODEField = new DataSchemaField();
			SUPPLIER_CODEField.Name = "SUPPLIER_CODE";
			SUPPLIER_CODEField.Type = typeof(string).ToString();
			SUPPLIER_CODEField.Index = 3;
			fields.Add(SUPPLIER_CODEField);
			 
			DataSchemaField PART_NOField = new DataSchemaField();
			PART_NOField.Name = "PART_NO";
			PART_NOField.Type = typeof(string).ToString();
			PART_NOField.Index = 4;
			fields.Add(PART_NOField);
			 
			DataSchemaField REQUIRE_DATEField = new DataSchemaField();
			REQUIRE_DATEField.Name = "REQUIRE_DATE";
			REQUIRE_DATEField.Type = typeof(DateTime).ToString();
			REQUIRE_DATEField.Index = 5;
			fields.Add(REQUIRE_DATEField);
			 
			DataSchemaField PART_QTYField = new DataSchemaField();
			PART_QTYField.Name = "PART_QTY";
			PART_QTYField.Type = typeof(decimal).ToString();
			PART_QTYField.Index = 6;
			fields.Add(PART_QTYField);
			 
			DataSchemaField PROCESS_FLAGField = new DataSchemaField();
			PROCESS_FLAGField.Name = "PROCESS_FLAG";
			PROCESS_FLAGField.Type = typeof(int).ToString();
			PROCESS_FLAGField.Index = 7;
			fields.Add(PROCESS_FLAGField);
			 
			DataSchemaField PROCESS_TIMEField = new DataSchemaField();
			PROCESS_TIMEField.Name = "PROCESS_TIME";
			PROCESS_TIMEField.Type = typeof(DateTime).ToString();
			PROCESS_TIMEField.Index = 8;
			fields.Add(PROCESS_TIMEField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 9;
			fields.Add(COMMENTSField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 10;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 11;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 12;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 13;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 14;
			fields.Add(MODIFY_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public Guid? LogFid{ get;set; }		
				
		[DataMember]
		public string SupplierCode{ get;set; }		
				
		[DataMember]
		public string PartNo{ get;set; }		
				
		[DataMember]
		public DateTime? RequireDate{ get;set; }		
				
		[DataMember]
		public decimal? PartQty{ get;set; }		
				
		[DataMember]
		public int? ProcessFlag{ get;set; }		
				
		[DataMember]
		public DateTime? ProcessTime{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			SmsSupplyPlanInfo info = new SmsSupplyPlanInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.LogFid = this.LogFid;
			info.SupplierCode = this.SupplierCode;
			info.PartNo = this.PartNo;
			info.RequireDate = this.RequireDate;
			info.PartQty = this.PartQty;
			info.ProcessFlag = this.ProcessFlag;
			info.ProcessTime = this.ProcessTime;
			info.Comments = this.Comments;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			return info;			
		}
		 
		public SmsSupplyPlanInfo Clone()
		{
			return ((ICloneable) this).Clone() as SmsSupplyPlanInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// SmsSupplyPlanInfoCollection对应表[TI_IFM_SMS_SUPPLY_PLAN]
    /// </summary>
	public partial class SmsSupplyPlanInfoCollection : BusinessObjectCollection<SmsSupplyPlanInfo>
	{
		public SmsSupplyPlanInfoCollection():base("TI_IFM_SMS_SUPPLY_PLAN"){}	
	}
}
