#region Declaim
//---------------------------------------------------------------------------
// Name:		SapBreakpointChangesInfo
// Function: 	Expose data in table SapBreakpointChanges from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月24日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// SapBreakpointChangesInfo对应表[TI_IFM_SAP_BREAKPOINT_CHANGES]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class SapBreakpointChangesInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public SapBreakpointChangesInfo( 
					long aId,

					Guid aFid,

					Guid aLogFid,

					string aWerks,

					string aZcj,

					string aKtsch,

					string aAennr,

					string aMatnr,

					string aChangeFlag,

					string aOidnrk,

					string aNidnrk,

					decimal aMenge,

					string aEbort,

					DateTime aDatuv,

					DateTime aDatub,

					string aSortf,

					int aProcessFlag,

					DateTime aProcessTime,

					bool aValidFlag,

					string aCreateUser,

					DateTime aCreateDate,

					string aModifyUser,

					DateTime aModifyDate,

					string aComments

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			LogFid = aLogFid;
		 
			Werks = aWerks;
		 
			Zcj = aZcj;
		 
			Ktsch = aKtsch;
		 
			Aennr = aAennr;
		 
			Matnr = aMatnr;
		 
			ChangeFlag = aChangeFlag;
		 
			Oidnrk = aOidnrk;
		 
			Nidnrk = aNidnrk;
		 
			Menge = aMenge;
		 
			Ebort = aEbort;
		 
			Datuv = aDatuv;
		 
			Datub = aDatub;
		 
			Sortf = aSortf;
		 
			ProcessFlag = aProcessFlag;
		 
			ProcessTime = aProcessTime;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		 
			Comments = aComments;
		}
		
		public SapBreakpointChangesInfo():base("TI_IFM_SAP_BREAKPOINT_CHANGES")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                       _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField LOG_FIDField = new DataSchemaField();
			LOG_FIDField.Name = "LOG_FID";
			LOG_FIDField.Type = typeof(Guid).ToString();
			LOG_FIDField.Index = 2;
			fields.Add(LOG_FIDField);
			 
			DataSchemaField WERKSField = new DataSchemaField();
			WERKSField.Name = "WERKS";
			WERKSField.Type = typeof(string).ToString();
			WERKSField.Index = 3;
			fields.Add(WERKSField);
			 
			DataSchemaField ZCJField = new DataSchemaField();
			ZCJField.Name = "ZCJ";
			ZCJField.Type = typeof(string).ToString();
			ZCJField.Index = 4;
			fields.Add(ZCJField);
			 
			DataSchemaField KTSCHField = new DataSchemaField();
			KTSCHField.Name = "KTSCH";
			KTSCHField.Type = typeof(string).ToString();
			KTSCHField.Index = 5;
			fields.Add(KTSCHField);
			 
			DataSchemaField AENNRField = new DataSchemaField();
			AENNRField.Name = "AENNR";
			AENNRField.Type = typeof(string).ToString();
			AENNRField.Index = 6;
			fields.Add(AENNRField);
			 
			DataSchemaField MATNRField = new DataSchemaField();
			MATNRField.Name = "MATNR";
			MATNRField.Type = typeof(string).ToString();
			MATNRField.Index = 7;
			fields.Add(MATNRField);
			 
			DataSchemaField CHANGE_FLAGField = new DataSchemaField();
			CHANGE_FLAGField.Name = "CHANGE_FLAG";
			CHANGE_FLAGField.Type = typeof(string).ToString();
			CHANGE_FLAGField.Index = 8;
			fields.Add(CHANGE_FLAGField);
			 
			DataSchemaField OIDNRKField = new DataSchemaField();
			OIDNRKField.Name = "OIDNRK";
			OIDNRKField.Type = typeof(string).ToString();
			OIDNRKField.Index = 9;
			fields.Add(OIDNRKField);
			 
			DataSchemaField NIDNRKField = new DataSchemaField();
			NIDNRKField.Name = "NIDNRK";
			NIDNRKField.Type = typeof(string).ToString();
			NIDNRKField.Index = 10;
			fields.Add(NIDNRKField);
			 
			DataSchemaField MENGEField = new DataSchemaField();
			MENGEField.Name = "MENGE";
			MENGEField.Type = typeof(decimal).ToString();
			MENGEField.Index = 11;
			fields.Add(MENGEField);
			 
			DataSchemaField EBORTField = new DataSchemaField();
			EBORTField.Name = "EBORT";
			EBORTField.Type = typeof(string).ToString();
			EBORTField.Index = 12;
			fields.Add(EBORTField);
			 
			DataSchemaField DATUVField = new DataSchemaField();
			DATUVField.Name = "DATUV";
			DATUVField.Type = typeof(DateTime).ToString();
			DATUVField.Index = 13;
			fields.Add(DATUVField);
			 
			DataSchemaField DATUBField = new DataSchemaField();
			DATUBField.Name = "DATUB";
			DATUBField.Type = typeof(DateTime).ToString();
			DATUBField.Index = 14;
			fields.Add(DATUBField);
			 
			DataSchemaField SORTFField = new DataSchemaField();
			SORTFField.Name = "SORTF";
			SORTFField.Type = typeof(string).ToString();
			SORTFField.Index = 15;
			fields.Add(SORTFField);
			 
			DataSchemaField PROCESS_FLAGField = new DataSchemaField();
			PROCESS_FLAGField.Name = "PROCESS_FLAG";
			PROCESS_FLAGField.Type = typeof(int).ToString();
			PROCESS_FLAGField.Index = 16;
			fields.Add(PROCESS_FLAGField);
			 
			DataSchemaField PROCESS_TIMEField = new DataSchemaField();
			PROCESS_TIMEField.Name = "PROCESS_TIME";
			PROCESS_TIMEField.Type = typeof(DateTime).ToString();
			PROCESS_TIMEField.Index = 17;
			fields.Add(PROCESS_TIMEField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 18;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 19;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 20;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 21;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 22;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 23;
			fields.Add(COMMENTSField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public Guid? LogFid{ get;set; }		
				
		[DataMember]
		public string Werks{ get;set; }		
				
		[DataMember]
		public string Zcj{ get;set; }		
				
		[DataMember]
		public string Ktsch{ get;set; }		
				
		[DataMember]
		public string Aennr{ get;set; }		
				
		[DataMember]
		public string Matnr{ get;set; }		
				
		[DataMember]
		public string ChangeFlag{ get;set; }		
				
		[DataMember]
		public string Oidnrk{ get;set; }		
				
		[DataMember]
		public string Nidnrk{ get;set; }		
				
		[DataMember]
		public decimal? Menge{ get;set; }		
				
		[DataMember]
		public string Ebort{ get;set; }		
				
		[DataMember]
		public DateTime? Datuv{ get;set; }		
				
		[DataMember]
		public DateTime? Datub{ get;set; }		
				
		[DataMember]
		public string Sortf{ get;set; }		
				
		[DataMember]
		public int? ProcessFlag{ get;set; }		
				
		[DataMember]
		public DateTime? ProcessTime{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			SapBreakpointChangesInfo info = new SapBreakpointChangesInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.LogFid = this.LogFid;
			info.Werks = this.Werks;
			info.Zcj = this.Zcj;
			info.Ktsch = this.Ktsch;
			info.Aennr = this.Aennr;
			info.Matnr = this.Matnr;
			info.ChangeFlag = this.ChangeFlag;
			info.Oidnrk = this.Oidnrk;
			info.Nidnrk = this.Nidnrk;
			info.Menge = this.Menge;
			info.Ebort = this.Ebort;
			info.Datuv = this.Datuv;
			info.Datub = this.Datub;
			info.Sortf = this.Sortf;
			info.ProcessFlag = this.ProcessFlag;
			info.ProcessTime = this.ProcessTime;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			info.Comments = this.Comments;
			return info;			
		}
		 
		public SapBreakpointChangesInfo Clone()
		{
			return ((ICloneable) this).Clone() as SapBreakpointChangesInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// SapBreakpointChangesInfoCollection对应表[TI_IFM_SAP_BREAKPOINT_CHANGES]
    /// </summary>
	public partial class SapBreakpointChangesInfoCollection : BusinessObjectCollection<SapBreakpointChangesInfo>
	{
		public SapBreakpointChangesInfoCollection():base("TI_IFM_SAP_BREAKPOINT_CHANGES"){}	
	}
}
