#region Declaim
//---------------------------------------------------------------------------
// Name:		TrayInfoInfo
// Function: 	Expose data in table TrayInfo from database as business object to MES system.
// Tool:		T4
// CreateDate:	2017年12月22日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// TrayInfoInfo对应表[TT_SPM_TRAY_INFO]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class TrayInfoInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public TrayInfoInfo( 
					long aId,

					string aTrayNo,

					string aPlant,

					string aWmNo,

					string aZoneNo,

					string aDloc,

					string aBillNo,

					string aPartNo,

					string aPartCname,

					int aNum,

					int aBoxNum,

					DateTime aBindTime,

					int aTrayStatus,

					string aBatchNo,

					int aValidFlag,

					string aComments,

					string aCreateUser,

					DateTime aCreateDate,

					string aUpdateUser,

					DateTime aUpdateDate,

					string aFarbau,

					string aFarbin,

					string aModelYear,

					string aModel,

					string aZcolori,

					string aZcoloriD,

					string aTwdRunsheetNo,

					string aAssemblyLine,

					string aDmsno,

					string aRfidNo

				 
		) : this()
		{
			 
			Id = aId;
		 
			TrayNo = aTrayNo;
		 
			Plant = aPlant;
		 
			WmNo = aWmNo;
		 
			ZoneNo = aZoneNo;
		 
			Dloc = aDloc;
		 
			BillNo = aBillNo;
		 
			PartNo = aPartNo;
		 
			PartCname = aPartCname;
		 
			Num = aNum;
		 
			BoxNum = aBoxNum;
		 
			BindTime = aBindTime;
		 
			TrayStatus = aTrayStatus;
		 
			BatchNo = aBatchNo;
		 
			ValidFlag = aValidFlag;
		 
			Comments = aComments;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			UpdateUser = aUpdateUser;
		 
			UpdateDate = aUpdateDate;
		 
			Farbau = aFarbau;
		 
			Farbin = aFarbin;
		 
			ModelYear = aModelYear;
		 
			Model = aModel;
		 
			Zcolori = aZcolori;
		 
			ZcoloriD = aZcoloriD;
		 
			TwdRunsheetNo = aTwdRunsheetNo;
		 
			AssemblyLine = aAssemblyLine;
		 
			Dmsno = aDmsno;
		 
			RfidNo = aRfidNo;
		}
		
		public TrayInfoInfo():base("TT_SPM_TRAY_INFO")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                             _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField TRAY_NOField = new DataSchemaField();
			TRAY_NOField.Name = "TRAY_NO";
			TRAY_NOField.Type = typeof(string).ToString();
			TRAY_NOField.Index = 1;
			fields.Add(TRAY_NOField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 2;
			fields.Add(PLANTField);
			 
			DataSchemaField WM_NOField = new DataSchemaField();
			WM_NOField.Name = "WM_NO";
			WM_NOField.Type = typeof(string).ToString();
			WM_NOField.Index = 3;
			fields.Add(WM_NOField);
			 
			DataSchemaField ZONE_NOField = new DataSchemaField();
			ZONE_NOField.Name = "ZONE_NO";
			ZONE_NOField.Type = typeof(string).ToString();
			ZONE_NOField.Index = 4;
			fields.Add(ZONE_NOField);
			 
			DataSchemaField DLOCField = new DataSchemaField();
			DLOCField.Name = "DLOC";
			DLOCField.Type = typeof(string).ToString();
			DLOCField.Index = 5;
			fields.Add(DLOCField);
			 
			DataSchemaField BILL_NOField = new DataSchemaField();
			BILL_NOField.Name = "BILL_NO";
			BILL_NOField.Type = typeof(string).ToString();
			BILL_NOField.Index = 6;
			fields.Add(BILL_NOField);
			 
			DataSchemaField PART_NOField = new DataSchemaField();
			PART_NOField.Name = "PART_NO";
			PART_NOField.Type = typeof(string).ToString();
			PART_NOField.Index = 7;
			fields.Add(PART_NOField);
			 
			DataSchemaField PART_CNAMEField = new DataSchemaField();
			PART_CNAMEField.Name = "PART_CNAME";
			PART_CNAMEField.Type = typeof(string).ToString();
			PART_CNAMEField.Index = 8;
			fields.Add(PART_CNAMEField);
			 
			DataSchemaField NUMField = new DataSchemaField();
			NUMField.Name = "NUM";
			NUMField.Type = typeof(int).ToString();
			NUMField.Index = 9;
			fields.Add(NUMField);
			 
			DataSchemaField BOX_NUMField = new DataSchemaField();
			BOX_NUMField.Name = "BOX_NUM";
			BOX_NUMField.Type = typeof(int).ToString();
			BOX_NUMField.Index = 10;
			fields.Add(BOX_NUMField);
			 
			DataSchemaField BIND_TIMEField = new DataSchemaField();
			BIND_TIMEField.Name = "BIND_TIME";
			BIND_TIMEField.Type = typeof(DateTime).ToString();
			BIND_TIMEField.Index = 11;
			fields.Add(BIND_TIMEField);
			 
			DataSchemaField TRAY_STATUSField = new DataSchemaField();
			TRAY_STATUSField.Name = "TRAY_STATUS";
			TRAY_STATUSField.Type = typeof(int).ToString();
			TRAY_STATUSField.Index = 12;
			fields.Add(TRAY_STATUSField);
			 
			DataSchemaField BATCH_NOField = new DataSchemaField();
			BATCH_NOField.Name = "BATCH_NO";
			BATCH_NOField.Type = typeof(string).ToString();
			BATCH_NOField.Index = 13;
			fields.Add(BATCH_NOField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(int).ToString();
			VALID_FLAGField.Index = 14;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 15;
			fields.Add(COMMENTSField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 16;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 17;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField UPDATE_USERField = new DataSchemaField();
			UPDATE_USERField.Name = "UPDATE_USER";
			UPDATE_USERField.Type = typeof(string).ToString();
			UPDATE_USERField.Index = 18;
			fields.Add(UPDATE_USERField);
			 
			DataSchemaField UPDATE_DATEField = new DataSchemaField();
			UPDATE_DATEField.Name = "UPDATE_DATE";
			UPDATE_DATEField.Type = typeof(DateTime).ToString();
			UPDATE_DATEField.Index = 19;
			fields.Add(UPDATE_DATEField);
			 
			DataSchemaField FARBAUField = new DataSchemaField();
			FARBAUField.Name = "FARBAU";
			FARBAUField.Type = typeof(string).ToString();
			FARBAUField.Index = 20;
			fields.Add(FARBAUField);
			 
			DataSchemaField FARBINField = new DataSchemaField();
			FARBINField.Name = "FARBIN";
			FARBINField.Type = typeof(string).ToString();
			FARBINField.Index = 21;
			fields.Add(FARBINField);
			 
			DataSchemaField MODEL_YEARField = new DataSchemaField();
			MODEL_YEARField.Name = "MODEL_YEAR";
			MODEL_YEARField.Type = typeof(string).ToString();
			MODEL_YEARField.Index = 22;
			fields.Add(MODEL_YEARField);
			 
			DataSchemaField MODELField = new DataSchemaField();
			MODELField.Name = "MODEL";
			MODELField.Type = typeof(string).ToString();
			MODELField.Index = 23;
			fields.Add(MODELField);
			 
			DataSchemaField ZCOLORIField = new DataSchemaField();
			ZCOLORIField.Name = "ZCOLORI";
			ZCOLORIField.Type = typeof(string).ToString();
			ZCOLORIField.Index = 24;
			fields.Add(ZCOLORIField);
			 
			DataSchemaField ZCOLORI_DField = new DataSchemaField();
			ZCOLORI_DField.Name = "ZCOLORI_D";
			ZCOLORI_DField.Type = typeof(string).ToString();
			ZCOLORI_DField.Index = 25;
			fields.Add(ZCOLORI_DField);
			 
			DataSchemaField TWD_RUNSHEET_NOField = new DataSchemaField();
			TWD_RUNSHEET_NOField.Name = "TWD_RUNSHEET_NO";
			TWD_RUNSHEET_NOField.Type = typeof(string).ToString();
			TWD_RUNSHEET_NOField.Index = 26;
			fields.Add(TWD_RUNSHEET_NOField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 27;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField DMSNOField = new DataSchemaField();
			DMSNOField.Name = "DMSNO";
			DMSNOField.Type = typeof(string).ToString();
			DMSNOField.Index = 28;
			fields.Add(DMSNOField);
			 
			DataSchemaField RFID_NOField = new DataSchemaField();
			RFID_NOField.Name = "RFID_NO";
			RFID_NOField.Type = typeof(string).ToString();
			RFID_NOField.Index = 29;
			fields.Add(RFID_NOField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public string TrayNo{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string WmNo{ get;set; }		
				
		[DataMember]
		public string ZoneNo{ get;set; }		
				
		[DataMember]
		public string Dloc{ get;set; }		
				
		[DataMember]
		public string BillNo{ get;set; }		
				
		[DataMember]
		public string PartNo{ get;set; }		
				
		[DataMember]
		public string PartCname{ get;set; }		
				
		[DataMember]
		public int? Num{ get;set; }		
				
		[DataMember]
		public int? BoxNum{ get;set; }		
				
		[DataMember]
		public DateTime? BindTime{ get;set; }		
				
		[DataMember]
		public int TrayStatus{ get;set; }		
				
		[DataMember]
		public string BatchNo{ get;set; }		
				
				
		private int _ValidFlag = 1;
		
		[DataMember]	
		public int ValidFlag
		{
			get
			{
				return _ValidFlag;
			}
			set
			{
				_ValidFlag = value;
			}
		}
				
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
				
		private DateTime _CreateDate = new DateTime();
		
		[DataMember]	
		public DateTime CreateDate
		{
			get
			{
				return _CreateDate;
			}
			set
			{
				_CreateDate = value;
			}
		}
				
				
		[DataMember]
		public string UpdateUser{ get;set; }		
				
		[DataMember]
		public DateTime? UpdateDate{ get;set; }		
				
		[DataMember]
		public string Farbau{ get;set; }		
				
		[DataMember]
		public string Farbin{ get;set; }		
				
		[DataMember]
		public string ModelYear{ get;set; }		
				
		[DataMember]
		public string Model{ get;set; }		
				
		[DataMember]
		public string Zcolori{ get;set; }		
				
		[DataMember]
		public string ZcoloriD{ get;set; }		
				
		[DataMember]
		public string TwdRunsheetNo{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string Dmsno{ get;set; }		
				
		[DataMember]
		public string RfidNo{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			TrayInfoInfo info = new TrayInfoInfo();

			info.Id = this.Id;
			info.TrayNo = this.TrayNo;
			info.Plant = this.Plant;
			info.WmNo = this.WmNo;
			info.ZoneNo = this.ZoneNo;
			info.Dloc = this.Dloc;
			info.BillNo = this.BillNo;
			info.PartNo = this.PartNo;
			info.PartCname = this.PartCname;
			info.Num = this.Num;
			info.BoxNum = this.BoxNum;
			info.BindTime = this.BindTime;
			info.TrayStatus = this.TrayStatus;
			info.BatchNo = this.BatchNo;
			info.ValidFlag = this.ValidFlag;
			info.Comments = this.Comments;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.UpdateUser = this.UpdateUser;
			info.UpdateDate = this.UpdateDate;
			info.Farbau = this.Farbau;
			info.Farbin = this.Farbin;
			info.ModelYear = this.ModelYear;
			info.Model = this.Model;
			info.Zcolori = this.Zcolori;
			info.ZcoloriD = this.ZcoloriD;
			info.TwdRunsheetNo = this.TwdRunsheetNo;
			info.AssemblyLine = this.AssemblyLine;
			info.Dmsno = this.Dmsno;
			info.RfidNo = this.RfidNo;
			return info;			
		}
		 
		public TrayInfoInfo Clone()
		{
			return ((ICloneable) this).Clone() as TrayInfoInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// TrayInfoInfoCollection对应表[TT_SPM_TRAY_INFO]
    /// </summary>
	public partial class TrayInfoInfoCollection : BusinessObjectCollection<TrayInfoInfo>
	{
		public TrayInfoInfoCollection():base("TT_SPM_TRAY_INFO"){}	
	}
}
