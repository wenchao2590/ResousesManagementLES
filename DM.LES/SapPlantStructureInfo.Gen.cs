#region Declaim
//---------------------------------------------------------------------------
// Name:		SapPlantStructureInfo
// Function: 	Expose data in table SapPlantStructure from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月2日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// SapPlantStructureInfo对应表[TI_IFM_SAP_PLANT_STRUCTURE]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class SapPlantStructureInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public SapPlantStructureInfo( 
					long aId,

					Guid aFid,

					Guid aLogFid,

					string aWerks,

					string aName1,

					string aZbm,

					string aZbmms,

					string aZcj,

					string aZcjms,

					string aLineNo,

					string aLineNoms,

					string aVlsch,

					string aTxt,

					string aZsx,

					bool aValidFlag,

					int aProcessFlag,

					DateTime aProcessTime,

					string aCreateUser,

					DateTime aCreateDate,

					string aModifyUser,

					DateTime aModifyDate,

					string aComments

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			LogFid = aLogFid;
		 
			Werks = aWerks;
		 
			Name1 = aName1;
		 
			Zbm = aZbm;
		 
			Zbmms = aZbmms;
		 
			Zcj = aZcj;
		 
			Zcjms = aZcjms;
		 
			LineNo = aLineNo;
		 
			LineNoms = aLineNoms;
		 
			Vlsch = aVlsch;
		 
			Txt = aTxt;
		 
			Zsx = aZsx;
		 
			ValidFlag = aValidFlag;
		 
			ProcessFlag = aProcessFlag;
		 
			ProcessTime = aProcessTime;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		 
			Comments = aComments;
		}
		
		public SapPlantStructureInfo():base("TI_IFM_SAP_PLANT_STRUCTURE")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                     _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField LOG_FIDField = new DataSchemaField();
			LOG_FIDField.Name = "LOG_FID";
			LOG_FIDField.Type = typeof(Guid).ToString();
			LOG_FIDField.Index = 2;
			fields.Add(LOG_FIDField);
			 
			DataSchemaField WERKSField = new DataSchemaField();
			WERKSField.Name = "WERKS";
			WERKSField.Type = typeof(string).ToString();
			WERKSField.Index = 3;
			fields.Add(WERKSField);
			 
			DataSchemaField NAME1Field = new DataSchemaField();
			NAME1Field.Name = "NAME1";
			NAME1Field.Type = typeof(string).ToString();
			NAME1Field.Index = 4;
			fields.Add(NAME1Field);
			 
			DataSchemaField ZBMField = new DataSchemaField();
			ZBMField.Name = "ZBM";
			ZBMField.Type = typeof(string).ToString();
			ZBMField.Index = 5;
			fields.Add(ZBMField);
			 
			DataSchemaField ZBMMSField = new DataSchemaField();
			ZBMMSField.Name = "ZBMMS";
			ZBMMSField.Type = typeof(string).ToString();
			ZBMMSField.Index = 6;
			fields.Add(ZBMMSField);
			 
			DataSchemaField ZCJField = new DataSchemaField();
			ZCJField.Name = "ZCJ";
			ZCJField.Type = typeof(string).ToString();
			ZCJField.Index = 7;
			fields.Add(ZCJField);
			 
			DataSchemaField ZCJMSField = new DataSchemaField();
			ZCJMSField.Name = "ZCJMS";
			ZCJMSField.Type = typeof(string).ToString();
			ZCJMSField.Index = 8;
			fields.Add(ZCJMSField);
			 
			DataSchemaField LINE_NOField = new DataSchemaField();
			LINE_NOField.Name = "LINE_NO";
			LINE_NOField.Type = typeof(string).ToString();
			LINE_NOField.Index = 9;
			fields.Add(LINE_NOField);
			 
			DataSchemaField LINE_NOMSField = new DataSchemaField();
			LINE_NOMSField.Name = "LINE_NOMS";
			LINE_NOMSField.Type = typeof(string).ToString();
			LINE_NOMSField.Index = 10;
			fields.Add(LINE_NOMSField);
			 
			DataSchemaField VLSCHField = new DataSchemaField();
			VLSCHField.Name = "VLSCH";
			VLSCHField.Type = typeof(string).ToString();
			VLSCHField.Index = 11;
			fields.Add(VLSCHField);
			 
			DataSchemaField TXTField = new DataSchemaField();
			TXTField.Name = "TXT";
			TXTField.Type = typeof(string).ToString();
			TXTField.Index = 12;
			fields.Add(TXTField);
			 
			DataSchemaField ZSXField = new DataSchemaField();
			ZSXField.Name = "ZSX";
			ZSXField.Type = typeof(string).ToString();
			ZSXField.Index = 13;
			fields.Add(ZSXField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 14;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField PROCESS_FLAGField = new DataSchemaField();
			PROCESS_FLAGField.Name = "PROCESS_FLAG";
			PROCESS_FLAGField.Type = typeof(int).ToString();
			PROCESS_FLAGField.Index = 15;
			fields.Add(PROCESS_FLAGField);
			 
			DataSchemaField PROCESS_TIMEField = new DataSchemaField();
			PROCESS_TIMEField.Name = "PROCESS_TIME";
			PROCESS_TIMEField.Type = typeof(DateTime).ToString();
			PROCESS_TIMEField.Index = 16;
			fields.Add(PROCESS_TIMEField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 17;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 18;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 19;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 20;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 21;
			fields.Add(COMMENTSField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public Guid? LogFid{ get;set; }		
				
		[DataMember]
		public string Werks{ get;set; }		
				
		[DataMember]
		public string Name1{ get;set; }		
				
		[DataMember]
		public string Zbm{ get;set; }		
				
		[DataMember]
		public string Zbmms{ get;set; }		
				
		[DataMember]
		public string Zcj{ get;set; }		
				
		[DataMember]
		public string Zcjms{ get;set; }		
				
		[DataMember]
		public string LineNo{ get;set; }		
				
		[DataMember]
		public string LineNoms{ get;set; }		
				
		[DataMember]
		public string Vlsch{ get;set; }		
				
		[DataMember]
		public string Txt{ get;set; }		
				
		[DataMember]
		public string Zsx{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public int? ProcessFlag{ get;set; }		
				
		[DataMember]
		public DateTime? ProcessTime{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			SapPlantStructureInfo info = new SapPlantStructureInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.LogFid = this.LogFid;
			info.Werks = this.Werks;
			info.Name1 = this.Name1;
			info.Zbm = this.Zbm;
			info.Zbmms = this.Zbmms;
			info.Zcj = this.Zcj;
			info.Zcjms = this.Zcjms;
			info.LineNo = this.LineNo;
			info.LineNoms = this.LineNoms;
			info.Vlsch = this.Vlsch;
			info.Txt = this.Txt;
			info.Zsx = this.Zsx;
			info.ValidFlag = this.ValidFlag;
			info.ProcessFlag = this.ProcessFlag;
			info.ProcessTime = this.ProcessTime;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			info.Comments = this.Comments;
			return info;			
		}
		 
		public SapPlantStructureInfo Clone()
		{
			return ((ICloneable) this).Clone() as SapPlantStructureInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// SapPlantStructureInfoCollection对应表[TI_IFM_SAP_PLANT_STRUCTURE]
    /// </summary>
	public partial class SapPlantStructureInfoCollection : BusinessObjectCollection<SapPlantStructureInfo>
	{
		public SapPlantStructureInfoCollection():base("TI_IFM_SAP_PLANT_STRUCTURE"){}	
	}
}
