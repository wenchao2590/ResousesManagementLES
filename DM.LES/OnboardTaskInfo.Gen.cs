#region Declaim
//---------------------------------------------------------------------------
// Name:		OnboardTaskInfo
// Function: 	Expose data in table OnboardTask from database as business object to MES system.
// Tool:		T4
// CreateDate:	2017年12月22日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// OnboardTaskInfo对应表[TT_WMM_ONBOARD_TASK]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class OnboardTaskInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public OnboardTaskInfo( 
					string aTaskNo,

					long aEquipId,

					long aGroupId,

					int aTaskType,

					string aPartNo,

					string aPartCname,

					string aPartEname,

					int aBoxQty,

					string aRecommendTrayBarcode,

					string aRealTrayBarcode,

					decimal aPartQty,

					string aPlant,

					string aSourceWmNo,

					string aSourceZoneNo,

					string aRecommendSourceDloc,

					string aRealSourceDloc,

					string aTargetWmNo,

					string aTargetZoneNo,

					string aRecommendTargetDloc,

					string aRealTargetDloc,

					int aStatus,

					DateTime aAcceptedTime,

					DateTime aFinishedTime,

					string aDiffReason,

					string aRoute,

					bool aValidFlag,

					DateTime aModifyDate,

					long aId,

					DateTime aCreateDate,

					string aModifyUser,

					string aCreateUser

				 
		) : this()
		{
			 
			TaskNo = aTaskNo;
		 
			EquipId = aEquipId;
		 
			GroupId = aGroupId;
		 
			TaskType = aTaskType;
		 
			PartNo = aPartNo;
		 
			PartCname = aPartCname;
		 
			PartEname = aPartEname;
		 
			BoxQty = aBoxQty;
		 
			RecommendTrayBarcode = aRecommendTrayBarcode;
		 
			RealTrayBarcode = aRealTrayBarcode;
		 
			PartQty = aPartQty;
		 
			Plant = aPlant;
		 
			SourceWmNo = aSourceWmNo;
		 
			SourceZoneNo = aSourceZoneNo;
		 
			RecommendSourceDloc = aRecommendSourceDloc;
		 
			RealSourceDloc = aRealSourceDloc;
		 
			TargetWmNo = aTargetWmNo;
		 
			TargetZoneNo = aTargetZoneNo;
		 
			RecommendTargetDloc = aRecommendTargetDloc;
		 
			RealTargetDloc = aRealTargetDloc;
		 
			Status = aStatus;
		 
			AcceptedTime = aAcceptedTime;
		 
			FinishedTime = aFinishedTime;
		 
			DiffReason = aDiffReason;
		 
			Route = aRoute;
		 
			ValidFlag = aValidFlag;
		 
			ModifyDate = aModifyDate;
		 
			Id = aId;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			CreateUser = aCreateUser;
		}
		
		public OnboardTaskInfo():base("TT_WMM_ONBOARD_TASK")
		{
			List<string> keys = new List<string>();
			                            			keys.Add("ID");   _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField TASK_NOField = new DataSchemaField();
			TASK_NOField.Name = "TASK_NO";
			TASK_NOField.Type = typeof(string).ToString();
			TASK_NOField.Index = 0;
			fields.Add(TASK_NOField);
			 
			DataSchemaField EQUIP_IDField = new DataSchemaField();
			EQUIP_IDField.Name = "EQUIP_ID";
			EQUIP_IDField.Type = typeof(long).ToString();
			EQUIP_IDField.Index = 1;
			fields.Add(EQUIP_IDField);
			 
			DataSchemaField GROUP_IDField = new DataSchemaField();
			GROUP_IDField.Name = "GROUP_ID";
			GROUP_IDField.Type = typeof(long).ToString();
			GROUP_IDField.Index = 2;
			fields.Add(GROUP_IDField);
			 
			DataSchemaField TASK_TYPEField = new DataSchemaField();
			TASK_TYPEField.Name = "TASK_TYPE";
			TASK_TYPEField.Type = typeof(int).ToString();
			TASK_TYPEField.Index = 3;
			fields.Add(TASK_TYPEField);
			 
			DataSchemaField PART_NOField = new DataSchemaField();
			PART_NOField.Name = "PART_NO";
			PART_NOField.Type = typeof(string).ToString();
			PART_NOField.Index = 4;
			fields.Add(PART_NOField);
			 
			DataSchemaField PART_CNAMEField = new DataSchemaField();
			PART_CNAMEField.Name = "PART_CNAME";
			PART_CNAMEField.Type = typeof(string).ToString();
			PART_CNAMEField.Index = 5;
			fields.Add(PART_CNAMEField);
			 
			DataSchemaField PART_ENAMEField = new DataSchemaField();
			PART_ENAMEField.Name = "PART_ENAME";
			PART_ENAMEField.Type = typeof(string).ToString();
			PART_ENAMEField.Index = 6;
			fields.Add(PART_ENAMEField);
			 
			DataSchemaField BOX_QTYField = new DataSchemaField();
			BOX_QTYField.Name = "BOX_QTY";
			BOX_QTYField.Type = typeof(int).ToString();
			BOX_QTYField.Index = 7;
			fields.Add(BOX_QTYField);
			 
			DataSchemaField RECOMMEND_TRAY_BARCODEField = new DataSchemaField();
			RECOMMEND_TRAY_BARCODEField.Name = "RECOMMEND_TRAY_BARCODE";
			RECOMMEND_TRAY_BARCODEField.Type = typeof(string).ToString();
			RECOMMEND_TRAY_BARCODEField.Index = 8;
			fields.Add(RECOMMEND_TRAY_BARCODEField);
			 
			DataSchemaField REAL_TRAY_BARCODEField = new DataSchemaField();
			REAL_TRAY_BARCODEField.Name = "REAL_TRAY_BARCODE";
			REAL_TRAY_BARCODEField.Type = typeof(string).ToString();
			REAL_TRAY_BARCODEField.Index = 9;
			fields.Add(REAL_TRAY_BARCODEField);
			 
			DataSchemaField PART_QTYField = new DataSchemaField();
			PART_QTYField.Name = "PART_QTY";
			PART_QTYField.Type = typeof(decimal).ToString();
			PART_QTYField.Index = 10;
			fields.Add(PART_QTYField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 11;
			fields.Add(PLANTField);
			 
			DataSchemaField SOURCE_WM_NOField = new DataSchemaField();
			SOURCE_WM_NOField.Name = "SOURCE_WM_NO";
			SOURCE_WM_NOField.Type = typeof(string).ToString();
			SOURCE_WM_NOField.Index = 12;
			fields.Add(SOURCE_WM_NOField);
			 
			DataSchemaField SOURCE_ZONE_NOField = new DataSchemaField();
			SOURCE_ZONE_NOField.Name = "SOURCE_ZONE_NO";
			SOURCE_ZONE_NOField.Type = typeof(string).ToString();
			SOURCE_ZONE_NOField.Index = 13;
			fields.Add(SOURCE_ZONE_NOField);
			 
			DataSchemaField RECOMMEND_SOURCE_DLOCField = new DataSchemaField();
			RECOMMEND_SOURCE_DLOCField.Name = "RECOMMEND_SOURCE_DLOC";
			RECOMMEND_SOURCE_DLOCField.Type = typeof(string).ToString();
			RECOMMEND_SOURCE_DLOCField.Index = 14;
			fields.Add(RECOMMEND_SOURCE_DLOCField);
			 
			DataSchemaField REAL_SOURCE_DLOCField = new DataSchemaField();
			REAL_SOURCE_DLOCField.Name = "REAL_SOURCE_DLOC";
			REAL_SOURCE_DLOCField.Type = typeof(string).ToString();
			REAL_SOURCE_DLOCField.Index = 15;
			fields.Add(REAL_SOURCE_DLOCField);
			 
			DataSchemaField TARGET_WM_NOField = new DataSchemaField();
			TARGET_WM_NOField.Name = "TARGET_WM_NO";
			TARGET_WM_NOField.Type = typeof(string).ToString();
			TARGET_WM_NOField.Index = 16;
			fields.Add(TARGET_WM_NOField);
			 
			DataSchemaField TARGET_ZONE_NOField = new DataSchemaField();
			TARGET_ZONE_NOField.Name = "TARGET_ZONE_NO";
			TARGET_ZONE_NOField.Type = typeof(string).ToString();
			TARGET_ZONE_NOField.Index = 17;
			fields.Add(TARGET_ZONE_NOField);
			 
			DataSchemaField RECOMMEND_TARGET_DLOCField = new DataSchemaField();
			RECOMMEND_TARGET_DLOCField.Name = "RECOMMEND_TARGET_DLOC";
			RECOMMEND_TARGET_DLOCField.Type = typeof(string).ToString();
			RECOMMEND_TARGET_DLOCField.Index = 18;
			fields.Add(RECOMMEND_TARGET_DLOCField);
			 
			DataSchemaField REAL_TARGET_DLOCField = new DataSchemaField();
			REAL_TARGET_DLOCField.Name = "REAL_TARGET_DLOC";
			REAL_TARGET_DLOCField.Type = typeof(string).ToString();
			REAL_TARGET_DLOCField.Index = 19;
			fields.Add(REAL_TARGET_DLOCField);
			 
			DataSchemaField STATUSField = new DataSchemaField();
			STATUSField.Name = "STATUS";
			STATUSField.Type = typeof(int).ToString();
			STATUSField.Index = 20;
			fields.Add(STATUSField);
			 
			DataSchemaField ACCEPTED_TIMEField = new DataSchemaField();
			ACCEPTED_TIMEField.Name = "ACCEPTED_TIME";
			ACCEPTED_TIMEField.Type = typeof(DateTime).ToString();
			ACCEPTED_TIMEField.Index = 21;
			fields.Add(ACCEPTED_TIMEField);
			 
			DataSchemaField FINISHED_TIMEField = new DataSchemaField();
			FINISHED_TIMEField.Name = "FINISHED_TIME";
			FINISHED_TIMEField.Type = typeof(DateTime).ToString();
			FINISHED_TIMEField.Index = 22;
			fields.Add(FINISHED_TIMEField);
			 
			DataSchemaField DIFF_REASONField = new DataSchemaField();
			DIFF_REASONField.Name = "DIFF_REASON";
			DIFF_REASONField.Type = typeof(string).ToString();
			DIFF_REASONField.Index = 23;
			fields.Add(DIFF_REASONField);
			 
			DataSchemaField ROUTEField = new DataSchemaField();
			ROUTEField.Name = "ROUTE";
			ROUTEField.Type = typeof(string).ToString();
			ROUTEField.Index = 24;
			fields.Add(ROUTEField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 25;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 26;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 27;
			fields.Add(IDField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 28;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 29;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 30;
			fields.Add(CREATE_USERField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public string TaskNo{ get;set; }		
				
		[DataMember]
		public long? EquipId{ get;set; }		
				
		[DataMember]
		public long? GroupId{ get;set; }		
				
		[DataMember]
		public int? TaskType{ get;set; }		
				
		[DataMember]
		public string PartNo{ get;set; }		
				
		[DataMember]
		public string PartCname{ get;set; }		
				
		[DataMember]
		public string PartEname{ get;set; }		
				
		[DataMember]
		public int? BoxQty{ get;set; }		
				
		[DataMember]
		public string RecommendTrayBarcode{ get;set; }		
				
		[DataMember]
		public string RealTrayBarcode{ get;set; }		
				
		[DataMember]
		public decimal? PartQty{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string SourceWmNo{ get;set; }		
				
		[DataMember]
		public string SourceZoneNo{ get;set; }		
				
		[DataMember]
		public string RecommendSourceDloc{ get;set; }		
				
		[DataMember]
		public string RealSourceDloc{ get;set; }		
				
		[DataMember]
		public string TargetWmNo{ get;set; }		
				
		[DataMember]
		public string TargetZoneNo{ get;set; }		
				
		[DataMember]
		public string RecommendTargetDloc{ get;set; }		
				
		[DataMember]
		public string RealTargetDloc{ get;set; }		
				
		[DataMember]
		public int? Status{ get;set; }		
				
		[DataMember]
		public DateTime? AcceptedTime{ get;set; }		
				
		[DataMember]
		public DateTime? FinishedTime{ get;set; }		
				
		[DataMember]
		public string DiffReason{ get;set; }		
				
		[DataMember]
		public string Route{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			OnboardTaskInfo info = new OnboardTaskInfo();

			info.TaskNo = this.TaskNo;
			info.EquipId = this.EquipId;
			info.GroupId = this.GroupId;
			info.TaskType = this.TaskType;
			info.PartNo = this.PartNo;
			info.PartCname = this.PartCname;
			info.PartEname = this.PartEname;
			info.BoxQty = this.BoxQty;
			info.RecommendTrayBarcode = this.RecommendTrayBarcode;
			info.RealTrayBarcode = this.RealTrayBarcode;
			info.PartQty = this.PartQty;
			info.Plant = this.Plant;
			info.SourceWmNo = this.SourceWmNo;
			info.SourceZoneNo = this.SourceZoneNo;
			info.RecommendSourceDloc = this.RecommendSourceDloc;
			info.RealSourceDloc = this.RealSourceDloc;
			info.TargetWmNo = this.TargetWmNo;
			info.TargetZoneNo = this.TargetZoneNo;
			info.RecommendTargetDloc = this.RecommendTargetDloc;
			info.RealTargetDloc = this.RealTargetDloc;
			info.Status = this.Status;
			info.AcceptedTime = this.AcceptedTime;
			info.FinishedTime = this.FinishedTime;
			info.DiffReason = this.DiffReason;
			info.Route = this.Route;
			info.ValidFlag = this.ValidFlag;
			info.ModifyDate = this.ModifyDate;
			info.Id = this.Id;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.CreateUser = this.CreateUser;
			return info;			
		}
		 
		public OnboardTaskInfo Clone()
		{
			return ((ICloneable) this).Clone() as OnboardTaskInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// OnboardTaskInfoCollection对应表[TT_WMM_ONBOARD_TASK]
    /// </summary>
	public partial class OnboardTaskInfoCollection : BusinessObjectCollection<OnboardTaskInfo>
	{
		public OnboardTaskInfoCollection():base("TT_WMM_ONBOARD_TASK"){}	
	}
}
