#region Declaim
//---------------------------------------------------------------------------
// Name:		ReturnInfo
// Function: 	Expose data in table Return from database as business object to MES system.
// Tool:		T4
// CreateDate:	2017年12月20日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// ReturnInfo对应表[TT_WMM_RETURN]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class ReturnInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public ReturnInfo( 
					int aReturnId,

					string aReturnNo,

					string aPlant,

					string aSupplierNum,

					string aWmNo,

					string aZoneNo,

					int aReturnType,

					DateTime aSendTime,

					DateTime aTranTime,

					string aBookKeeper,

					int aConfirmFlag,

					string aAssemblyLine,

					string aPlantZone,

					string aWorkshop,

					string aTransSupplierNum,

					string aRunsheetCode,

					int aErpFlag,

					string aLogicalPk,

					string aBusinessPk,

					int aPartType,

					int aSupplierType,

					string aReturnReason,

					string aComments,

					DateTime aCreateDate,

					string aCreateUser,

					DateTime aUpdateDate,

					string aUpdateUser

				 
		) : this()
		{
			 
			ReturnId = aReturnId;
		 
			ReturnNo = aReturnNo;
		 
			Plant = aPlant;
		 
			SupplierNum = aSupplierNum;
		 
			WmNo = aWmNo;
		 
			ZoneNo = aZoneNo;
		 
			ReturnType = aReturnType;
		 
			SendTime = aSendTime;
		 
			TranTime = aTranTime;
		 
			BookKeeper = aBookKeeper;
		 
			ConfirmFlag = aConfirmFlag;
		 
			AssemblyLine = aAssemblyLine;
		 
			PlantZone = aPlantZone;
		 
			Workshop = aWorkshop;
		 
			TransSupplierNum = aTransSupplierNum;
		 
			RunsheetCode = aRunsheetCode;
		 
			ErpFlag = aErpFlag;
		 
			LogicalPk = aLogicalPk;
		 
			BusinessPk = aBusinessPk;
		 
			PartType = aPartType;
		 
			SupplierType = aSupplierType;
		 
			ReturnReason = aReturnReason;
		 
			Comments = aComments;
		 
			CreateDate = aCreateDate;
		 
			CreateUser = aCreateUser;
		 
			UpdateDate = aUpdateDate;
		 
			UpdateUser = aUpdateUser;
		}
		
		public ReturnInfo():base("TT_WMM_RETURN")
		{
			List<string> keys = new List<string>();
			 			keys.Add("RETURN_ID");                          _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField RETURN_IDField = new DataSchemaField();
			RETURN_IDField.Name = "RETURN_ID";
			RETURN_IDField.Type = typeof(int).ToString();
			RETURN_IDField.Index = 0;
			fields.Add(RETURN_IDField);
			 
			DataSchemaField RETURN_NOField = new DataSchemaField();
			RETURN_NOField.Name = "RETURN_NO";
			RETURN_NOField.Type = typeof(string).ToString();
			RETURN_NOField.Index = 1;
			fields.Add(RETURN_NOField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 2;
			fields.Add(PLANTField);
			 
			DataSchemaField SUPPLIER_NUMField = new DataSchemaField();
			SUPPLIER_NUMField.Name = "SUPPLIER_NUM";
			SUPPLIER_NUMField.Type = typeof(string).ToString();
			SUPPLIER_NUMField.Index = 3;
			fields.Add(SUPPLIER_NUMField);
			 
			DataSchemaField WM_NOField = new DataSchemaField();
			WM_NOField.Name = "WM_NO";
			WM_NOField.Type = typeof(string).ToString();
			WM_NOField.Index = 4;
			fields.Add(WM_NOField);
			 
			DataSchemaField ZONE_NOField = new DataSchemaField();
			ZONE_NOField.Name = "ZONE_NO";
			ZONE_NOField.Type = typeof(string).ToString();
			ZONE_NOField.Index = 5;
			fields.Add(ZONE_NOField);
			 
			DataSchemaField RETURN_TYPEField = new DataSchemaField();
			RETURN_TYPEField.Name = "RETURN_TYPE";
			RETURN_TYPEField.Type = typeof(int).ToString();
			RETURN_TYPEField.Index = 6;
			fields.Add(RETURN_TYPEField);
			 
			DataSchemaField SEND_TIMEField = new DataSchemaField();
			SEND_TIMEField.Name = "SEND_TIME";
			SEND_TIMEField.Type = typeof(DateTime).ToString();
			SEND_TIMEField.Index = 7;
			fields.Add(SEND_TIMEField);
			 
			DataSchemaField TRAN_TIMEField = new DataSchemaField();
			TRAN_TIMEField.Name = "TRAN_TIME";
			TRAN_TIMEField.Type = typeof(DateTime).ToString();
			TRAN_TIMEField.Index = 8;
			fields.Add(TRAN_TIMEField);
			 
			DataSchemaField BOOK_KEEPERField = new DataSchemaField();
			BOOK_KEEPERField.Name = "BOOK_KEEPER";
			BOOK_KEEPERField.Type = typeof(string).ToString();
			BOOK_KEEPERField.Index = 9;
			fields.Add(BOOK_KEEPERField);
			 
			DataSchemaField CONFIRM_FLAGField = new DataSchemaField();
			CONFIRM_FLAGField.Name = "CONFIRM_FLAG";
			CONFIRM_FLAGField.Type = typeof(int).ToString();
			CONFIRM_FLAGField.Index = 10;
			fields.Add(CONFIRM_FLAGField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 11;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField PLANT_ZONEField = new DataSchemaField();
			PLANT_ZONEField.Name = "PLANT_ZONE";
			PLANT_ZONEField.Type = typeof(string).ToString();
			PLANT_ZONEField.Index = 12;
			fields.Add(PLANT_ZONEField);
			 
			DataSchemaField WORKSHOPField = new DataSchemaField();
			WORKSHOPField.Name = "WORKSHOP";
			WORKSHOPField.Type = typeof(string).ToString();
			WORKSHOPField.Index = 13;
			fields.Add(WORKSHOPField);
			 
			DataSchemaField TRANS_SUPPLIER_NUMField = new DataSchemaField();
			TRANS_SUPPLIER_NUMField.Name = "TRANS_SUPPLIER_NUM";
			TRANS_SUPPLIER_NUMField.Type = typeof(string).ToString();
			TRANS_SUPPLIER_NUMField.Index = 14;
			fields.Add(TRANS_SUPPLIER_NUMField);
			 
			DataSchemaField RUNSHEET_CODEField = new DataSchemaField();
			RUNSHEET_CODEField.Name = "RUNSHEET_CODE";
			RUNSHEET_CODEField.Type = typeof(string).ToString();
			RUNSHEET_CODEField.Index = 15;
			fields.Add(RUNSHEET_CODEField);
			 
			DataSchemaField ERP_FLAGField = new DataSchemaField();
			ERP_FLAGField.Name = "ERP_FLAG";
			ERP_FLAGField.Type = typeof(int).ToString();
			ERP_FLAGField.Index = 16;
			fields.Add(ERP_FLAGField);
			 
			DataSchemaField LOGICAL_PKField = new DataSchemaField();
			LOGICAL_PKField.Name = "LOGICAL_PK";
			LOGICAL_PKField.Type = typeof(string).ToString();
			LOGICAL_PKField.Index = 17;
			fields.Add(LOGICAL_PKField);
			 
			DataSchemaField BUSINESS_PKField = new DataSchemaField();
			BUSINESS_PKField.Name = "BUSINESS_PK";
			BUSINESS_PKField.Type = typeof(string).ToString();
			BUSINESS_PKField.Index = 18;
			fields.Add(BUSINESS_PKField);
			 
			DataSchemaField PART_TYPEField = new DataSchemaField();
			PART_TYPEField.Name = "PART_TYPE";
			PART_TYPEField.Type = typeof(int).ToString();
			PART_TYPEField.Index = 19;
			fields.Add(PART_TYPEField);
			 
			DataSchemaField SUPPLIER_TYPEField = new DataSchemaField();
			SUPPLIER_TYPEField.Name = "SUPPLIER_TYPE";
			SUPPLIER_TYPEField.Type = typeof(int).ToString();
			SUPPLIER_TYPEField.Index = 20;
			fields.Add(SUPPLIER_TYPEField);
			 
			DataSchemaField RETURN_REASONField = new DataSchemaField();
			RETURN_REASONField.Name = "RETURN_REASON";
			RETURN_REASONField.Type = typeof(string).ToString();
			RETURN_REASONField.Index = 21;
			fields.Add(RETURN_REASONField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 22;
			fields.Add(COMMENTSField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 23;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 24;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField UPDATE_DATEField = new DataSchemaField();
			UPDATE_DATEField.Name = "UPDATE_DATE";
			UPDATE_DATEField.Type = typeof(DateTime).ToString();
			UPDATE_DATEField.Index = 25;
			fields.Add(UPDATE_DATEField);
			 
			DataSchemaField UPDATE_USERField = new DataSchemaField();
			UPDATE_USERField.Name = "UPDATE_USER";
			UPDATE_USERField.Type = typeof(string).ToString();
			UPDATE_USERField.Index = 26;
			fields.Add(UPDATE_USERField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public int ReturnId{ get;set; }		
				
		[DataMember]
		public string ReturnNo{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string SupplierNum{ get;set; }		
				
		[DataMember]
		public string WmNo{ get;set; }		
				
		[DataMember]
		public string ZoneNo{ get;set; }		
				
		[DataMember]
		public int? ReturnType{ get;set; }		
				
		[DataMember]
		public DateTime? SendTime{ get;set; }		
				
		[DataMember]
		public DateTime? TranTime{ get;set; }		
				
		[DataMember]
		public string BookKeeper{ get;set; }		
				
		[DataMember]
		public int? ConfirmFlag{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string PlantZone{ get;set; }		
				
		[DataMember]
		public string Workshop{ get;set; }		
				
		[DataMember]
		public string TransSupplierNum{ get;set; }		
				
		[DataMember]
		public string RunsheetCode{ get;set; }		
				
		[DataMember]
		public int? ErpFlag{ get;set; }		
				
		[DataMember]
		public string LogicalPk{ get;set; }		
				
		[DataMember]
		public string BusinessPk{ get;set; }		
				
		[DataMember]
		public int? PartType{ get;set; }		
				
		[DataMember]
		public int? SupplierType{ get;set; }		
				
		[DataMember]
		public string ReturnReason{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? UpdateDate{ get;set; }		
				
		[DataMember]
		public string UpdateUser{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			ReturnInfo info = new ReturnInfo();

			info.ReturnId = this.ReturnId;
			info.ReturnNo = this.ReturnNo;
			info.Plant = this.Plant;
			info.SupplierNum = this.SupplierNum;
			info.WmNo = this.WmNo;
			info.ZoneNo = this.ZoneNo;
			info.ReturnType = this.ReturnType;
			info.SendTime = this.SendTime;
			info.TranTime = this.TranTime;
			info.BookKeeper = this.BookKeeper;
			info.ConfirmFlag = this.ConfirmFlag;
			info.AssemblyLine = this.AssemblyLine;
			info.PlantZone = this.PlantZone;
			info.Workshop = this.Workshop;
			info.TransSupplierNum = this.TransSupplierNum;
			info.RunsheetCode = this.RunsheetCode;
			info.ErpFlag = this.ErpFlag;
			info.LogicalPk = this.LogicalPk;
			info.BusinessPk = this.BusinessPk;
			info.PartType = this.PartType;
			info.SupplierType = this.SupplierType;
			info.ReturnReason = this.ReturnReason;
			info.Comments = this.Comments;
			info.CreateDate = this.CreateDate;
			info.CreateUser = this.CreateUser;
			info.UpdateDate = this.UpdateDate;
			info.UpdateUser = this.UpdateUser;
			return info;			
		}
		 
		public ReturnInfo Clone()
		{
			return ((ICloneable) this).Clone() as ReturnInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// ReturnInfoCollection对应表[TT_WMM_RETURN]
    /// </summary>
	public partial class ReturnInfoCollection : BusinessObjectCollection<ReturnInfo>
	{
		public ReturnInfoCollection():base("TT_WMM_RETURN"){}	
	}
}
