#region Declaim
//---------------------------------------------------------------------------
// Name:		CounterInfo
// Function: 	Expose data in table Counter from database as business object to MES system.
// Tool:		T4
// CreateDate:	2017年12月20日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// CounterInfo对应表[TT_PCS_COUNTER]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class CounterInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public CounterInfo( 
					int aInhouseIdentity,

					string aPlant,

					string aAssemblyLine,

					string aPlantZone,

					string aWorkshop,

					string aSupplierNum,

					string aModel,

					string aPartNo,

					string aIndentifyPartNo,

					int aAmountratio,

					string aColorControlPatch,

					string aMeasuringUnitNo,

					string aPartCname,

					string aPartEname,

					string aWorkshopSection,

					string aLocation,

					string aInPlantLogisticPartClass,

					string aInhousePartClass,

					string aDock,

					string aInhousePackageModel,

					int aInhousePackage,

					string aInboundPackageModel,

					int aInboundPackage,

					decimal aCurrentPartCount,

					string aComments,

					DateTime aUpdateDate,

					string aUpdateUser,

					DateTime aCreateDate,

					string aCreateUser,

					decimal aEmptyPartCount

				 
		) : this()
		{
			 
			InhouseIdentity = aInhouseIdentity;
		 
			Plant = aPlant;
		 
			AssemblyLine = aAssemblyLine;
		 
			PlantZone = aPlantZone;
		 
			Workshop = aWorkshop;
		 
			SupplierNum = aSupplierNum;
		 
			Model = aModel;
		 
			PartNo = aPartNo;
		 
			IndentifyPartNo = aIndentifyPartNo;
		 
			Amountratio = aAmountratio;
		 
			ColorControlPatch = aColorControlPatch;
		 
			MeasuringUnitNo = aMeasuringUnitNo;
		 
			PartCname = aPartCname;
		 
			PartEname = aPartEname;
		 
			WorkshopSection = aWorkshopSection;
		 
			Location = aLocation;
		 
			InPlantLogisticPartClass = aInPlantLogisticPartClass;
		 
			InhousePartClass = aInhousePartClass;
		 
			Dock = aDock;
		 
			InhousePackageModel = aInhousePackageModel;
		 
			InhousePackage = aInhousePackage;
		 
			InboundPackageModel = aInboundPackageModel;
		 
			InboundPackage = aInboundPackage;
		 
			CurrentPartCount = aCurrentPartCount;
		 
			Comments = aComments;
		 
			UpdateDate = aUpdateDate;
		 
			UpdateUser = aUpdateUser;
		 
			CreateDate = aCreateDate;
		 
			CreateUser = aCreateUser;
		 
			EmptyPartCount = aEmptyPartCount;
		}
		
		public CounterInfo():base("TT_PCS_COUNTER")
		{
			List<string> keys = new List<string>();
			 			keys.Add("INHOUSE_IDENTITY");                             _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField INHOUSE_IDENTITYField = new DataSchemaField();
			INHOUSE_IDENTITYField.Name = "INHOUSE_IDENTITY";
			INHOUSE_IDENTITYField.Type = typeof(int).ToString();
			INHOUSE_IDENTITYField.Index = 0;
			fields.Add(INHOUSE_IDENTITYField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 1;
			fields.Add(PLANTField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 2;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField PLANT_ZONEField = new DataSchemaField();
			PLANT_ZONEField.Name = "PLANT_ZONE";
			PLANT_ZONEField.Type = typeof(string).ToString();
			PLANT_ZONEField.Index = 3;
			fields.Add(PLANT_ZONEField);
			 
			DataSchemaField WORKSHOPField = new DataSchemaField();
			WORKSHOPField.Name = "WORKSHOP";
			WORKSHOPField.Type = typeof(string).ToString();
			WORKSHOPField.Index = 4;
			fields.Add(WORKSHOPField);
			 
			DataSchemaField SUPPLIER_NUMField = new DataSchemaField();
			SUPPLIER_NUMField.Name = "SUPPLIER_NUM";
			SUPPLIER_NUMField.Type = typeof(string).ToString();
			SUPPLIER_NUMField.Index = 5;
			fields.Add(SUPPLIER_NUMField);
			 
			DataSchemaField MODELField = new DataSchemaField();
			MODELField.Name = "MODEL";
			MODELField.Type = typeof(string).ToString();
			MODELField.Index = 6;
			fields.Add(MODELField);
			 
			DataSchemaField PART_NOField = new DataSchemaField();
			PART_NOField.Name = "PART_NO";
			PART_NOField.Type = typeof(string).ToString();
			PART_NOField.Index = 7;
			fields.Add(PART_NOField);
			 
			DataSchemaField INDENTIFY_PART_NOField = new DataSchemaField();
			INDENTIFY_PART_NOField.Name = "INDENTIFY_PART_NO";
			INDENTIFY_PART_NOField.Type = typeof(string).ToString();
			INDENTIFY_PART_NOField.Index = 8;
			fields.Add(INDENTIFY_PART_NOField);
			 
			DataSchemaField AMOUNTRATIOField = new DataSchemaField();
			AMOUNTRATIOField.Name = "AMOUNTRATIO";
			AMOUNTRATIOField.Type = typeof(int).ToString();
			AMOUNTRATIOField.Index = 9;
			fields.Add(AMOUNTRATIOField);
			 
			DataSchemaField COLOR_CONTROL_PATCHField = new DataSchemaField();
			COLOR_CONTROL_PATCHField.Name = "COLOR_CONTROL_PATCH";
			COLOR_CONTROL_PATCHField.Type = typeof(string).ToString();
			COLOR_CONTROL_PATCHField.Index = 10;
			fields.Add(COLOR_CONTROL_PATCHField);
			 
			DataSchemaField MEASURING_UNIT_NOField = new DataSchemaField();
			MEASURING_UNIT_NOField.Name = "MEASURING_UNIT_NO";
			MEASURING_UNIT_NOField.Type = typeof(string).ToString();
			MEASURING_UNIT_NOField.Index = 11;
			fields.Add(MEASURING_UNIT_NOField);
			 
			DataSchemaField PART_CNAMEField = new DataSchemaField();
			PART_CNAMEField.Name = "PART_CNAME";
			PART_CNAMEField.Type = typeof(string).ToString();
			PART_CNAMEField.Index = 12;
			fields.Add(PART_CNAMEField);
			 
			DataSchemaField PART_ENAMEField = new DataSchemaField();
			PART_ENAMEField.Name = "PART_ENAME";
			PART_ENAMEField.Type = typeof(string).ToString();
			PART_ENAMEField.Index = 13;
			fields.Add(PART_ENAMEField);
			 
			DataSchemaField WORKSHOP_SECTIONField = new DataSchemaField();
			WORKSHOP_SECTIONField.Name = "WORKSHOP_SECTION";
			WORKSHOP_SECTIONField.Type = typeof(string).ToString();
			WORKSHOP_SECTIONField.Index = 14;
			fields.Add(WORKSHOP_SECTIONField);
			 
			DataSchemaField LOCATIONField = new DataSchemaField();
			LOCATIONField.Name = "LOCATION";
			LOCATIONField.Type = typeof(string).ToString();
			LOCATIONField.Index = 15;
			fields.Add(LOCATIONField);
			 
			DataSchemaField IN_PLANT_LOGISTIC_PART_CLASSField = new DataSchemaField();
			IN_PLANT_LOGISTIC_PART_CLASSField.Name = "IN_PLANT_LOGISTIC_PART_CLASS";
			IN_PLANT_LOGISTIC_PART_CLASSField.Type = typeof(string).ToString();
			IN_PLANT_LOGISTIC_PART_CLASSField.Index = 16;
			fields.Add(IN_PLANT_LOGISTIC_PART_CLASSField);
			 
			DataSchemaField INHOUSE_PART_CLASSField = new DataSchemaField();
			INHOUSE_PART_CLASSField.Name = "INHOUSE_PART_CLASS";
			INHOUSE_PART_CLASSField.Type = typeof(string).ToString();
			INHOUSE_PART_CLASSField.Index = 17;
			fields.Add(INHOUSE_PART_CLASSField);
			 
			DataSchemaField DOCKField = new DataSchemaField();
			DOCKField.Name = "DOCK";
			DOCKField.Type = typeof(string).ToString();
			DOCKField.Index = 18;
			fields.Add(DOCKField);
			 
			DataSchemaField INHOUSE_PACKAGE_MODELField = new DataSchemaField();
			INHOUSE_PACKAGE_MODELField.Name = "INHOUSE_PACKAGE_MODEL";
			INHOUSE_PACKAGE_MODELField.Type = typeof(string).ToString();
			INHOUSE_PACKAGE_MODELField.Index = 19;
			fields.Add(INHOUSE_PACKAGE_MODELField);
			 
			DataSchemaField INHOUSE_PACKAGEField = new DataSchemaField();
			INHOUSE_PACKAGEField.Name = "INHOUSE_PACKAGE";
			INHOUSE_PACKAGEField.Type = typeof(int).ToString();
			INHOUSE_PACKAGEField.Index = 20;
			fields.Add(INHOUSE_PACKAGEField);
			 
			DataSchemaField INBOUND_PACKAGE_MODELField = new DataSchemaField();
			INBOUND_PACKAGE_MODELField.Name = "INBOUND_PACKAGE_MODEL";
			INBOUND_PACKAGE_MODELField.Type = typeof(string).ToString();
			INBOUND_PACKAGE_MODELField.Index = 21;
			fields.Add(INBOUND_PACKAGE_MODELField);
			 
			DataSchemaField INBOUND_PACKAGEField = new DataSchemaField();
			INBOUND_PACKAGEField.Name = "INBOUND_PACKAGE";
			INBOUND_PACKAGEField.Type = typeof(int).ToString();
			INBOUND_PACKAGEField.Index = 22;
			fields.Add(INBOUND_PACKAGEField);
			 
			DataSchemaField CURRENT_PART_COUNTField = new DataSchemaField();
			CURRENT_PART_COUNTField.Name = "CURRENT_PART_COUNT";
			CURRENT_PART_COUNTField.Type = typeof(decimal).ToString();
			CURRENT_PART_COUNTField.Index = 23;
			fields.Add(CURRENT_PART_COUNTField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 24;
			fields.Add(COMMENTSField);
			 
			DataSchemaField UPDATE_DATEField = new DataSchemaField();
			UPDATE_DATEField.Name = "UPDATE_DATE";
			UPDATE_DATEField.Type = typeof(DateTime).ToString();
			UPDATE_DATEField.Index = 25;
			fields.Add(UPDATE_DATEField);
			 
			DataSchemaField UPDATE_USERField = new DataSchemaField();
			UPDATE_USERField.Name = "UPDATE_USER";
			UPDATE_USERField.Type = typeof(string).ToString();
			UPDATE_USERField.Index = 26;
			fields.Add(UPDATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 27;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 28;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField EMPTY_PART_COUNTField = new DataSchemaField();
			EMPTY_PART_COUNTField.Name = "EMPTY_PART_COUNT";
			EMPTY_PART_COUNTField.Type = typeof(decimal).ToString();
			EMPTY_PART_COUNTField.Index = 29;
			fields.Add(EMPTY_PART_COUNTField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public int InhouseIdentity{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string PlantZone{ get;set; }		
				
		[DataMember]
		public string Workshop{ get;set; }		
				
		[DataMember]
		public string SupplierNum{ get;set; }		
				
		[DataMember]
		public string Model{ get;set; }		
				
		[DataMember]
		public string PartNo{ get;set; }		
				
		[DataMember]
		public string IndentifyPartNo{ get;set; }		
				
		[DataMember]
		public int? Amountratio{ get;set; }		
				
		[DataMember]
		public string ColorControlPatch{ get;set; }		
				
		[DataMember]
		public string MeasuringUnitNo{ get;set; }		
				
		[DataMember]
		public string PartCname{ get;set; }		
				
		[DataMember]
		public string PartEname{ get;set; }		
				
		[DataMember]
		public string WorkshopSection{ get;set; }		
				
		[DataMember]
		public string Location{ get;set; }		
				
		[DataMember]
		public string InPlantLogisticPartClass{ get;set; }		
				
		[DataMember]
		public string InhousePartClass{ get;set; }		
				
		[DataMember]
		public string Dock{ get;set; }		
				
		[DataMember]
		public string InhousePackageModel{ get;set; }		
				
		[DataMember]
		public int? InhousePackage{ get;set; }		
				
		[DataMember]
		public string InboundPackageModel{ get;set; }		
				
		[DataMember]
		public int? InboundPackage{ get;set; }		
				
		[DataMember]
		public decimal? CurrentPartCount{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public DateTime? UpdateDate{ get;set; }		
				
		[DataMember]
		public string UpdateUser{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public decimal? EmptyPartCount{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			CounterInfo info = new CounterInfo();

			info.InhouseIdentity = this.InhouseIdentity;
			info.Plant = this.Plant;
			info.AssemblyLine = this.AssemblyLine;
			info.PlantZone = this.PlantZone;
			info.Workshop = this.Workshop;
			info.SupplierNum = this.SupplierNum;
			info.Model = this.Model;
			info.PartNo = this.PartNo;
			info.IndentifyPartNo = this.IndentifyPartNo;
			info.Amountratio = this.Amountratio;
			info.ColorControlPatch = this.ColorControlPatch;
			info.MeasuringUnitNo = this.MeasuringUnitNo;
			info.PartCname = this.PartCname;
			info.PartEname = this.PartEname;
			info.WorkshopSection = this.WorkshopSection;
			info.Location = this.Location;
			info.InPlantLogisticPartClass = this.InPlantLogisticPartClass;
			info.InhousePartClass = this.InhousePartClass;
			info.Dock = this.Dock;
			info.InhousePackageModel = this.InhousePackageModel;
			info.InhousePackage = this.InhousePackage;
			info.InboundPackageModel = this.InboundPackageModel;
			info.InboundPackage = this.InboundPackage;
			info.CurrentPartCount = this.CurrentPartCount;
			info.Comments = this.Comments;
			info.UpdateDate = this.UpdateDate;
			info.UpdateUser = this.UpdateUser;
			info.CreateDate = this.CreateDate;
			info.CreateUser = this.CreateUser;
			info.EmptyPartCount = this.EmptyPartCount;
			return info;			
		}
		 
		public CounterInfo Clone()
		{
			return ((ICloneable) this).Clone() as CounterInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// CounterInfoCollection对应表[TT_PCS_COUNTER]
    /// </summary>
	public partial class CounterInfoCollection : BusinessObjectCollection<CounterInfo>
	{
		public CounterInfoCollection():base("TT_PCS_COUNTER"){}	
	}
}
