#region Declaim
//---------------------------------------------------------------------------
// Name:		OutputInfo
// Function: 	Expose data in table Output from database as business object to MES system.
// Tool:		T4
// CreateDate:	2020年5月28日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// OutputInfo对应表[TT_WMM_OUTPUT]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class OutputInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public OutputInfo( 
					long aOutputId,

					string aOutputNo,

					string aPlant,

					string aSupplierNum,

					string aWmNo,

					string aZoneNo,

					DateTime aSendTime,

					int aOutputType,

					DateTime aTranTime,

					string aOutputReason,

					string aBookKeeper,

					int aConfirmFlag,

					string aPlanNo,

					string aAsnNo,

					string aRunsheetNo,

					string aAssemblyLine,

					string aPlantZone,

					string aWorkshop,

					string aTransSupplierNum,

					int aPartType,

					int aSupplierType,

					string aRunsheetCode,

					int aErpFlag,

					string aLogicalPk,

					string aBusinessPk,

					string aComments,

					DateTime aUpdateDate,

					string aUpdateUser,

					DateTime aCreateDate,

					string aCreateUser,

					string aRoute,

					DateTime aRequestTime,

					int aPtlFlag,

					DateTime aPtlTime,

					Guid aFid

				 
		) : this()
		{
			 
			OutputId = aOutputId;
		 
			OutputNo = aOutputNo;
		 
			Plant = aPlant;
		 
			SupplierNum = aSupplierNum;
		 
			WmNo = aWmNo;
		 
			ZoneNo = aZoneNo;
		 
			SendTime = aSendTime;
		 
			OutputType = aOutputType;
		 
			TranTime = aTranTime;
		 
			OutputReason = aOutputReason;
		 
			BookKeeper = aBookKeeper;
		 
			ConfirmFlag = aConfirmFlag;
		 
			PlanNo = aPlanNo;
		 
			AsnNo = aAsnNo;
		 
			RunsheetNo = aRunsheetNo;
		 
			AssemblyLine = aAssemblyLine;
		 
			PlantZone = aPlantZone;
		 
			Workshop = aWorkshop;
		 
			TransSupplierNum = aTransSupplierNum;
		 
			PartType = aPartType;
		 
			SupplierType = aSupplierType;
		 
			RunsheetCode = aRunsheetCode;
		 
			ErpFlag = aErpFlag;
		 
			LogicalPk = aLogicalPk;
		 
			BusinessPk = aBusinessPk;
		 
			Comments = aComments;
		 
			UpdateDate = aUpdateDate;
		 
			UpdateUser = aUpdateUser;
		 
			CreateDate = aCreateDate;
		 
			CreateUser = aCreateUser;
		 
			Route = aRoute;
		 
			RequestTime = aRequestTime;
		 
			PtlFlag = aPtlFlag;
		 
			PtlTime = aPtlTime;
		 
			Fid = aFid;
		}
		
		public OutputInfo():base("TT_WMM_OUTPUT")
		{
			List<string> keys = new List<string>();
			 			keys.Add("OUTPUT_ID");                                  _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField OUTPUT_IDField = new DataSchemaField();
			OUTPUT_IDField.Name = "OUTPUT_ID";
			OUTPUT_IDField.Type = typeof(long).ToString();
			OUTPUT_IDField.Index = 0;
			fields.Add(OUTPUT_IDField);
			 
			DataSchemaField OUTPUT_NOField = new DataSchemaField();
			OUTPUT_NOField.Name = "OUTPUT_NO";
			OUTPUT_NOField.Type = typeof(string).ToString();
			OUTPUT_NOField.Index = 1;
			fields.Add(OUTPUT_NOField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 2;
			fields.Add(PLANTField);
			 
			DataSchemaField SUPPLIER_NUMField = new DataSchemaField();
			SUPPLIER_NUMField.Name = "SUPPLIER_NUM";
			SUPPLIER_NUMField.Type = typeof(string).ToString();
			SUPPLIER_NUMField.Index = 3;
			fields.Add(SUPPLIER_NUMField);
			 
			DataSchemaField WM_NOField = new DataSchemaField();
			WM_NOField.Name = "WM_NO";
			WM_NOField.Type = typeof(string).ToString();
			WM_NOField.Index = 4;
			fields.Add(WM_NOField);
			 
			DataSchemaField ZONE_NOField = new DataSchemaField();
			ZONE_NOField.Name = "ZONE_NO";
			ZONE_NOField.Type = typeof(string).ToString();
			ZONE_NOField.Index = 5;
			fields.Add(ZONE_NOField);
			 
			DataSchemaField SEND_TIMEField = new DataSchemaField();
			SEND_TIMEField.Name = "SEND_TIME";
			SEND_TIMEField.Type = typeof(DateTime).ToString();
			SEND_TIMEField.Index = 6;
			fields.Add(SEND_TIMEField);
			 
			DataSchemaField OUTPUT_TYPEField = new DataSchemaField();
			OUTPUT_TYPEField.Name = "OUTPUT_TYPE";
			OUTPUT_TYPEField.Type = typeof(int).ToString();
			OUTPUT_TYPEField.Index = 7;
			fields.Add(OUTPUT_TYPEField);
			 
			DataSchemaField TRAN_TIMEField = new DataSchemaField();
			TRAN_TIMEField.Name = "TRAN_TIME";
			TRAN_TIMEField.Type = typeof(DateTime).ToString();
			TRAN_TIMEField.Index = 8;
			fields.Add(TRAN_TIMEField);
			 
			DataSchemaField OUTPUT_REASONField = new DataSchemaField();
			OUTPUT_REASONField.Name = "OUTPUT_REASON";
			OUTPUT_REASONField.Type = typeof(string).ToString();
			OUTPUT_REASONField.Index = 9;
			fields.Add(OUTPUT_REASONField);
			 
			DataSchemaField BOOK_KEEPERField = new DataSchemaField();
			BOOK_KEEPERField.Name = "BOOK_KEEPER";
			BOOK_KEEPERField.Type = typeof(string).ToString();
			BOOK_KEEPERField.Index = 10;
			fields.Add(BOOK_KEEPERField);
			 
			DataSchemaField CONFIRM_FLAGField = new DataSchemaField();
			CONFIRM_FLAGField.Name = "CONFIRM_FLAG";
			CONFIRM_FLAGField.Type = typeof(int).ToString();
			CONFIRM_FLAGField.Index = 11;
			fields.Add(CONFIRM_FLAGField);
			 
			DataSchemaField PLAN_NOField = new DataSchemaField();
			PLAN_NOField.Name = "PLAN_NO";
			PLAN_NOField.Type = typeof(string).ToString();
			PLAN_NOField.Index = 12;
			fields.Add(PLAN_NOField);
			 
			DataSchemaField ASN_NOField = new DataSchemaField();
			ASN_NOField.Name = "ASN_NO";
			ASN_NOField.Type = typeof(string).ToString();
			ASN_NOField.Index = 13;
			fields.Add(ASN_NOField);
			 
			DataSchemaField RUNSHEET_NOField = new DataSchemaField();
			RUNSHEET_NOField.Name = "RUNSHEET_NO";
			RUNSHEET_NOField.Type = typeof(string).ToString();
			RUNSHEET_NOField.Index = 14;
			fields.Add(RUNSHEET_NOField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 15;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField PLANT_ZONEField = new DataSchemaField();
			PLANT_ZONEField.Name = "PLANT_ZONE";
			PLANT_ZONEField.Type = typeof(string).ToString();
			PLANT_ZONEField.Index = 16;
			fields.Add(PLANT_ZONEField);
			 
			DataSchemaField WORKSHOPField = new DataSchemaField();
			WORKSHOPField.Name = "WORKSHOP";
			WORKSHOPField.Type = typeof(string).ToString();
			WORKSHOPField.Index = 17;
			fields.Add(WORKSHOPField);
			 
			DataSchemaField TRANS_SUPPLIER_NUMField = new DataSchemaField();
			TRANS_SUPPLIER_NUMField.Name = "TRANS_SUPPLIER_NUM";
			TRANS_SUPPLIER_NUMField.Type = typeof(string).ToString();
			TRANS_SUPPLIER_NUMField.Index = 18;
			fields.Add(TRANS_SUPPLIER_NUMField);
			 
			DataSchemaField PART_TYPEField = new DataSchemaField();
			PART_TYPEField.Name = "PART_TYPE";
			PART_TYPEField.Type = typeof(int).ToString();
			PART_TYPEField.Index = 19;
			fields.Add(PART_TYPEField);
			 
			DataSchemaField SUPPLIER_TYPEField = new DataSchemaField();
			SUPPLIER_TYPEField.Name = "SUPPLIER_TYPE";
			SUPPLIER_TYPEField.Type = typeof(int).ToString();
			SUPPLIER_TYPEField.Index = 20;
			fields.Add(SUPPLIER_TYPEField);
			 
			DataSchemaField RUNSHEET_CODEField = new DataSchemaField();
			RUNSHEET_CODEField.Name = "RUNSHEET_CODE";
			RUNSHEET_CODEField.Type = typeof(string).ToString();
			RUNSHEET_CODEField.Index = 21;
			fields.Add(RUNSHEET_CODEField);
			 
			DataSchemaField ERP_FLAGField = new DataSchemaField();
			ERP_FLAGField.Name = "ERP_FLAG";
			ERP_FLAGField.Type = typeof(int).ToString();
			ERP_FLAGField.Index = 22;
			fields.Add(ERP_FLAGField);
			 
			DataSchemaField LOGICAL_PKField = new DataSchemaField();
			LOGICAL_PKField.Name = "LOGICAL_PK";
			LOGICAL_PKField.Type = typeof(string).ToString();
			LOGICAL_PKField.Index = 23;
			fields.Add(LOGICAL_PKField);
			 
			DataSchemaField BUSINESS_PKField = new DataSchemaField();
			BUSINESS_PKField.Name = "BUSINESS_PK";
			BUSINESS_PKField.Type = typeof(string).ToString();
			BUSINESS_PKField.Index = 24;
			fields.Add(BUSINESS_PKField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 25;
			fields.Add(COMMENTSField);
			 
			DataSchemaField UPDATE_DATEField = new DataSchemaField();
			UPDATE_DATEField.Name = "UPDATE_DATE";
			UPDATE_DATEField.Type = typeof(DateTime).ToString();
			UPDATE_DATEField.Index = 26;
			fields.Add(UPDATE_DATEField);
			 
			DataSchemaField UPDATE_USERField = new DataSchemaField();
			UPDATE_USERField.Name = "UPDATE_USER";
			UPDATE_USERField.Type = typeof(string).ToString();
			UPDATE_USERField.Index = 27;
			fields.Add(UPDATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 28;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 29;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField ROUTEField = new DataSchemaField();
			ROUTEField.Name = "ROUTE";
			ROUTEField.Type = typeof(string).ToString();
			ROUTEField.Index = 30;
			fields.Add(ROUTEField);
			 
			DataSchemaField REQUEST_TIMEField = new DataSchemaField();
			REQUEST_TIMEField.Name = "REQUEST_TIME";
			REQUEST_TIMEField.Type = typeof(DateTime).ToString();
			REQUEST_TIMEField.Index = 31;
			fields.Add(REQUEST_TIMEField);
			 
			DataSchemaField PTL_FLAGField = new DataSchemaField();
			PTL_FLAGField.Name = "PTL_FLAG";
			PTL_FLAGField.Type = typeof(int).ToString();
			PTL_FLAGField.Index = 32;
			fields.Add(PTL_FLAGField);
			 
			DataSchemaField PTL_TIMEField = new DataSchemaField();
			PTL_TIMEField.Name = "PTL_TIME";
			PTL_TIMEField.Type = typeof(DateTime).ToString();
			PTL_TIMEField.Index = 33;
			fields.Add(PTL_TIMEField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 34;
			fields.Add(FIDField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long OutputId{ get;set; }		
				
		[DataMember]
		public string OutputNo{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string SupplierNum{ get;set; }		
				
		[DataMember]
		public string WmNo{ get;set; }		
				
		[DataMember]
		public string ZoneNo{ get;set; }		
				
		[DataMember]
		public DateTime? SendTime{ get;set; }		
				
		[DataMember]
		public int? OutputType{ get;set; }		
				
		[DataMember]
		public DateTime? TranTime{ get;set; }		
				
		[DataMember]
		public string OutputReason{ get;set; }		
				
		[DataMember]
		public string BookKeeper{ get;set; }		
				
		[DataMember]
		public int? ConfirmFlag{ get;set; }		
				
		[DataMember]
		public string PlanNo{ get;set; }		
				
		[DataMember]
		public string AsnNo{ get;set; }		
				
		[DataMember]
		public string RunsheetNo{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string PlantZone{ get;set; }		
				
		[DataMember]
		public string Workshop{ get;set; }		
				
		[DataMember]
		public string TransSupplierNum{ get;set; }		
				
		[DataMember]
		public int? PartType{ get;set; }		
				
		[DataMember]
		public int? SupplierType{ get;set; }		
				
		[DataMember]
		public string RunsheetCode{ get;set; }		
				
		[DataMember]
		public int? ErpFlag{ get;set; }		
				
		[DataMember]
		public string LogicalPk{ get;set; }		
				
		[DataMember]
		public string BusinessPk{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public DateTime? UpdateDate{ get;set; }		
				
		[DataMember]
		public string UpdateUser{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public string Route{ get;set; }		
				
		[DataMember]
		public DateTime? RequestTime{ get;set; }		
				
				
		private int? _PtlFlag = 0;
		
		[DataMember]	
		public int? PtlFlag
		{
			get
			{
				return _PtlFlag;
			}
			set
			{
				_PtlFlag = value;
			}
		}
				
				
		[DataMember]
		public DateTime? PtlTime{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			OutputInfo info = new OutputInfo();

			info.OutputId = this.OutputId;
			info.OutputNo = this.OutputNo;
			info.Plant = this.Plant;
			info.SupplierNum = this.SupplierNum;
			info.WmNo = this.WmNo;
			info.ZoneNo = this.ZoneNo;
			info.SendTime = this.SendTime;
			info.OutputType = this.OutputType;
			info.TranTime = this.TranTime;
			info.OutputReason = this.OutputReason;
			info.BookKeeper = this.BookKeeper;
			info.ConfirmFlag = this.ConfirmFlag;
			info.PlanNo = this.PlanNo;
			info.AsnNo = this.AsnNo;
			info.RunsheetNo = this.RunsheetNo;
			info.AssemblyLine = this.AssemblyLine;
			info.PlantZone = this.PlantZone;
			info.Workshop = this.Workshop;
			info.TransSupplierNum = this.TransSupplierNum;
			info.PartType = this.PartType;
			info.SupplierType = this.SupplierType;
			info.RunsheetCode = this.RunsheetCode;
			info.ErpFlag = this.ErpFlag;
			info.LogicalPk = this.LogicalPk;
			info.BusinessPk = this.BusinessPk;
			info.Comments = this.Comments;
			info.UpdateDate = this.UpdateDate;
			info.UpdateUser = this.UpdateUser;
			info.CreateDate = this.CreateDate;
			info.CreateUser = this.CreateUser;
			info.Route = this.Route;
			info.RequestTime = this.RequestTime;
			info.PtlFlag = this.PtlFlag;
			info.PtlTime = this.PtlTime;
			info.Fid = this.Fid;
			return info;			
		}
		 
		public OutputInfo Clone()
		{
			return ((ICloneable) this).Clone() as OutputInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// OutputInfoCollection对应表[TT_WMM_OUTPUT]
    /// </summary>
	public partial class OutputInfoCollection : BusinessObjectCollection<OutputInfo>
	{
		public OutputInfoCollection():base("TT_WMM_OUTPUT"){}	
	}
}
