#region Declaim
//---------------------------------------------------------------------------
// Name:		TwdCounterInfo
// Function: 	Expose data in table TwdCounter from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年6月20日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// TwdCounterInfo对应表[TT_MPM_TWD_COUNTER]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class TwdCounterInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public TwdCounterInfo( 
					long aId,

					Guid aFid,

					Guid aPartPullFid,

					string aPartBoxCode,

					string aPlant,

					string aPlantZone,

					string aWorkshop,

					string aAssemblyLine,

					string aSupplierNum,

					int aRequirementAccumulateMode,

					int aRoundnessMode,

					string aPartNo,

					string aPartCname,

					string aPartVersion,

					string aWorkshopSection,

					string aLocation,

					decimal aCurrentQty,

					decimal aPackage,

					string aPackageModel,

					int aStatus,

					string aComments,

					bool aValidFlag,

					DateTime aCreateDate,

					string aCreateUser,

					DateTime aModifyDate,

					string aModifyUser

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			PartPullFid = aPartPullFid;
		 
			PartBoxCode = aPartBoxCode;
		 
			Plant = aPlant;
		 
			PlantZone = aPlantZone;
		 
			Workshop = aWorkshop;
		 
			AssemblyLine = aAssemblyLine;
		 
			SupplierNum = aSupplierNum;
		 
			RequirementAccumulateMode = aRequirementAccumulateMode;
		 
			RoundnessMode = aRoundnessMode;
		 
			PartNo = aPartNo;
		 
			PartCname = aPartCname;
		 
			PartVersion = aPartVersion;
		 
			WorkshopSection = aWorkshopSection;
		 
			Location = aLocation;
		 
			CurrentQty = aCurrentQty;
		 
			Package = aPackage;
		 
			PackageModel = aPackageModel;
		 
			Status = aStatus;
		 
			Comments = aComments;
		 
			ValidFlag = aValidFlag;
		 
			CreateDate = aCreateDate;
		 
			CreateUser = aCreateUser;
		 
			ModifyDate = aModifyDate;
		 
			ModifyUser = aModifyUser;
		}
		
		public TwdCounterInfo():base("TT_MPM_TWD_COUNTER")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                         _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField PART_PULL_FIDField = new DataSchemaField();
			PART_PULL_FIDField.Name = "PART_PULL_FID";
			PART_PULL_FIDField.Type = typeof(Guid).ToString();
			PART_PULL_FIDField.Index = 2;
			fields.Add(PART_PULL_FIDField);
			 
			DataSchemaField PART_BOX_CODEField = new DataSchemaField();
			PART_BOX_CODEField.Name = "PART_BOX_CODE";
			PART_BOX_CODEField.Type = typeof(string).ToString();
			PART_BOX_CODEField.Index = 3;
			fields.Add(PART_BOX_CODEField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 4;
			fields.Add(PLANTField);
			 
			DataSchemaField PLANT_ZONEField = new DataSchemaField();
			PLANT_ZONEField.Name = "PLANT_ZONE";
			PLANT_ZONEField.Type = typeof(string).ToString();
			PLANT_ZONEField.Index = 5;
			fields.Add(PLANT_ZONEField);
			 
			DataSchemaField WORKSHOPField = new DataSchemaField();
			WORKSHOPField.Name = "WORKSHOP";
			WORKSHOPField.Type = typeof(string).ToString();
			WORKSHOPField.Index = 6;
			fields.Add(WORKSHOPField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 7;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField SUPPLIER_NUMField = new DataSchemaField();
			SUPPLIER_NUMField.Name = "SUPPLIER_NUM";
			SUPPLIER_NUMField.Type = typeof(string).ToString();
			SUPPLIER_NUMField.Index = 8;
			fields.Add(SUPPLIER_NUMField);
			 
			DataSchemaField REQUIREMENT_ACCUMULATE_MODEField = new DataSchemaField();
			REQUIREMENT_ACCUMULATE_MODEField.Name = "REQUIREMENT_ACCUMULATE_MODE";
			REQUIREMENT_ACCUMULATE_MODEField.Type = typeof(int).ToString();
			REQUIREMENT_ACCUMULATE_MODEField.Index = 9;
			fields.Add(REQUIREMENT_ACCUMULATE_MODEField);
			 
			DataSchemaField ROUNDNESS_MODEField = new DataSchemaField();
			ROUNDNESS_MODEField.Name = "ROUNDNESS_MODE";
			ROUNDNESS_MODEField.Type = typeof(int).ToString();
			ROUNDNESS_MODEField.Index = 10;
			fields.Add(ROUNDNESS_MODEField);
			 
			DataSchemaField PART_NOField = new DataSchemaField();
			PART_NOField.Name = "PART_NO";
			PART_NOField.Type = typeof(string).ToString();
			PART_NOField.Index = 11;
			fields.Add(PART_NOField);
			 
			DataSchemaField PART_CNAMEField = new DataSchemaField();
			PART_CNAMEField.Name = "PART_CNAME";
			PART_CNAMEField.Type = typeof(string).ToString();
			PART_CNAMEField.Index = 12;
			fields.Add(PART_CNAMEField);
			 
			DataSchemaField PART_VERSIONField = new DataSchemaField();
			PART_VERSIONField.Name = "PART_VERSION";
			PART_VERSIONField.Type = typeof(string).ToString();
			PART_VERSIONField.Index = 13;
			fields.Add(PART_VERSIONField);
			 
			DataSchemaField WORKSHOP_SECTIONField = new DataSchemaField();
			WORKSHOP_SECTIONField.Name = "WORKSHOP_SECTION";
			WORKSHOP_SECTIONField.Type = typeof(string).ToString();
			WORKSHOP_SECTIONField.Index = 14;
			fields.Add(WORKSHOP_SECTIONField);
			 
			DataSchemaField LOCATIONField = new DataSchemaField();
			LOCATIONField.Name = "LOCATION";
			LOCATIONField.Type = typeof(string).ToString();
			LOCATIONField.Index = 15;
			fields.Add(LOCATIONField);
			 
			DataSchemaField CURRENT_QTYField = new DataSchemaField();
			CURRENT_QTYField.Name = "CURRENT_QTY";
			CURRENT_QTYField.Type = typeof(decimal).ToString();
			CURRENT_QTYField.Index = 16;
			fields.Add(CURRENT_QTYField);
			 
			DataSchemaField PACKAGEField = new DataSchemaField();
			PACKAGEField.Name = "PACKAGE";
			PACKAGEField.Type = typeof(decimal).ToString();
			PACKAGEField.Index = 17;
			fields.Add(PACKAGEField);
			 
			DataSchemaField PACKAGE_MODELField = new DataSchemaField();
			PACKAGE_MODELField.Name = "PACKAGE_MODEL";
			PACKAGE_MODELField.Type = typeof(string).ToString();
			PACKAGE_MODELField.Index = 18;
			fields.Add(PACKAGE_MODELField);
			 
			DataSchemaField STATUSField = new DataSchemaField();
			STATUSField.Name = "STATUS";
			STATUSField.Type = typeof(int).ToString();
			STATUSField.Index = 19;
			fields.Add(STATUSField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 20;
			fields.Add(COMMENTSField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 21;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 22;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 23;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 24;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 25;
			fields.Add(MODIFY_USERField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public Guid? PartPullFid{ get;set; }		
				
		[DataMember]
		public string PartBoxCode{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string PlantZone{ get;set; }		
				
		[DataMember]
		public string Workshop{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string SupplierNum{ get;set; }		
				
		[DataMember]
		public int? RequirementAccumulateMode{ get;set; }		
				
		[DataMember]
		public int? RoundnessMode{ get;set; }		
				
		[DataMember]
		public string PartNo{ get;set; }		
				
		[DataMember]
		public string PartCname{ get;set; }		
				
		[DataMember]
		public string PartVersion{ get;set; }		
				
		[DataMember]
		public string WorkshopSection{ get;set; }		
				
		[DataMember]
		public string Location{ get;set; }		
				
		[DataMember]
		public decimal? CurrentQty{ get;set; }		
				
		[DataMember]
		public decimal? Package{ get;set; }		
				
		[DataMember]
		public string PackageModel{ get;set; }		
				
		[DataMember]
		public int? Status{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public bool ValidFlag{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			TwdCounterInfo info = new TwdCounterInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.PartPullFid = this.PartPullFid;
			info.PartBoxCode = this.PartBoxCode;
			info.Plant = this.Plant;
			info.PlantZone = this.PlantZone;
			info.Workshop = this.Workshop;
			info.AssemblyLine = this.AssemblyLine;
			info.SupplierNum = this.SupplierNum;
			info.RequirementAccumulateMode = this.RequirementAccumulateMode;
			info.RoundnessMode = this.RoundnessMode;
			info.PartNo = this.PartNo;
			info.PartCname = this.PartCname;
			info.PartVersion = this.PartVersion;
			info.WorkshopSection = this.WorkshopSection;
			info.Location = this.Location;
			info.CurrentQty = this.CurrentQty;
			info.Package = this.Package;
			info.PackageModel = this.PackageModel;
			info.Status = this.Status;
			info.Comments = this.Comments;
			info.ValidFlag = this.ValidFlag;
			info.CreateDate = this.CreateDate;
			info.CreateUser = this.CreateUser;
			info.ModifyDate = this.ModifyDate;
			info.ModifyUser = this.ModifyUser;
			return info;			
		}
		 
		public TwdCounterInfo Clone()
		{
			return ((ICloneable) this).Clone() as TwdCounterInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// TwdCounterInfoCollection对应表[TT_MPM_TWD_COUNTER]
    /// </summary>
	public partial class TwdCounterInfoCollection : BusinessObjectCollection<TwdCounterInfo>
	{
		public TwdCounterInfoCollection():base("TT_MPM_TWD_COUNTER"){}	
	}
}
