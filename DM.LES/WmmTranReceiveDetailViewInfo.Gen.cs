#region Declaim
//---------------------------------------------------------------------------
// Name:		WmmTranReceiveDetailViewInfo
// Function: 	Expose data in table WmmTranReceiveDetailView from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年1月9日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// WmmTranReceiveDetailViewInfo对应表[V_TT_WMM_TRAN_RECEIVE_DETAIL_VIEW]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class WmmTranReceiveDetailViewInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public WmmTranReceiveDetailViewInfo( 
					string aPlant,

					string aZoneNo,

					string aPartNo,

					int aRequiredInhousePackageQty,

					string aInhousePackageModel,

					int aIsAsn,

					int aPlanRunsheetSn,

					int aSubQty,

					string aDock,

					string aPartCname,

					string aSupplierNum,

					int aRequiredInhousePackage,

					int aActualInhousePackageQty,

					string aDispo,

					string aWmNo,

					string aPlanRunsheetNo,

					int aInhousePackage,

					DateTime aPublishTime,

					int aSubBoxNum,

					DateTime aExpectedArrivalTime,

					int aActualInhousePackage

				 
		) : this()
		{
			 
			Plant = aPlant;
		 
			ZoneNo = aZoneNo;
		 
			PartNo = aPartNo;
		 
			RequiredInhousePackageQty = aRequiredInhousePackageQty;
		 
			InhousePackageModel = aInhousePackageModel;
		 
			IsAsn = aIsAsn;
		 
			PlanRunsheetSn = aPlanRunsheetSn;
		 
			SubQty = aSubQty;
		 
			Dock = aDock;
		 
			PartCname = aPartCname;
		 
			SupplierNum = aSupplierNum;
		 
			RequiredInhousePackage = aRequiredInhousePackage;
		 
			ActualInhousePackageQty = aActualInhousePackageQty;
		 
			Dispo = aDispo;
		 
			WmNo = aWmNo;
		 
			PlanRunsheetNo = aPlanRunsheetNo;
		 
			InhousePackage = aInhousePackage;
		 
			PublishTime = aPublishTime;
		 
			SubBoxNum = aSubBoxNum;
		 
			ExpectedArrivalTime = aExpectedArrivalTime;
		 
			ActualInhousePackage = aActualInhousePackage;
		}
		
		public WmmTranReceiveDetailViewInfo():base("V_TT_WMM_TRAN_RECEIVE_DETAIL_VIEW")
		{
			List<string> keys = new List<string>();
			                     _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 0;
			fields.Add(PLANTField);
			 
			DataSchemaField ZONE_NOField = new DataSchemaField();
			ZONE_NOField.Name = "ZONE_NO";
			ZONE_NOField.Type = typeof(string).ToString();
			ZONE_NOField.Index = 1;
			fields.Add(ZONE_NOField);
			 
			DataSchemaField PART_NOField = new DataSchemaField();
			PART_NOField.Name = "PART_NO";
			PART_NOField.Type = typeof(string).ToString();
			PART_NOField.Index = 2;
			fields.Add(PART_NOField);
			 
			DataSchemaField REQUIRED_INHOUSE_PACKAGE_QTYField = new DataSchemaField();
			REQUIRED_INHOUSE_PACKAGE_QTYField.Name = "REQUIRED_INHOUSE_PACKAGE_QTY";
			REQUIRED_INHOUSE_PACKAGE_QTYField.Type = typeof(int).ToString();
			REQUIRED_INHOUSE_PACKAGE_QTYField.Index = 3;
			fields.Add(REQUIRED_INHOUSE_PACKAGE_QTYField);
			 
			DataSchemaField INHOUSE_PACKAGE_MODELField = new DataSchemaField();
			INHOUSE_PACKAGE_MODELField.Name = "INHOUSE_PACKAGE_MODEL";
			INHOUSE_PACKAGE_MODELField.Type = typeof(string).ToString();
			INHOUSE_PACKAGE_MODELField.Index = 4;
			fields.Add(INHOUSE_PACKAGE_MODELField);
			 
			DataSchemaField IS_ASNField = new DataSchemaField();
			IS_ASNField.Name = "IS_ASN";
			IS_ASNField.Type = typeof(int).ToString();
			IS_ASNField.Index = 5;
			fields.Add(IS_ASNField);
			 
			DataSchemaField PLAN_RUNSHEET_SNField = new DataSchemaField();
			PLAN_RUNSHEET_SNField.Name = "PLAN_RUNSHEET_SN";
			PLAN_RUNSHEET_SNField.Type = typeof(int).ToString();
			PLAN_RUNSHEET_SNField.Index = 6;
			fields.Add(PLAN_RUNSHEET_SNField);
			 
			DataSchemaField SUB_QTYField = new DataSchemaField();
			SUB_QTYField.Name = "SUB_QTY";
			SUB_QTYField.Type = typeof(int).ToString();
			SUB_QTYField.Index = 7;
			fields.Add(SUB_QTYField);
			 
			DataSchemaField DOCKField = new DataSchemaField();
			DOCKField.Name = "DOCK";
			DOCKField.Type = typeof(string).ToString();
			DOCKField.Index = 8;
			fields.Add(DOCKField);
			 
			DataSchemaField PART_CNAMEField = new DataSchemaField();
			PART_CNAMEField.Name = "PART_CNAME";
			PART_CNAMEField.Type = typeof(string).ToString();
			PART_CNAMEField.Index = 9;
			fields.Add(PART_CNAMEField);
			 
			DataSchemaField SUPPLIER_NUMField = new DataSchemaField();
			SUPPLIER_NUMField.Name = "SUPPLIER_NUM";
			SUPPLIER_NUMField.Type = typeof(string).ToString();
			SUPPLIER_NUMField.Index = 10;
			fields.Add(SUPPLIER_NUMField);
			 
			DataSchemaField REQUIRED_INHOUSE_PACKAGEField = new DataSchemaField();
			REQUIRED_INHOUSE_PACKAGEField.Name = "REQUIRED_INHOUSE_PACKAGE";
			REQUIRED_INHOUSE_PACKAGEField.Type = typeof(int).ToString();
			REQUIRED_INHOUSE_PACKAGEField.Index = 11;
			fields.Add(REQUIRED_INHOUSE_PACKAGEField);
			 
			DataSchemaField ACTUAL_INHOUSE_PACKAGE_QTYField = new DataSchemaField();
			ACTUAL_INHOUSE_PACKAGE_QTYField.Name = "ACTUAL_INHOUSE_PACKAGE_QTY";
			ACTUAL_INHOUSE_PACKAGE_QTYField.Type = typeof(int).ToString();
			ACTUAL_INHOUSE_PACKAGE_QTYField.Index = 12;
			fields.Add(ACTUAL_INHOUSE_PACKAGE_QTYField);
			 
			DataSchemaField DISPOField = new DataSchemaField();
			DISPOField.Name = "DISPO";
			DISPOField.Type = typeof(string).ToString();
			DISPOField.Index = 13;
			fields.Add(DISPOField);
			 
			DataSchemaField WM_NOField = new DataSchemaField();
			WM_NOField.Name = "WM_NO";
			WM_NOField.Type = typeof(string).ToString();
			WM_NOField.Index = 14;
			fields.Add(WM_NOField);
			 
			DataSchemaField PLAN_RUNSHEET_NOField = new DataSchemaField();
			PLAN_RUNSHEET_NOField.Name = "PLAN_RUNSHEET_NO";
			PLAN_RUNSHEET_NOField.Type = typeof(string).ToString();
			PLAN_RUNSHEET_NOField.Index = 15;
			fields.Add(PLAN_RUNSHEET_NOField);
			 
			DataSchemaField INHOUSE_PACKAGEField = new DataSchemaField();
			INHOUSE_PACKAGEField.Name = "INHOUSE_PACKAGE";
			INHOUSE_PACKAGEField.Type = typeof(int).ToString();
			INHOUSE_PACKAGEField.Index = 16;
			fields.Add(INHOUSE_PACKAGEField);
			 
			DataSchemaField PUBLISH_TIMEField = new DataSchemaField();
			PUBLISH_TIMEField.Name = "PUBLISH_TIME";
			PUBLISH_TIMEField.Type = typeof(DateTime).ToString();
			PUBLISH_TIMEField.Index = 17;
			fields.Add(PUBLISH_TIMEField);
			 
			DataSchemaField SUB_BOX_NUMField = new DataSchemaField();
			SUB_BOX_NUMField.Name = "SUB_BOX_NUM";
			SUB_BOX_NUMField.Type = typeof(int).ToString();
			SUB_BOX_NUMField.Index = 18;
			fields.Add(SUB_BOX_NUMField);
			 
			DataSchemaField EXPECTED_ARRIVAL_TIMEField = new DataSchemaField();
			EXPECTED_ARRIVAL_TIMEField.Name = "EXPECTED_ARRIVAL_TIME";
			EXPECTED_ARRIVAL_TIMEField.Type = typeof(DateTime).ToString();
			EXPECTED_ARRIVAL_TIMEField.Index = 19;
			fields.Add(EXPECTED_ARRIVAL_TIMEField);
			 
			DataSchemaField ACTUAL_INHOUSE_PACKAGEField = new DataSchemaField();
			ACTUAL_INHOUSE_PACKAGEField.Name = "ACTUAL_INHOUSE_PACKAGE";
			ACTUAL_INHOUSE_PACKAGEField.Type = typeof(int).ToString();
			ACTUAL_INHOUSE_PACKAGEField.Index = 20;
			fields.Add(ACTUAL_INHOUSE_PACKAGEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string ZoneNo{ get;set; }		
				
		[DataMember]
		public string PartNo{ get;set; }		
				
		[DataMember]
		public int? RequiredInhousePackageQty{ get;set; }		
				
		[DataMember]
		public string InhousePackageModel{ get;set; }		
				
		[DataMember]
		public int IsAsn{ get;set; }		
				
		[DataMember]
		public int PlanRunsheetSn{ get;set; }		
				
		[DataMember]
		public int? SubQty{ get;set; }		
				
		[DataMember]
		public string Dock{ get;set; }		
				
		[DataMember]
		public string PartCname{ get;set; }		
				
		[DataMember]
		public string SupplierNum{ get;set; }		
				
		[DataMember]
		public int? RequiredInhousePackage{ get;set; }		
				
		[DataMember]
		public int ActualInhousePackageQty{ get;set; }		
				
		[DataMember]
		public string Dispo{ get;set; }		
				
		[DataMember]
		public string WmNo{ get;set; }		
				
		[DataMember]
		public string PlanRunsheetNo{ get;set; }		
				
		[DataMember]
		public int? InhousePackage{ get;set; }		
				
		[DataMember]
		public DateTime PublishTime{ get;set; }		
				
		[DataMember]
		public int? SubBoxNum{ get;set; }		
				
		[DataMember]
		public DateTime? ExpectedArrivalTime{ get;set; }		
				
		[DataMember]
		public int ActualInhousePackage{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			WmmTranReceiveDetailViewInfo info = new WmmTranReceiveDetailViewInfo();

			info.Plant = this.Plant;
			info.ZoneNo = this.ZoneNo;
			info.PartNo = this.PartNo;
			info.RequiredInhousePackageQty = this.RequiredInhousePackageQty;
			info.InhousePackageModel = this.InhousePackageModel;
			info.IsAsn = this.IsAsn;
			info.PlanRunsheetSn = this.PlanRunsheetSn;
			info.SubQty = this.SubQty;
			info.Dock = this.Dock;
			info.PartCname = this.PartCname;
			info.SupplierNum = this.SupplierNum;
			info.RequiredInhousePackage = this.RequiredInhousePackage;
			info.ActualInhousePackageQty = this.ActualInhousePackageQty;
			info.Dispo = this.Dispo;
			info.WmNo = this.WmNo;
			info.PlanRunsheetNo = this.PlanRunsheetNo;
			info.InhousePackage = this.InhousePackage;
			info.PublishTime = this.PublishTime;
			info.SubBoxNum = this.SubBoxNum;
			info.ExpectedArrivalTime = this.ExpectedArrivalTime;
			info.ActualInhousePackage = this.ActualInhousePackage;
			return info;			
		}
		 
		public WmmTranReceiveDetailViewInfo Clone()
		{
			return ((ICloneable) this).Clone() as WmmTranReceiveDetailViewInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// WmmTranReceiveDetailViewInfoCollection对应表[V_TT_WMM_TRAN_RECEIVE_DETAIL_VIEW]
    /// </summary>
	public partial class WmmTranReceiveDetailViewInfoCollection : BusinessObjectCollection<WmmTranReceiveDetailViewInfo>
	{
		public WmmTranReceiveDetailViewInfoCollection():base("V_TT_WMM_TRAN_RECEIVE_DETAIL_VIEW"){}	
	}
}
