#region Declaim
//---------------------------------------------------------------------------
// Name:		CustomerInfo
// Function: 	Expose data in table Customer from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年4月28日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// CustomerInfo对应表[TM_BAS_CUSTOMER]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class CustomerInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public CustomerInfo( 
					long aId,

					Guid aFid,

					string aCustCode,

					string aCustName,

					string aCustNickname,

					string aContactName,

					string aContactTel,

					string aCustAddress,

					string aComments,

					bool aValidFlag,

					string aCreateUser,

					DateTime aCreateDate,

					string aModifyUser,

					DateTime aModifyDate

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			CustCode = aCustCode;
		 
			CustName = aCustName;
		 
			CustNickname = aCustNickname;
		 
			ContactName = aContactName;
		 
			ContactTel = aContactTel;
		 
			CustAddress = aCustAddress;
		 
			Comments = aComments;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		}
		
		public CustomerInfo():base("TM_BAS_CUSTOMER")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");             _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField CUST_CODEField = new DataSchemaField();
			CUST_CODEField.Name = "CUST_CODE";
			CUST_CODEField.Type = typeof(string).ToString();
			CUST_CODEField.Index = 2;
			fields.Add(CUST_CODEField);
			 
			DataSchemaField CUST_NAMEField = new DataSchemaField();
			CUST_NAMEField.Name = "CUST_NAME";
			CUST_NAMEField.Type = typeof(string).ToString();
			CUST_NAMEField.Index = 3;
			fields.Add(CUST_NAMEField);
			 
			DataSchemaField CUST_NICKNAMEField = new DataSchemaField();
			CUST_NICKNAMEField.Name = "CUST_NICKNAME";
			CUST_NICKNAMEField.Type = typeof(string).ToString();
			CUST_NICKNAMEField.Index = 4;
			fields.Add(CUST_NICKNAMEField);
			 
			DataSchemaField CONTACT_NAMEField = new DataSchemaField();
			CONTACT_NAMEField.Name = "CONTACT_NAME";
			CONTACT_NAMEField.Type = typeof(string).ToString();
			CONTACT_NAMEField.Index = 5;
			fields.Add(CONTACT_NAMEField);
			 
			DataSchemaField CONTACT_TELField = new DataSchemaField();
			CONTACT_TELField.Name = "CONTACT_TEL";
			CONTACT_TELField.Type = typeof(string).ToString();
			CONTACT_TELField.Index = 6;
			fields.Add(CONTACT_TELField);
			 
			DataSchemaField CUST_ADDRESSField = new DataSchemaField();
			CUST_ADDRESSField.Name = "CUST_ADDRESS";
			CUST_ADDRESSField.Type = typeof(string).ToString();
			CUST_ADDRESSField.Index = 7;
			fields.Add(CUST_ADDRESSField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 8;
			fields.Add(COMMENTSField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 9;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 10;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 11;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 12;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 13;
			fields.Add(MODIFY_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public string CustCode{ get;set; }		
				
		[DataMember]
		public string CustName{ get;set; }		
				
		[DataMember]
		public string CustNickname{ get;set; }		
				
		[DataMember]
		public string ContactName{ get;set; }		
				
		[DataMember]
		public string ContactTel{ get;set; }		
				
		[DataMember]
		public string CustAddress{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			CustomerInfo info = new CustomerInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.CustCode = this.CustCode;
			info.CustName = this.CustName;
			info.CustNickname = this.CustNickname;
			info.ContactName = this.ContactName;
			info.ContactTel = this.ContactTel;
			info.CustAddress = this.CustAddress;
			info.Comments = this.Comments;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			return info;			
		}
		 
		public CustomerInfo Clone()
		{
			return ((ICloneable) this).Clone() as CustomerInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// CustomerInfoCollection对应表[TM_BAS_CUSTOMER]
    /// </summary>
	public partial class CustomerInfoCollection : BusinessObjectCollection<CustomerInfo>
	{
		public CustomerInfoCollection():base("TM_BAS_CUSTOMER"){}	
	}
}
