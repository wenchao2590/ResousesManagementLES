#region Declaim
//---------------------------------------------------------------------------
// Name:		TaskInfo
// Function: 	Expose data in table Task from database as business object to MES system.
// Tool:		T4
// CreateDate:	2017年12月22日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// TaskInfo对应表[TT_EPS_TASK]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class TaskInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public TaskInfo( 
					int aTaskSn,

					DateTime aTaskTime,

					int aTaskStatus,

					int aTaskPriority,

					string aPlant,

					string aAssemblyLine,

					string aLocation,

					int aPackage,

					int aUsage,

					string aELocation,

					string aEAssemblyLine,

					string aEPlant,

					string aDLocation,

					string aDAssemblyLine,

					string aDPlant,

					string aPartNo,

					DateTime aRequestTime,

					DateTime aDeliverTime,

					DateTime aAlarmTime,

					int aActualQuantity,

					string aRoute,

					int aRouteCombinationLimit,

					string aZone,

					int aZoneScheduleType,

					int aTriggerStatus,

					int aCombinationType,

					int aPullType,

					int aCompulsoryFlag,

					int aMinStorage,

					int aMaxStorage,

					int aCurrentStorage,

					string aButtonId,

					int aTagRequestSn,

					int aSessionSn,

					string aScreenLocation,

					string aBahnhofNo,

					string aDolly,

					DateTime aWmsSendTime,

					int aWmsSendStatus,

					string aSupplierNum,

					string aTransSupplierNum,

					string aInhousePackageModel,

					int aInhousePackage,

					DateTime aPickupTime,

					DateTime aArriveTime,

					string aComments,

					string aCreateUser,

					DateTime aCreateDate,

					string aUpdateUser,

					DateTime aUpdateDate,

					string aRunsheetNo,

					int aPrintState,

					int aPrintTimes,

					string aPlantZone

				 
		) : this()
		{
			 
			TaskSn = aTaskSn;
		 
			TaskTime = aTaskTime;
		 
			TaskStatus = aTaskStatus;
		 
			TaskPriority = aTaskPriority;
		 
			Plant = aPlant;
		 
			AssemblyLine = aAssemblyLine;
		 
			Location = aLocation;
		 
			Package = aPackage;
		 
			Usage = aUsage;
		 
			ELocation = aELocation;
		 
			EAssemblyLine = aEAssemblyLine;
		 
			EPlant = aEPlant;
		 
			DLocation = aDLocation;
		 
			DAssemblyLine = aDAssemblyLine;
		 
			DPlant = aDPlant;
		 
			PartNo = aPartNo;
		 
			RequestTime = aRequestTime;
		 
			DeliverTime = aDeliverTime;
		 
			AlarmTime = aAlarmTime;
		 
			ActualQuantity = aActualQuantity;
		 
			Route = aRoute;
		 
			RouteCombinationLimit = aRouteCombinationLimit;
		 
			Zone = aZone;
		 
			ZoneScheduleType = aZoneScheduleType;
		 
			TriggerStatus = aTriggerStatus;
		 
			CombinationType = aCombinationType;
		 
			PullType = aPullType;
		 
			CompulsoryFlag = aCompulsoryFlag;
		 
			MinStorage = aMinStorage;
		 
			MaxStorage = aMaxStorage;
		 
			CurrentStorage = aCurrentStorage;
		 
			ButtonId = aButtonId;
		 
			TagRequestSn = aTagRequestSn;
		 
			SessionSn = aSessionSn;
		 
			ScreenLocation = aScreenLocation;
		 
			BahnhofNo = aBahnhofNo;
		 
			Dolly = aDolly;
		 
			WmsSendTime = aWmsSendTime;
		 
			WmsSendStatus = aWmsSendStatus;
		 
			SupplierNum = aSupplierNum;
		 
			TransSupplierNum = aTransSupplierNum;
		 
			InhousePackageModel = aInhousePackageModel;
		 
			InhousePackage = aInhousePackage;
		 
			PickupTime = aPickupTime;
		 
			ArriveTime = aArriveTime;
		 
			Comments = aComments;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			UpdateUser = aUpdateUser;
		 
			UpdateDate = aUpdateDate;
		 
			RunsheetNo = aRunsheetNo;
		 
			PrintState = aPrintState;
		 
			PrintTimes = aPrintTimes;
		 
			PlantZone = aPlantZone;
		}
		
		public TaskInfo():base("TT_EPS_TASK")
		{
			List<string> keys = new List<string>();
			 			keys.Add("TASK_SN");                                                     _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField TASK_SNField = new DataSchemaField();
			TASK_SNField.Name = "TASK_SN";
			TASK_SNField.Type = typeof(int).ToString();
			TASK_SNField.Index = 0;
			fields.Add(TASK_SNField);
			 
			DataSchemaField TASK_TIMEField = new DataSchemaField();
			TASK_TIMEField.Name = "TASK_TIME";
			TASK_TIMEField.Type = typeof(DateTime).ToString();
			TASK_TIMEField.Index = 1;
			fields.Add(TASK_TIMEField);
			 
			DataSchemaField TASK_STATUSField = new DataSchemaField();
			TASK_STATUSField.Name = "TASK_STATUS";
			TASK_STATUSField.Type = typeof(int).ToString();
			TASK_STATUSField.Index = 2;
			fields.Add(TASK_STATUSField);
			 
			DataSchemaField TASK_PRIORITYField = new DataSchemaField();
			TASK_PRIORITYField.Name = "TASK_PRIORITY";
			TASK_PRIORITYField.Type = typeof(int).ToString();
			TASK_PRIORITYField.Index = 3;
			fields.Add(TASK_PRIORITYField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 4;
			fields.Add(PLANTField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 5;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField LOCATIONField = new DataSchemaField();
			LOCATIONField.Name = "LOCATION";
			LOCATIONField.Type = typeof(string).ToString();
			LOCATIONField.Index = 6;
			fields.Add(LOCATIONField);
			 
			DataSchemaField PACKAGEField = new DataSchemaField();
			PACKAGEField.Name = "PACKAGE";
			PACKAGEField.Type = typeof(int).ToString();
			PACKAGEField.Index = 7;
			fields.Add(PACKAGEField);
			 
			DataSchemaField USAGEField = new DataSchemaField();
			USAGEField.Name = "USAGE";
			USAGEField.Type = typeof(int).ToString();
			USAGEField.Index = 8;
			fields.Add(USAGEField);
			 
			DataSchemaField E_LOCATIONField = new DataSchemaField();
			E_LOCATIONField.Name = "E_LOCATION";
			E_LOCATIONField.Type = typeof(string).ToString();
			E_LOCATIONField.Index = 9;
			fields.Add(E_LOCATIONField);
			 
			DataSchemaField E_ASSEMBLY_LINEField = new DataSchemaField();
			E_ASSEMBLY_LINEField.Name = "E_ASSEMBLY_LINE";
			E_ASSEMBLY_LINEField.Type = typeof(string).ToString();
			E_ASSEMBLY_LINEField.Index = 10;
			fields.Add(E_ASSEMBLY_LINEField);
			 
			DataSchemaField E_PLANTField = new DataSchemaField();
			E_PLANTField.Name = "E_PLANT";
			E_PLANTField.Type = typeof(string).ToString();
			E_PLANTField.Index = 11;
			fields.Add(E_PLANTField);
			 
			DataSchemaField D_LOCATIONField = new DataSchemaField();
			D_LOCATIONField.Name = "D_LOCATION";
			D_LOCATIONField.Type = typeof(string).ToString();
			D_LOCATIONField.Index = 12;
			fields.Add(D_LOCATIONField);
			 
			DataSchemaField D_ASSEMBLY_LINEField = new DataSchemaField();
			D_ASSEMBLY_LINEField.Name = "D_ASSEMBLY_LINE";
			D_ASSEMBLY_LINEField.Type = typeof(string).ToString();
			D_ASSEMBLY_LINEField.Index = 13;
			fields.Add(D_ASSEMBLY_LINEField);
			 
			DataSchemaField D_PLANTField = new DataSchemaField();
			D_PLANTField.Name = "D_PLANT";
			D_PLANTField.Type = typeof(string).ToString();
			D_PLANTField.Index = 14;
			fields.Add(D_PLANTField);
			 
			DataSchemaField PART_NOField = new DataSchemaField();
			PART_NOField.Name = "PART_NO";
			PART_NOField.Type = typeof(string).ToString();
			PART_NOField.Index = 15;
			fields.Add(PART_NOField);
			 
			DataSchemaField REQUEST_TIMEField = new DataSchemaField();
			REQUEST_TIMEField.Name = "REQUEST_TIME";
			REQUEST_TIMEField.Type = typeof(DateTime).ToString();
			REQUEST_TIMEField.Index = 16;
			fields.Add(REQUEST_TIMEField);
			 
			DataSchemaField DELIVER_TIMEField = new DataSchemaField();
			DELIVER_TIMEField.Name = "DELIVER_TIME";
			DELIVER_TIMEField.Type = typeof(DateTime).ToString();
			DELIVER_TIMEField.Index = 17;
			fields.Add(DELIVER_TIMEField);
			 
			DataSchemaField ALARM_TIMEField = new DataSchemaField();
			ALARM_TIMEField.Name = "ALARM_TIME";
			ALARM_TIMEField.Type = typeof(DateTime).ToString();
			ALARM_TIMEField.Index = 18;
			fields.Add(ALARM_TIMEField);
			 
			DataSchemaField ACTUAL_QUANTITYField = new DataSchemaField();
			ACTUAL_QUANTITYField.Name = "ACTUAL_QUANTITY";
			ACTUAL_QUANTITYField.Type = typeof(int).ToString();
			ACTUAL_QUANTITYField.Index = 19;
			fields.Add(ACTUAL_QUANTITYField);
			 
			DataSchemaField ROUTEField = new DataSchemaField();
			ROUTEField.Name = "ROUTE";
			ROUTEField.Type = typeof(string).ToString();
			ROUTEField.Index = 20;
			fields.Add(ROUTEField);
			 
			DataSchemaField ROUTE_COMBINATION_LIMITField = new DataSchemaField();
			ROUTE_COMBINATION_LIMITField.Name = "ROUTE_COMBINATION_LIMIT";
			ROUTE_COMBINATION_LIMITField.Type = typeof(int).ToString();
			ROUTE_COMBINATION_LIMITField.Index = 21;
			fields.Add(ROUTE_COMBINATION_LIMITField);
			 
			DataSchemaField ZONEField = new DataSchemaField();
			ZONEField.Name = "ZONE";
			ZONEField.Type = typeof(string).ToString();
			ZONEField.Index = 22;
			fields.Add(ZONEField);
			 
			DataSchemaField ZONE_SCHEDULE_TYPEField = new DataSchemaField();
			ZONE_SCHEDULE_TYPEField.Name = "ZONE_SCHEDULE_TYPE";
			ZONE_SCHEDULE_TYPEField.Type = typeof(int).ToString();
			ZONE_SCHEDULE_TYPEField.Index = 23;
			fields.Add(ZONE_SCHEDULE_TYPEField);
			 
			DataSchemaField TRIGGER_STATUSField = new DataSchemaField();
			TRIGGER_STATUSField.Name = "TRIGGER_STATUS";
			TRIGGER_STATUSField.Type = typeof(int).ToString();
			TRIGGER_STATUSField.Index = 24;
			fields.Add(TRIGGER_STATUSField);
			 
			DataSchemaField COMBINATION_TYPEField = new DataSchemaField();
			COMBINATION_TYPEField.Name = "COMBINATION_TYPE";
			COMBINATION_TYPEField.Type = typeof(int).ToString();
			COMBINATION_TYPEField.Index = 25;
			fields.Add(COMBINATION_TYPEField);
			 
			DataSchemaField PULL_TYPEField = new DataSchemaField();
			PULL_TYPEField.Name = "PULL_TYPE";
			PULL_TYPEField.Type = typeof(int).ToString();
			PULL_TYPEField.Index = 26;
			fields.Add(PULL_TYPEField);
			 
			DataSchemaField COMPULSORY_FLAGField = new DataSchemaField();
			COMPULSORY_FLAGField.Name = "COMPULSORY_FLAG";
			COMPULSORY_FLAGField.Type = typeof(int).ToString();
			COMPULSORY_FLAGField.Index = 27;
			fields.Add(COMPULSORY_FLAGField);
			 
			DataSchemaField MIN_STORAGEField = new DataSchemaField();
			MIN_STORAGEField.Name = "MIN_STORAGE";
			MIN_STORAGEField.Type = typeof(int).ToString();
			MIN_STORAGEField.Index = 28;
			fields.Add(MIN_STORAGEField);
			 
			DataSchemaField MAX_STORAGEField = new DataSchemaField();
			MAX_STORAGEField.Name = "MAX_STORAGE";
			MAX_STORAGEField.Type = typeof(int).ToString();
			MAX_STORAGEField.Index = 29;
			fields.Add(MAX_STORAGEField);
			 
			DataSchemaField CURRENT_STORAGEField = new DataSchemaField();
			CURRENT_STORAGEField.Name = "CURRENT_STORAGE";
			CURRENT_STORAGEField.Type = typeof(int).ToString();
			CURRENT_STORAGEField.Index = 30;
			fields.Add(CURRENT_STORAGEField);
			 
			DataSchemaField BUTTON_IDField = new DataSchemaField();
			BUTTON_IDField.Name = "BUTTON_ID";
			BUTTON_IDField.Type = typeof(string).ToString();
			BUTTON_IDField.Index = 31;
			fields.Add(BUTTON_IDField);
			 
			DataSchemaField TAG_REQUEST_SNField = new DataSchemaField();
			TAG_REQUEST_SNField.Name = "TAG_REQUEST_SN";
			TAG_REQUEST_SNField.Type = typeof(int).ToString();
			TAG_REQUEST_SNField.Index = 32;
			fields.Add(TAG_REQUEST_SNField);
			 
			DataSchemaField SESSION_SNField = new DataSchemaField();
			SESSION_SNField.Name = "SESSION_SN";
			SESSION_SNField.Type = typeof(int).ToString();
			SESSION_SNField.Index = 33;
			fields.Add(SESSION_SNField);
			 
			DataSchemaField SCREEN_LOCATIONField = new DataSchemaField();
			SCREEN_LOCATIONField.Name = "SCREEN_LOCATION";
			SCREEN_LOCATIONField.Type = typeof(string).ToString();
			SCREEN_LOCATIONField.Index = 34;
			fields.Add(SCREEN_LOCATIONField);
			 
			DataSchemaField BAHNHOF_NOField = new DataSchemaField();
			BAHNHOF_NOField.Name = "BAHNHOF_NO";
			BAHNHOF_NOField.Type = typeof(string).ToString();
			BAHNHOF_NOField.Index = 35;
			fields.Add(BAHNHOF_NOField);
			 
			DataSchemaField DOLLYField = new DataSchemaField();
			DOLLYField.Name = "DOLLY";
			DOLLYField.Type = typeof(string).ToString();
			DOLLYField.Index = 36;
			fields.Add(DOLLYField);
			 
			DataSchemaField WMS_SEND_TIMEField = new DataSchemaField();
			WMS_SEND_TIMEField.Name = "WMS_SEND_TIME";
			WMS_SEND_TIMEField.Type = typeof(DateTime).ToString();
			WMS_SEND_TIMEField.Index = 37;
			fields.Add(WMS_SEND_TIMEField);
			 
			DataSchemaField WMS_SEND_STATUSField = new DataSchemaField();
			WMS_SEND_STATUSField.Name = "WMS_SEND_STATUS";
			WMS_SEND_STATUSField.Type = typeof(int).ToString();
			WMS_SEND_STATUSField.Index = 38;
			fields.Add(WMS_SEND_STATUSField);
			 
			DataSchemaField SUPPLIER_NUMField = new DataSchemaField();
			SUPPLIER_NUMField.Name = "SUPPLIER_NUM";
			SUPPLIER_NUMField.Type = typeof(string).ToString();
			SUPPLIER_NUMField.Index = 39;
			fields.Add(SUPPLIER_NUMField);
			 
			DataSchemaField TRANS_SUPPLIER_NUMField = new DataSchemaField();
			TRANS_SUPPLIER_NUMField.Name = "TRANS_SUPPLIER_NUM";
			TRANS_SUPPLIER_NUMField.Type = typeof(string).ToString();
			TRANS_SUPPLIER_NUMField.Index = 40;
			fields.Add(TRANS_SUPPLIER_NUMField);
			 
			DataSchemaField INHOUSE_PACKAGE_MODELField = new DataSchemaField();
			INHOUSE_PACKAGE_MODELField.Name = "INHOUSE_PACKAGE_MODEL";
			INHOUSE_PACKAGE_MODELField.Type = typeof(string).ToString();
			INHOUSE_PACKAGE_MODELField.Index = 41;
			fields.Add(INHOUSE_PACKAGE_MODELField);
			 
			DataSchemaField INHOUSE_PACKAGEField = new DataSchemaField();
			INHOUSE_PACKAGEField.Name = "INHOUSE_PACKAGE";
			INHOUSE_PACKAGEField.Type = typeof(int).ToString();
			INHOUSE_PACKAGEField.Index = 42;
			fields.Add(INHOUSE_PACKAGEField);
			 
			DataSchemaField PICKUP_TIMEField = new DataSchemaField();
			PICKUP_TIMEField.Name = "PICKUP_TIME";
			PICKUP_TIMEField.Type = typeof(DateTime).ToString();
			PICKUP_TIMEField.Index = 43;
			fields.Add(PICKUP_TIMEField);
			 
			DataSchemaField ARRIVE_TIMEField = new DataSchemaField();
			ARRIVE_TIMEField.Name = "ARRIVE_TIME";
			ARRIVE_TIMEField.Type = typeof(DateTime).ToString();
			ARRIVE_TIMEField.Index = 44;
			fields.Add(ARRIVE_TIMEField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 45;
			fields.Add(COMMENTSField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 46;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 47;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField UPDATE_USERField = new DataSchemaField();
			UPDATE_USERField.Name = "UPDATE_USER";
			UPDATE_USERField.Type = typeof(string).ToString();
			UPDATE_USERField.Index = 48;
			fields.Add(UPDATE_USERField);
			 
			DataSchemaField UPDATE_DATEField = new DataSchemaField();
			UPDATE_DATEField.Name = "UPDATE_DATE";
			UPDATE_DATEField.Type = typeof(DateTime).ToString();
			UPDATE_DATEField.Index = 49;
			fields.Add(UPDATE_DATEField);
			 
			DataSchemaField RUNSHEET_NOField = new DataSchemaField();
			RUNSHEET_NOField.Name = "RUNSHEET_NO";
			RUNSHEET_NOField.Type = typeof(string).ToString();
			RUNSHEET_NOField.Index = 50;
			fields.Add(RUNSHEET_NOField);
			 
			DataSchemaField PRINT_STATEField = new DataSchemaField();
			PRINT_STATEField.Name = "PRINT_STATE";
			PRINT_STATEField.Type = typeof(int).ToString();
			PRINT_STATEField.Index = 51;
			fields.Add(PRINT_STATEField);
			 
			DataSchemaField PRINT_TIMESField = new DataSchemaField();
			PRINT_TIMESField.Name = "PRINT_TIMES";
			PRINT_TIMESField.Type = typeof(int).ToString();
			PRINT_TIMESField.Index = 52;
			fields.Add(PRINT_TIMESField);
			 
			DataSchemaField PLANT_ZONEField = new DataSchemaField();
			PLANT_ZONEField.Name = "PLANT_ZONE";
			PLANT_ZONEField.Type = typeof(string).ToString();
			PLANT_ZONEField.Index = 53;
			fields.Add(PLANT_ZONEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public int TaskSn{ get;set; }		
				
		[DataMember]
		public DateTime TaskTime{ get;set; }		
				
		[DataMember]
		public int TaskStatus{ get;set; }		
				
		[DataMember]
		public int TaskPriority{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string Location{ get;set; }		
				
		[DataMember]
		public int? Package{ get;set; }		
				
		[DataMember]
		public int? Usage{ get;set; }		
				
		[DataMember]
		public string ELocation{ get;set; }		
				
		[DataMember]
		public string EAssemblyLine{ get;set; }		
				
		[DataMember]
		public string EPlant{ get;set; }		
				
		[DataMember]
		public string DLocation{ get;set; }		
				
		[DataMember]
		public string DAssemblyLine{ get;set; }		
				
		[DataMember]
		public string DPlant{ get;set; }		
				
		[DataMember]
		public string PartNo{ get;set; }		
				
		[DataMember]
		public DateTime RequestTime{ get;set; }		
				
		[DataMember]
		public DateTime DeliverTime{ get;set; }		
				
		[DataMember]
		public DateTime AlarmTime{ get;set; }		
				
		[DataMember]
		public int ActualQuantity{ get;set; }		
				
		[DataMember]
		public string Route{ get;set; }		
				
		[DataMember]
		public int? RouteCombinationLimit{ get;set; }		
				
		[DataMember]
		public string Zone{ get;set; }		
				
		[DataMember]
		public int? ZoneScheduleType{ get;set; }		
				
		[DataMember]
		public int? TriggerStatus{ get;set; }		
				
		[DataMember]
		public int? CombinationType{ get;set; }		
				
		[DataMember]
		public int? PullType{ get;set; }		
				
		[DataMember]
		public int? CompulsoryFlag{ get;set; }		
				
		[DataMember]
		public int? MinStorage{ get;set; }		
				
		[DataMember]
		public int? MaxStorage{ get;set; }		
				
		[DataMember]
		public int? CurrentStorage{ get;set; }		
				
		[DataMember]
		public string ButtonId{ get;set; }		
				
		[DataMember]
		public int? TagRequestSn{ get;set; }		
				
		[DataMember]
		public int? SessionSn{ get;set; }		
				
		[DataMember]
		public string ScreenLocation{ get;set; }		
				
		[DataMember]
		public string BahnhofNo{ get;set; }		
				
		[DataMember]
		public string Dolly{ get;set; }		
				
		[DataMember]
		public DateTime? WmsSendTime{ get;set; }		
				
		[DataMember]
		public int? WmsSendStatus{ get;set; }		
				
		[DataMember]
		public string SupplierNum{ get;set; }		
				
		[DataMember]
		public string TransSupplierNum{ get;set; }		
				
		[DataMember]
		public string InhousePackageModel{ get;set; }		
				
		[DataMember]
		public int? InhousePackage{ get;set; }		
				
		[DataMember]
		public DateTime? PickupTime{ get;set; }		
				
		[DataMember]
		public DateTime? ArriveTime{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string UpdateUser{ get;set; }		
				
		[DataMember]
		public DateTime? UpdateDate{ get;set; }		
				
		[DataMember]
		public string RunsheetNo{ get;set; }		
				
				
		private int _PrintState = 0;
		
		[DataMember]	
		public int PrintState
		{
			get
			{
				return _PrintState;
			}
			set
			{
				_PrintState = value;
			}
		}
				
				
				
		private int _PrintTimes = 0;
		
		[DataMember]	
		public int PrintTimes
		{
			get
			{
				return _PrintTimes;
			}
			set
			{
				_PrintTimes = value;
			}
		}
				
				
		[DataMember]
		public string PlantZone{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			TaskInfo info = new TaskInfo();

			info.TaskSn = this.TaskSn;
			info.TaskTime = this.TaskTime;
			info.TaskStatus = this.TaskStatus;
			info.TaskPriority = this.TaskPriority;
			info.Plant = this.Plant;
			info.AssemblyLine = this.AssemblyLine;
			info.Location = this.Location;
			info.Package = this.Package;
			info.Usage = this.Usage;
			info.ELocation = this.ELocation;
			info.EAssemblyLine = this.EAssemblyLine;
			info.EPlant = this.EPlant;
			info.DLocation = this.DLocation;
			info.DAssemblyLine = this.DAssemblyLine;
			info.DPlant = this.DPlant;
			info.PartNo = this.PartNo;
			info.RequestTime = this.RequestTime;
			info.DeliverTime = this.DeliverTime;
			info.AlarmTime = this.AlarmTime;
			info.ActualQuantity = this.ActualQuantity;
			info.Route = this.Route;
			info.RouteCombinationLimit = this.RouteCombinationLimit;
			info.Zone = this.Zone;
			info.ZoneScheduleType = this.ZoneScheduleType;
			info.TriggerStatus = this.TriggerStatus;
			info.CombinationType = this.CombinationType;
			info.PullType = this.PullType;
			info.CompulsoryFlag = this.CompulsoryFlag;
			info.MinStorage = this.MinStorage;
			info.MaxStorage = this.MaxStorage;
			info.CurrentStorage = this.CurrentStorage;
			info.ButtonId = this.ButtonId;
			info.TagRequestSn = this.TagRequestSn;
			info.SessionSn = this.SessionSn;
			info.ScreenLocation = this.ScreenLocation;
			info.BahnhofNo = this.BahnhofNo;
			info.Dolly = this.Dolly;
			info.WmsSendTime = this.WmsSendTime;
			info.WmsSendStatus = this.WmsSendStatus;
			info.SupplierNum = this.SupplierNum;
			info.TransSupplierNum = this.TransSupplierNum;
			info.InhousePackageModel = this.InhousePackageModel;
			info.InhousePackage = this.InhousePackage;
			info.PickupTime = this.PickupTime;
			info.ArriveTime = this.ArriveTime;
			info.Comments = this.Comments;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.UpdateUser = this.UpdateUser;
			info.UpdateDate = this.UpdateDate;
			info.RunsheetNo = this.RunsheetNo;
			info.PrintState = this.PrintState;
			info.PrintTimes = this.PrintTimes;
			info.PlantZone = this.PlantZone;
			return info;			
		}
		 
		public TaskInfo Clone()
		{
			return ((ICloneable) this).Clone() as TaskInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// TaskInfoCollection对应表[TT_EPS_TASK]
    /// </summary>
	public partial class TaskInfoCollection : BusinessObjectCollection<TaskInfo>
	{
		public TaskInfoCollection():base("TT_EPS_TASK"){}	
	}
}
