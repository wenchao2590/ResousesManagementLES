#region Declaim
//---------------------------------------------------------------------------
// Name:		VechileConsumeLogInfo
// Function: 	Expose data in table VechileConsumeLog from database as business object to MES system.
// Tool:		T4
// CreateDate:	2017年12月21日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// VechileConsumeLogInfo对应表[TL_PCS_VECHILE_CONSUME_LOG]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class VechileConsumeLogInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public VechileConsumeLogInfo( 
					int aConsumeLogIdentity,

					string aKnr,

					string aRegionNo,

					int aFootprint,

					string aLocation,

					string aPartNo,

					decimal aCurrentPartCount,

					decimal aDosage,

					DateTime aMissingTimeStamp,

					DateTime aConsumedTimeStamp,

					string aPlant,

					string aAssemblyLine,

					string aPlantZone,

					string aWorkshop,

					string aReplacePart

				 
		) : this()
		{
			 
			ConsumeLogIdentity = aConsumeLogIdentity;
		 
			Knr = aKnr;
		 
			RegionNo = aRegionNo;
		 
			Footprint = aFootprint;
		 
			Location = aLocation;
		 
			PartNo = aPartNo;
		 
			CurrentPartCount = aCurrentPartCount;
		 
			Dosage = aDosage;
		 
			MissingTimeStamp = aMissingTimeStamp;
		 
			ConsumedTimeStamp = aConsumedTimeStamp;
		 
			Plant = aPlant;
		 
			AssemblyLine = aAssemblyLine;
		 
			PlantZone = aPlantZone;
		 
			Workshop = aWorkshop;
		 
			ReplacePart = aReplacePart;
		}
		
		public VechileConsumeLogInfo():base("TL_PCS_VECHILE_CONSUME_LOG")
		{
			List<string> keys = new List<string>();
			 			keys.Add("CONSUME_LOG_IDENTITY");              _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField CONSUME_LOG_IDENTITYField = new DataSchemaField();
			CONSUME_LOG_IDENTITYField.Name = "CONSUME_LOG_IDENTITY";
			CONSUME_LOG_IDENTITYField.Type = typeof(int).ToString();
			CONSUME_LOG_IDENTITYField.Index = 0;
			fields.Add(CONSUME_LOG_IDENTITYField);
			 
			DataSchemaField KNRField = new DataSchemaField();
			KNRField.Name = "KNR";
			KNRField.Type = typeof(string).ToString();
			KNRField.Index = 1;
			fields.Add(KNRField);
			 
			DataSchemaField REGION_NOField = new DataSchemaField();
			REGION_NOField.Name = "REGION_NO";
			REGION_NOField.Type = typeof(string).ToString();
			REGION_NOField.Index = 2;
			fields.Add(REGION_NOField);
			 
			DataSchemaField FOOTPRINTField = new DataSchemaField();
			FOOTPRINTField.Name = "FOOTPRINT";
			FOOTPRINTField.Type = typeof(int).ToString();
			FOOTPRINTField.Index = 3;
			fields.Add(FOOTPRINTField);
			 
			DataSchemaField LOCATIONField = new DataSchemaField();
			LOCATIONField.Name = "LOCATION";
			LOCATIONField.Type = typeof(string).ToString();
			LOCATIONField.Index = 4;
			fields.Add(LOCATIONField);
			 
			DataSchemaField PART_NOField = new DataSchemaField();
			PART_NOField.Name = "PART_NO";
			PART_NOField.Type = typeof(string).ToString();
			PART_NOField.Index = 5;
			fields.Add(PART_NOField);
			 
			DataSchemaField CURRENT_PART_COUNTField = new DataSchemaField();
			CURRENT_PART_COUNTField.Name = "CURRENT_PART_COUNT";
			CURRENT_PART_COUNTField.Type = typeof(decimal).ToString();
			CURRENT_PART_COUNTField.Index = 6;
			fields.Add(CURRENT_PART_COUNTField);
			 
			DataSchemaField DOSAGEField = new DataSchemaField();
			DOSAGEField.Name = "DOSAGE";
			DOSAGEField.Type = typeof(decimal).ToString();
			DOSAGEField.Index = 7;
			fields.Add(DOSAGEField);
			 
			DataSchemaField MISSING_TIME_STAMPField = new DataSchemaField();
			MISSING_TIME_STAMPField.Name = "MISSING_TIME_STAMP";
			MISSING_TIME_STAMPField.Type = typeof(DateTime).ToString();
			MISSING_TIME_STAMPField.Index = 8;
			fields.Add(MISSING_TIME_STAMPField);
			 
			DataSchemaField CONSUMED_TIME_STAMPField = new DataSchemaField();
			CONSUMED_TIME_STAMPField.Name = "CONSUMED_TIME_STAMP";
			CONSUMED_TIME_STAMPField.Type = typeof(DateTime).ToString();
			CONSUMED_TIME_STAMPField.Index = 9;
			fields.Add(CONSUMED_TIME_STAMPField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 10;
			fields.Add(PLANTField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 11;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField PLANT_ZONEField = new DataSchemaField();
			PLANT_ZONEField.Name = "PLANT_ZONE";
			PLANT_ZONEField.Type = typeof(string).ToString();
			PLANT_ZONEField.Index = 12;
			fields.Add(PLANT_ZONEField);
			 
			DataSchemaField WORKSHOPField = new DataSchemaField();
			WORKSHOPField.Name = "WORKSHOP";
			WORKSHOPField.Type = typeof(string).ToString();
			WORKSHOPField.Index = 13;
			fields.Add(WORKSHOPField);
			 
			DataSchemaField REPLACE_PARTField = new DataSchemaField();
			REPLACE_PARTField.Name = "REPLACE_PART";
			REPLACE_PARTField.Type = typeof(string).ToString();
			REPLACE_PARTField.Index = 14;
			fields.Add(REPLACE_PARTField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public int ConsumeLogIdentity{ get;set; }		
				
		[DataMember]
		public string Knr{ get;set; }		
				
		[DataMember]
		public string RegionNo{ get;set; }		
				
		[DataMember]
		public int? Footprint{ get;set; }		
				
		[DataMember]
		public string Location{ get;set; }		
				
		[DataMember]
		public string PartNo{ get;set; }		
				
		[DataMember]
		public decimal? CurrentPartCount{ get;set; }		
				
		[DataMember]
		public decimal? Dosage{ get;set; }		
				
		[DataMember]
		public DateTime? MissingTimeStamp{ get;set; }		
				
		[DataMember]
		public DateTime? ConsumedTimeStamp{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string PlantZone{ get;set; }		
				
		[DataMember]
		public string Workshop{ get;set; }		
				
		[DataMember]
		public string ReplacePart{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			VechileConsumeLogInfo info = new VechileConsumeLogInfo();

			info.ConsumeLogIdentity = this.ConsumeLogIdentity;
			info.Knr = this.Knr;
			info.RegionNo = this.RegionNo;
			info.Footprint = this.Footprint;
			info.Location = this.Location;
			info.PartNo = this.PartNo;
			info.CurrentPartCount = this.CurrentPartCount;
			info.Dosage = this.Dosage;
			info.MissingTimeStamp = this.MissingTimeStamp;
			info.ConsumedTimeStamp = this.ConsumedTimeStamp;
			info.Plant = this.Plant;
			info.AssemblyLine = this.AssemblyLine;
			info.PlantZone = this.PlantZone;
			info.Workshop = this.Workshop;
			info.ReplacePart = this.ReplacePart;
			return info;			
		}
		 
		public VechileConsumeLogInfo Clone()
		{
			return ((ICloneable) this).Clone() as VechileConsumeLogInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// VechileConsumeLogInfoCollection对应表[TL_PCS_VECHILE_CONSUME_LOG]
    /// </summary>
	public partial class VechileConsumeLogInfoCollection : BusinessObjectCollection<VechileConsumeLogInfo>
	{
		public VechileConsumeLogInfoCollection():base("TL_PCS_VECHILE_CONSUME_LOG"){}	
	}
}
