#region Declaim
//---------------------------------------------------------------------------
// Name:		WarehouseLocationInfo
// Function: 	Expose data in table WarehouseLocation from database as business object to MES system.
// Tool:		T4
// CreateDate:	2020年3月30日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// WarehouseLocationInfo对应表[TM_BAS_WAREHOUSE_LOCATION]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class WarehouseLocationInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public WarehouseLocationInfo( 
					string aPlant,

					string aWmNo,

					string aZoneNo,

					string aDloc,

					string aAssemblyLine,

					string aPlantZone,

					string aWorkshop,

					string aStorageLocationName,

					int aLocationType,

					int aSequenceNo,

					string aCountPartition,

					string aPartClassifyAreaNo,

					int aLaneNo,

					int aShelvesNo,

					int aLayerNo,

					int aGridNo,

					string aComments,

					string aModifyUser,

					string aCreateUser,

					long aId,

					DateTime aModifyDate,

					DateTime aCreateDate,

					Guid aFid,

					bool aValidFlag

				 
		) : this()
		{
			 
			Plant = aPlant;
		 
			WmNo = aWmNo;
		 
			ZoneNo = aZoneNo;
		 
			Dloc = aDloc;
		 
			AssemblyLine = aAssemblyLine;
		 
			PlantZone = aPlantZone;
		 
			Workshop = aWorkshop;
		 
			StorageLocationName = aStorageLocationName;
		 
			LocationType = aLocationType;
		 
			SequenceNo = aSequenceNo;
		 
			CountPartition = aCountPartition;
		 
			PartClassifyAreaNo = aPartClassifyAreaNo;
		 
			LaneNo = aLaneNo;
		 
			ShelvesNo = aShelvesNo;
		 
			LayerNo = aLayerNo;
		 
			GridNo = aGridNo;
		 
			Comments = aComments;
		 
			ModifyUser = aModifyUser;
		 
			CreateUser = aCreateUser;
		 
			Id = aId;
		 
			ModifyDate = aModifyDate;
		 
			CreateDate = aCreateDate;
		 
			Fid = aFid;
		 
			ValidFlag = aValidFlag;
		}
		
		public WarehouseLocationInfo():base("TM_BAS_WAREHOUSE_LOCATION")
		{
			List<string> keys = new List<string>();
			                    			keys.Add("ID");    _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 0;
			fields.Add(PLANTField);
			 
			DataSchemaField WM_NOField = new DataSchemaField();
			WM_NOField.Name = "WM_NO";
			WM_NOField.Type = typeof(string).ToString();
			WM_NOField.Index = 1;
			fields.Add(WM_NOField);
			 
			DataSchemaField ZONE_NOField = new DataSchemaField();
			ZONE_NOField.Name = "ZONE_NO";
			ZONE_NOField.Type = typeof(string).ToString();
			ZONE_NOField.Index = 2;
			fields.Add(ZONE_NOField);
			 
			DataSchemaField DLOCField = new DataSchemaField();
			DLOCField.Name = "DLOC";
			DLOCField.Type = typeof(string).ToString();
			DLOCField.Index = 3;
			fields.Add(DLOCField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 4;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField PLANT_ZONEField = new DataSchemaField();
			PLANT_ZONEField.Name = "PLANT_ZONE";
			PLANT_ZONEField.Type = typeof(string).ToString();
			PLANT_ZONEField.Index = 5;
			fields.Add(PLANT_ZONEField);
			 
			DataSchemaField WORKSHOPField = new DataSchemaField();
			WORKSHOPField.Name = "WORKSHOP";
			WORKSHOPField.Type = typeof(string).ToString();
			WORKSHOPField.Index = 6;
			fields.Add(WORKSHOPField);
			 
			DataSchemaField STORAGE_LOCATION_NAMEField = new DataSchemaField();
			STORAGE_LOCATION_NAMEField.Name = "STORAGE_LOCATION_NAME";
			STORAGE_LOCATION_NAMEField.Type = typeof(string).ToString();
			STORAGE_LOCATION_NAMEField.Index = 7;
			fields.Add(STORAGE_LOCATION_NAMEField);
			 
			DataSchemaField LOCATION_TYPEField = new DataSchemaField();
			LOCATION_TYPEField.Name = "LOCATION_TYPE";
			LOCATION_TYPEField.Type = typeof(int).ToString();
			LOCATION_TYPEField.Index = 8;
			fields.Add(LOCATION_TYPEField);
			 
			DataSchemaField SEQUENCE_NOField = new DataSchemaField();
			SEQUENCE_NOField.Name = "SEQUENCE_NO";
			SEQUENCE_NOField.Type = typeof(int).ToString();
			SEQUENCE_NOField.Index = 9;
			fields.Add(SEQUENCE_NOField);
			 
			DataSchemaField COUNT_PARTITIONField = new DataSchemaField();
			COUNT_PARTITIONField.Name = "COUNT_PARTITION";
			COUNT_PARTITIONField.Type = typeof(string).ToString();
			COUNT_PARTITIONField.Index = 10;
			fields.Add(COUNT_PARTITIONField);
			 
			DataSchemaField PART_CLASSIFY_AREA_NOField = new DataSchemaField();
			PART_CLASSIFY_AREA_NOField.Name = "PART_CLASSIFY_AREA_NO";
			PART_CLASSIFY_AREA_NOField.Type = typeof(string).ToString();
			PART_CLASSIFY_AREA_NOField.Index = 11;
			fields.Add(PART_CLASSIFY_AREA_NOField);
			 
			DataSchemaField LANE_NOField = new DataSchemaField();
			LANE_NOField.Name = "LANE_NO";
			LANE_NOField.Type = typeof(int).ToString();
			LANE_NOField.Index = 12;
			fields.Add(LANE_NOField);
			 
			DataSchemaField SHELVES_NOField = new DataSchemaField();
			SHELVES_NOField.Name = "SHELVES_NO";
			SHELVES_NOField.Type = typeof(int).ToString();
			SHELVES_NOField.Index = 13;
			fields.Add(SHELVES_NOField);
			 
			DataSchemaField LAYER_NOField = new DataSchemaField();
			LAYER_NOField.Name = "LAYER_NO";
			LAYER_NOField.Type = typeof(int).ToString();
			LAYER_NOField.Index = 14;
			fields.Add(LAYER_NOField);
			 
			DataSchemaField GRID_NOField = new DataSchemaField();
			GRID_NOField.Name = "GRID_NO";
			GRID_NOField.Type = typeof(int).ToString();
			GRID_NOField.Index = 15;
			fields.Add(GRID_NOField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 16;
			fields.Add(COMMENTSField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 17;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 18;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 19;
			fields.Add(IDField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 20;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 21;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 22;
			fields.Add(FIDField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 23;
			fields.Add(VALID_FLAGField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string WmNo{ get;set; }		
				
		[DataMember]
		public string ZoneNo{ get;set; }		
				
		[DataMember]
		public string Dloc{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string PlantZone{ get;set; }		
				
		[DataMember]
		public string Workshop{ get;set; }		
				
		[DataMember]
		public string StorageLocationName{ get;set; }		
				
		[DataMember]
		public int? LocationType{ get;set; }		
				
		[DataMember]
		public int? SequenceNo{ get;set; }		
				
		[DataMember]
		public string CountPartition{ get;set; }		
				
		[DataMember]
		public string PartClassifyAreaNo{ get;set; }		
				
		[DataMember]
		public int? LaneNo{ get;set; }		
				
		[DataMember]
		public int? ShelvesNo{ get;set; }		
				
		[DataMember]
		public int? LayerNo{ get;set; }		
				
		[DataMember]
		public int? GridNo{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
				
		private bool? _ValidFlag = true;
		
		[DataMember]	
		public bool? ValidFlag
		{
			get
			{
				return _ValidFlag;
			}
			set
			{
				_ValidFlag = value;
			}
		}
				
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			WarehouseLocationInfo info = new WarehouseLocationInfo();

			info.Plant = this.Plant;
			info.WmNo = this.WmNo;
			info.ZoneNo = this.ZoneNo;
			info.Dloc = this.Dloc;
			info.AssemblyLine = this.AssemblyLine;
			info.PlantZone = this.PlantZone;
			info.Workshop = this.Workshop;
			info.StorageLocationName = this.StorageLocationName;
			info.LocationType = this.LocationType;
			info.SequenceNo = this.SequenceNo;
			info.CountPartition = this.CountPartition;
			info.PartClassifyAreaNo = this.PartClassifyAreaNo;
			info.LaneNo = this.LaneNo;
			info.ShelvesNo = this.ShelvesNo;
			info.LayerNo = this.LayerNo;
			info.GridNo = this.GridNo;
			info.Comments = this.Comments;
			info.ModifyUser = this.ModifyUser;
			info.CreateUser = this.CreateUser;
			info.Id = this.Id;
			info.ModifyDate = this.ModifyDate;
			info.CreateDate = this.CreateDate;
			info.Fid = this.Fid;
			info.ValidFlag = this.ValidFlag;
			return info;			
		}
		 
		public WarehouseLocationInfo Clone()
		{
			return ((ICloneable) this).Clone() as WarehouseLocationInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// WarehouseLocationInfoCollection对应表[TM_BAS_WAREHOUSE_LOCATION]
    /// </summary>
	public partial class WarehouseLocationInfoCollection : BusinessObjectCollection<WarehouseLocationInfo>
	{
		public WarehouseLocationInfoCollection():base("TM_BAS_WAREHOUSE_LOCATION"){}	
	}
}
