#region Declaim
//---------------------------------------------------------------------------
// Name:		SapProductOrderInfo
// Function: 	Expose data in table SapProductOrder from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月24日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// SapProductOrderInfo对应表[TI_IFM_SAP_PRODUCT_ORDER]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class SapProductOrderInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public SapProductOrderInfo( 
					long aId,

					Guid aFid,

					Guid aLogFid,

					string aMatnr,

					string aDwerk,

					string aKdauf,

					string aKdpos,

					string aAufnr,

					bool aLockFlag,

					string aVerid,

					int aPsmng,

					string aOnlineSeq,

					DateTime aOnlineDate,

					DateTime aOfflineDate,

					string aSeq,

					string aNotice,

					string aCarColor,

					int aProcessFlag,

					DateTime aProcessTime,

					bool aValidFlag,

					string aCreateUser,

					DateTime aCreateDate,

					string aModifyUser,

					DateTime aModifyDate,

					string aComments,

					string aZsc

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			LogFid = aLogFid;
		 
			Matnr = aMatnr;
		 
			Dwerk = aDwerk;
		 
			Kdauf = aKdauf;
		 
			Kdpos = aKdpos;
		 
			Aufnr = aAufnr;
		 
			LockFlag = aLockFlag;
		 
			Verid = aVerid;
		 
			Psmng = aPsmng;
		 
			OnlineSeq = aOnlineSeq;
		 
			OnlineDate = aOnlineDate;
		 
			OfflineDate = aOfflineDate;
		 
			Seq = aSeq;
		 
			Notice = aNotice;
		 
			CarColor = aCarColor;
		 
			ProcessFlag = aProcessFlag;
		 
			ProcessTime = aProcessTime;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		 
			Comments = aComments;
		 
			Zsc = aZsc;
		}
		
		public SapProductOrderInfo():base("TI_IFM_SAP_PRODUCT_ORDER")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                         _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField LOG_FIDField = new DataSchemaField();
			LOG_FIDField.Name = "LOG_FID";
			LOG_FIDField.Type = typeof(Guid).ToString();
			LOG_FIDField.Index = 2;
			fields.Add(LOG_FIDField);
			 
			DataSchemaField MATNRField = new DataSchemaField();
			MATNRField.Name = "MATNR";
			MATNRField.Type = typeof(string).ToString();
			MATNRField.Index = 3;
			fields.Add(MATNRField);
			 
			DataSchemaField DWERKField = new DataSchemaField();
			DWERKField.Name = "DWERK";
			DWERKField.Type = typeof(string).ToString();
			DWERKField.Index = 4;
			fields.Add(DWERKField);
			 
			DataSchemaField KDAUFField = new DataSchemaField();
			KDAUFField.Name = "KDAUF";
			KDAUFField.Type = typeof(string).ToString();
			KDAUFField.Index = 5;
			fields.Add(KDAUFField);
			 
			DataSchemaField KDPOSField = new DataSchemaField();
			KDPOSField.Name = "KDPOS";
			KDPOSField.Type = typeof(string).ToString();
			KDPOSField.Index = 6;
			fields.Add(KDPOSField);
			 
			DataSchemaField AUFNRField = new DataSchemaField();
			AUFNRField.Name = "AUFNR";
			AUFNRField.Type = typeof(string).ToString();
			AUFNRField.Index = 7;
			fields.Add(AUFNRField);
			 
			DataSchemaField LOCK_FLAGField = new DataSchemaField();
			LOCK_FLAGField.Name = "LOCK_FLAG";
			LOCK_FLAGField.Type = typeof(bool).ToString();
			LOCK_FLAGField.Index = 8;
			fields.Add(LOCK_FLAGField);
			 
			DataSchemaField VERIDField = new DataSchemaField();
			VERIDField.Name = "VERID";
			VERIDField.Type = typeof(string).ToString();
			VERIDField.Index = 9;
			fields.Add(VERIDField);
			 
			DataSchemaField PSMNGField = new DataSchemaField();
			PSMNGField.Name = "PSMNG";
			PSMNGField.Type = typeof(int).ToString();
			PSMNGField.Index = 10;
			fields.Add(PSMNGField);
			 
			DataSchemaField ONLINE_SEQField = new DataSchemaField();
			ONLINE_SEQField.Name = "ONLINE_SEQ";
			ONLINE_SEQField.Type = typeof(string).ToString();
			ONLINE_SEQField.Index = 11;
			fields.Add(ONLINE_SEQField);
			 
			DataSchemaField ONLINE_DATEField = new DataSchemaField();
			ONLINE_DATEField.Name = "ONLINE_DATE";
			ONLINE_DATEField.Type = typeof(DateTime).ToString();
			ONLINE_DATEField.Index = 12;
			fields.Add(ONLINE_DATEField);
			 
			DataSchemaField OFFLINE_DATEField = new DataSchemaField();
			OFFLINE_DATEField.Name = "OFFLINE_DATE";
			OFFLINE_DATEField.Type = typeof(DateTime).ToString();
			OFFLINE_DATEField.Index = 13;
			fields.Add(OFFLINE_DATEField);
			 
			DataSchemaField SEQField = new DataSchemaField();
			SEQField.Name = "SEQ";
			SEQField.Type = typeof(string).ToString();
			SEQField.Index = 14;
			fields.Add(SEQField);
			 
			DataSchemaField NOTICEField = new DataSchemaField();
			NOTICEField.Name = "NOTICE";
			NOTICEField.Type = typeof(string).ToString();
			NOTICEField.Index = 15;
			fields.Add(NOTICEField);
			 
			DataSchemaField CAR_COLORField = new DataSchemaField();
			CAR_COLORField.Name = "CAR_COLOR";
			CAR_COLORField.Type = typeof(string).ToString();
			CAR_COLORField.Index = 16;
			fields.Add(CAR_COLORField);
			 
			DataSchemaField PROCESS_FLAGField = new DataSchemaField();
			PROCESS_FLAGField.Name = "PROCESS_FLAG";
			PROCESS_FLAGField.Type = typeof(int).ToString();
			PROCESS_FLAGField.Index = 17;
			fields.Add(PROCESS_FLAGField);
			 
			DataSchemaField PROCESS_TIMEField = new DataSchemaField();
			PROCESS_TIMEField.Name = "PROCESS_TIME";
			PROCESS_TIMEField.Type = typeof(DateTime).ToString();
			PROCESS_TIMEField.Index = 18;
			fields.Add(PROCESS_TIMEField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 19;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 20;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 21;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 22;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 23;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 24;
			fields.Add(COMMENTSField);
			 
			DataSchemaField ZSCField = new DataSchemaField();
			ZSCField.Name = "ZSC";
			ZSCField.Type = typeof(string).ToString();
			ZSCField.Index = 25;
			fields.Add(ZSCField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public Guid? LogFid{ get;set; }		
				
		[DataMember]
		public string Matnr{ get;set; }		
				
		[DataMember]
		public string Dwerk{ get;set; }		
				
		[DataMember]
		public string Kdauf{ get;set; }		
				
		[DataMember]
		public string Kdpos{ get;set; }		
				
		[DataMember]
		public string Aufnr{ get;set; }		
				
		[DataMember]
		public bool? LockFlag{ get;set; }		
				
		[DataMember]
		public string Verid{ get;set; }		
				
		[DataMember]
		public int? Psmng{ get;set; }		
				
		[DataMember]
		public string OnlineSeq{ get;set; }		
				
		[DataMember]
		public DateTime? OnlineDate{ get;set; }		
				
		[DataMember]
		public DateTime? OfflineDate{ get;set; }		
				
		[DataMember]
		public string Seq{ get;set; }		
				
		[DataMember]
		public string Notice{ get;set; }		
				
		[DataMember]
		public string CarColor{ get;set; }		
				
		[DataMember]
		public int? ProcessFlag{ get;set; }		
				
		[DataMember]
		public DateTime? ProcessTime{ get;set; }		
				
		[DataMember]
		public bool ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public string Zsc{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			SapProductOrderInfo info = new SapProductOrderInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.LogFid = this.LogFid;
			info.Matnr = this.Matnr;
			info.Dwerk = this.Dwerk;
			info.Kdauf = this.Kdauf;
			info.Kdpos = this.Kdpos;
			info.Aufnr = this.Aufnr;
			info.LockFlag = this.LockFlag;
			info.Verid = this.Verid;
			info.Psmng = this.Psmng;
			info.OnlineSeq = this.OnlineSeq;
			info.OnlineDate = this.OnlineDate;
			info.OfflineDate = this.OfflineDate;
			info.Seq = this.Seq;
			info.Notice = this.Notice;
			info.CarColor = this.CarColor;
			info.ProcessFlag = this.ProcessFlag;
			info.ProcessTime = this.ProcessTime;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			info.Comments = this.Comments;
			info.Zsc = this.Zsc;
			return info;			
		}
		 
		public SapProductOrderInfo Clone()
		{
			return ((ICloneable) this).Clone() as SapProductOrderInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// SapProductOrderInfoCollection对应表[TI_IFM_SAP_PRODUCT_ORDER]
    /// </summary>
	public partial class SapProductOrderInfoCollection : BusinessObjectCollection<SapProductOrderInfo>
	{
		public SapProductOrderInfoCollection():base("TI_IFM_SAP_PRODUCT_ORDER"){}	
	}
}
