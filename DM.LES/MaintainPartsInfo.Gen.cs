#region Declaim
//---------------------------------------------------------------------------
// Name:		MaintainPartsInfo
// Function: 	Expose data in table MaintainParts from database as business object to MES system.
// Tool:		T4
// CreateDate:	2020年3月30日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// MaintainPartsInfo对应表[TM_BAS_MAINTAIN_PARTS]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class MaintainPartsInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public MaintainPartsInfo( 
					long aId,

					string aPlant,

					string aAssemblyLine,

					string aPlantZone,

					string aWorkshop,

					string aSupplierNum,

					string aPartNo,

					string aPartCname,

					string aPartEname,

					string aPartNickname,

					string aPartUnits,

					decimal aPartWeight,

					string aPartCls,

					int aPartState,

					string aPartEngineer,

					string aPartPurchaser,

					string aDock,

					string aInhousePackageModel,

					int aInhousePackage,

					string aInboundPackageModel,

					int aInboundPackage,

					string aPackageModel,

					int aPackage,

					string aLogicalPk,

					string aMrpType,

					string aMrpControl,

					string aMrpGroup,

					int aOrderBatch,

					int aOrderAdvance,

					string aReorderPoint,

					string aPartGroup,

					string aPullPerson,

					string aInfoPerson,

					string aTransStyle,

					string aTransTruck,

					string aTruckSize,

					decimal aPackageFee,

					decimal aTransFee,

					decimal aStockFee,

					string aPurchaseStyle,

					string aSupplyStyle,

					string aRoute,

					string aTranType,

					string aTranSizes,

					string aComments,

					string aModifyUser,

					DateTime aModifyDate,

					string aCreateUser,

					Guid aFid,

					DateTime aCreateDate,

					bool aValidFlag

				 
		) : this()
		{
			 
			Id = aId;
		 
			Plant = aPlant;
		 
			AssemblyLine = aAssemblyLine;
		 
			PlantZone = aPlantZone;
		 
			Workshop = aWorkshop;
		 
			SupplierNum = aSupplierNum;
		 
			PartNo = aPartNo;
		 
			PartCname = aPartCname;
		 
			PartEname = aPartEname;
		 
			PartNickname = aPartNickname;
		 
			PartUnits = aPartUnits;
		 
			PartWeight = aPartWeight;
		 
			PartCls = aPartCls;
		 
			PartState = aPartState;
		 
			PartEngineer = aPartEngineer;
		 
			PartPurchaser = aPartPurchaser;
		 
			Dock = aDock;
		 
			InhousePackageModel = aInhousePackageModel;
		 
			InhousePackage = aInhousePackage;
		 
			InboundPackageModel = aInboundPackageModel;
		 
			InboundPackage = aInboundPackage;
		 
			PackageModel = aPackageModel;
		 
			Package = aPackage;
		 
			LogicalPk = aLogicalPk;
		 
			MrpType = aMrpType;
		 
			MrpControl = aMrpControl;
		 
			MrpGroup = aMrpGroup;
		 
			OrderBatch = aOrderBatch;
		 
			OrderAdvance = aOrderAdvance;
		 
			ReorderPoint = aReorderPoint;
		 
			PartGroup = aPartGroup;
		 
			PullPerson = aPullPerson;
		 
			InfoPerson = aInfoPerson;
		 
			TransStyle = aTransStyle;
		 
			TransTruck = aTransTruck;
		 
			TruckSize = aTruckSize;
		 
			PackageFee = aPackageFee;
		 
			TransFee = aTransFee;
		 
			StockFee = aStockFee;
		 
			PurchaseStyle = aPurchaseStyle;
		 
			SupplyStyle = aSupplyStyle;
		 
			Route = aRoute;
		 
			TranType = aTranType;
		 
			TranSizes = aTranSizes;
		 
			Comments = aComments;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		 
			CreateUser = aCreateUser;
		 
			Fid = aFid;
		 
			CreateDate = aCreateDate;
		 
			ValidFlag = aValidFlag;
		}
		
		public MaintainPartsInfo():base("TM_BAS_MAINTAIN_PARTS")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                                                  _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 1;
			fields.Add(PLANTField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 2;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField PLANT_ZONEField = new DataSchemaField();
			PLANT_ZONEField.Name = "PLANT_ZONE";
			PLANT_ZONEField.Type = typeof(string).ToString();
			PLANT_ZONEField.Index = 3;
			fields.Add(PLANT_ZONEField);
			 
			DataSchemaField WORKSHOPField = new DataSchemaField();
			WORKSHOPField.Name = "WORKSHOP";
			WORKSHOPField.Type = typeof(string).ToString();
			WORKSHOPField.Index = 4;
			fields.Add(WORKSHOPField);
			 
			DataSchemaField SUPPLIER_NUMField = new DataSchemaField();
			SUPPLIER_NUMField.Name = "SUPPLIER_NUM";
			SUPPLIER_NUMField.Type = typeof(string).ToString();
			SUPPLIER_NUMField.Index = 5;
			fields.Add(SUPPLIER_NUMField);
			 
			DataSchemaField PART_NOField = new DataSchemaField();
			PART_NOField.Name = "PART_NO";
			PART_NOField.Type = typeof(string).ToString();
			PART_NOField.Index = 6;
			fields.Add(PART_NOField);
			 
			DataSchemaField PART_CNAMEField = new DataSchemaField();
			PART_CNAMEField.Name = "PART_CNAME";
			PART_CNAMEField.Type = typeof(string).ToString();
			PART_CNAMEField.Index = 7;
			fields.Add(PART_CNAMEField);
			 
			DataSchemaField PART_ENAMEField = new DataSchemaField();
			PART_ENAMEField.Name = "PART_ENAME";
			PART_ENAMEField.Type = typeof(string).ToString();
			PART_ENAMEField.Index = 8;
			fields.Add(PART_ENAMEField);
			 
			DataSchemaField PART_NICKNAMEField = new DataSchemaField();
			PART_NICKNAMEField.Name = "PART_NICKNAME";
			PART_NICKNAMEField.Type = typeof(string).ToString();
			PART_NICKNAMEField.Index = 9;
			fields.Add(PART_NICKNAMEField);
			 
			DataSchemaField PART_UNITSField = new DataSchemaField();
			PART_UNITSField.Name = "PART_UNITS";
			PART_UNITSField.Type = typeof(string).ToString();
			PART_UNITSField.Index = 10;
			fields.Add(PART_UNITSField);
			 
			DataSchemaField PART_WEIGHTField = new DataSchemaField();
			PART_WEIGHTField.Name = "PART_WEIGHT";
			PART_WEIGHTField.Type = typeof(decimal).ToString();
			PART_WEIGHTField.Index = 11;
			fields.Add(PART_WEIGHTField);
			 
			DataSchemaField PART_CLSField = new DataSchemaField();
			PART_CLSField.Name = "PART_CLS";
			PART_CLSField.Type = typeof(string).ToString();
			PART_CLSField.Index = 12;
			fields.Add(PART_CLSField);
			 
			DataSchemaField PART_STATEField = new DataSchemaField();
			PART_STATEField.Name = "PART_STATE";
			PART_STATEField.Type = typeof(int).ToString();
			PART_STATEField.Index = 13;
			fields.Add(PART_STATEField);
			 
			DataSchemaField PART_ENGINEERField = new DataSchemaField();
			PART_ENGINEERField.Name = "PART_ENGINEER";
			PART_ENGINEERField.Type = typeof(string).ToString();
			PART_ENGINEERField.Index = 14;
			fields.Add(PART_ENGINEERField);
			 
			DataSchemaField PART_PURCHASERField = new DataSchemaField();
			PART_PURCHASERField.Name = "PART_PURCHASER";
			PART_PURCHASERField.Type = typeof(string).ToString();
			PART_PURCHASERField.Index = 15;
			fields.Add(PART_PURCHASERField);
			 
			DataSchemaField DOCKField = new DataSchemaField();
			DOCKField.Name = "DOCK";
			DOCKField.Type = typeof(string).ToString();
			DOCKField.Index = 16;
			fields.Add(DOCKField);
			 
			DataSchemaField INHOUSE_PACKAGE_MODELField = new DataSchemaField();
			INHOUSE_PACKAGE_MODELField.Name = "INHOUSE_PACKAGE_MODEL";
			INHOUSE_PACKAGE_MODELField.Type = typeof(string).ToString();
			INHOUSE_PACKAGE_MODELField.Index = 17;
			fields.Add(INHOUSE_PACKAGE_MODELField);
			 
			DataSchemaField INHOUSE_PACKAGEField = new DataSchemaField();
			INHOUSE_PACKAGEField.Name = "INHOUSE_PACKAGE";
			INHOUSE_PACKAGEField.Type = typeof(int).ToString();
			INHOUSE_PACKAGEField.Index = 18;
			fields.Add(INHOUSE_PACKAGEField);
			 
			DataSchemaField INBOUND_PACKAGE_MODELField = new DataSchemaField();
			INBOUND_PACKAGE_MODELField.Name = "INBOUND_PACKAGE_MODEL";
			INBOUND_PACKAGE_MODELField.Type = typeof(string).ToString();
			INBOUND_PACKAGE_MODELField.Index = 19;
			fields.Add(INBOUND_PACKAGE_MODELField);
			 
			DataSchemaField INBOUND_PACKAGEField = new DataSchemaField();
			INBOUND_PACKAGEField.Name = "INBOUND_PACKAGE";
			INBOUND_PACKAGEField.Type = typeof(int).ToString();
			INBOUND_PACKAGEField.Index = 20;
			fields.Add(INBOUND_PACKAGEField);
			 
			DataSchemaField PACKAGE_MODELField = new DataSchemaField();
			PACKAGE_MODELField.Name = "PACKAGE_MODEL";
			PACKAGE_MODELField.Type = typeof(string).ToString();
			PACKAGE_MODELField.Index = 21;
			fields.Add(PACKAGE_MODELField);
			 
			DataSchemaField PACKAGEField = new DataSchemaField();
			PACKAGEField.Name = "PACKAGE";
			PACKAGEField.Type = typeof(int).ToString();
			PACKAGEField.Index = 22;
			fields.Add(PACKAGEField);
			 
			DataSchemaField LOGICAL_PKField = new DataSchemaField();
			LOGICAL_PKField.Name = "LOGICAL_PK";
			LOGICAL_PKField.Type = typeof(string).ToString();
			LOGICAL_PKField.Index = 23;
			fields.Add(LOGICAL_PKField);
			 
			DataSchemaField MRP_TYPEField = new DataSchemaField();
			MRP_TYPEField.Name = "MRP_TYPE";
			MRP_TYPEField.Type = typeof(string).ToString();
			MRP_TYPEField.Index = 24;
			fields.Add(MRP_TYPEField);
			 
			DataSchemaField MRP_CONTROLField = new DataSchemaField();
			MRP_CONTROLField.Name = "MRP_CONTROL";
			MRP_CONTROLField.Type = typeof(string).ToString();
			MRP_CONTROLField.Index = 25;
			fields.Add(MRP_CONTROLField);
			 
			DataSchemaField MRP_GROUPField = new DataSchemaField();
			MRP_GROUPField.Name = "MRP_GROUP";
			MRP_GROUPField.Type = typeof(string).ToString();
			MRP_GROUPField.Index = 26;
			fields.Add(MRP_GROUPField);
			 
			DataSchemaField ORDER_BATCHField = new DataSchemaField();
			ORDER_BATCHField.Name = "ORDER_BATCH";
			ORDER_BATCHField.Type = typeof(int).ToString();
			ORDER_BATCHField.Index = 27;
			fields.Add(ORDER_BATCHField);
			 
			DataSchemaField ORDER_ADVANCEField = new DataSchemaField();
			ORDER_ADVANCEField.Name = "ORDER_ADVANCE";
			ORDER_ADVANCEField.Type = typeof(int).ToString();
			ORDER_ADVANCEField.Index = 28;
			fields.Add(ORDER_ADVANCEField);
			 
			DataSchemaField REORDER_POINTField = new DataSchemaField();
			REORDER_POINTField.Name = "REORDER_POINT";
			REORDER_POINTField.Type = typeof(string).ToString();
			REORDER_POINTField.Index = 29;
			fields.Add(REORDER_POINTField);
			 
			DataSchemaField PART_GROUPField = new DataSchemaField();
			PART_GROUPField.Name = "PART_GROUP";
			PART_GROUPField.Type = typeof(string).ToString();
			PART_GROUPField.Index = 30;
			fields.Add(PART_GROUPField);
			 
			DataSchemaField PULL_PERSONField = new DataSchemaField();
			PULL_PERSONField.Name = "PULL_PERSON";
			PULL_PERSONField.Type = typeof(string).ToString();
			PULL_PERSONField.Index = 31;
			fields.Add(PULL_PERSONField);
			 
			DataSchemaField INFO_PERSONField = new DataSchemaField();
			INFO_PERSONField.Name = "INFO_PERSON";
			INFO_PERSONField.Type = typeof(string).ToString();
			INFO_PERSONField.Index = 32;
			fields.Add(INFO_PERSONField);
			 
			DataSchemaField TRANS_STYLEField = new DataSchemaField();
			TRANS_STYLEField.Name = "TRANS_STYLE";
			TRANS_STYLEField.Type = typeof(string).ToString();
			TRANS_STYLEField.Index = 33;
			fields.Add(TRANS_STYLEField);
			 
			DataSchemaField TRANS_TRUCKField = new DataSchemaField();
			TRANS_TRUCKField.Name = "TRANS_TRUCK";
			TRANS_TRUCKField.Type = typeof(string).ToString();
			TRANS_TRUCKField.Index = 34;
			fields.Add(TRANS_TRUCKField);
			 
			DataSchemaField TRUCK_SIZEField = new DataSchemaField();
			TRUCK_SIZEField.Name = "TRUCK_SIZE";
			TRUCK_SIZEField.Type = typeof(string).ToString();
			TRUCK_SIZEField.Index = 35;
			fields.Add(TRUCK_SIZEField);
			 
			DataSchemaField PACKAGE_FEEField = new DataSchemaField();
			PACKAGE_FEEField.Name = "PACKAGE_FEE";
			PACKAGE_FEEField.Type = typeof(decimal).ToString();
			PACKAGE_FEEField.Index = 36;
			fields.Add(PACKAGE_FEEField);
			 
			DataSchemaField TRANS_FEEField = new DataSchemaField();
			TRANS_FEEField.Name = "TRANS_FEE";
			TRANS_FEEField.Type = typeof(decimal).ToString();
			TRANS_FEEField.Index = 37;
			fields.Add(TRANS_FEEField);
			 
			DataSchemaField STOCK_FEEField = new DataSchemaField();
			STOCK_FEEField.Name = "STOCK_FEE";
			STOCK_FEEField.Type = typeof(decimal).ToString();
			STOCK_FEEField.Index = 38;
			fields.Add(STOCK_FEEField);
			 
			DataSchemaField PURCHASE_STYLEField = new DataSchemaField();
			PURCHASE_STYLEField.Name = "PURCHASE_STYLE";
			PURCHASE_STYLEField.Type = typeof(string).ToString();
			PURCHASE_STYLEField.Index = 39;
			fields.Add(PURCHASE_STYLEField);
			 
			DataSchemaField SUPPLY_STYLEField = new DataSchemaField();
			SUPPLY_STYLEField.Name = "SUPPLY_STYLE";
			SUPPLY_STYLEField.Type = typeof(string).ToString();
			SUPPLY_STYLEField.Index = 40;
			fields.Add(SUPPLY_STYLEField);
			 
			DataSchemaField ROUTEField = new DataSchemaField();
			ROUTEField.Name = "ROUTE";
			ROUTEField.Type = typeof(string).ToString();
			ROUTEField.Index = 41;
			fields.Add(ROUTEField);
			 
			DataSchemaField TRAN_TYPEField = new DataSchemaField();
			TRAN_TYPEField.Name = "TRAN_TYPE";
			TRAN_TYPEField.Type = typeof(string).ToString();
			TRAN_TYPEField.Index = 42;
			fields.Add(TRAN_TYPEField);
			 
			DataSchemaField TRAN_SIZESField = new DataSchemaField();
			TRAN_SIZESField.Name = "TRAN_SIZES";
			TRAN_SIZESField.Type = typeof(string).ToString();
			TRAN_SIZESField.Index = 43;
			fields.Add(TRAN_SIZESField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 44;
			fields.Add(COMMENTSField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 45;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 46;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 47;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 48;
			fields.Add(FIDField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 49;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 50;
			fields.Add(VALID_FLAGField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string PlantZone{ get;set; }		
				
		[DataMember]
		public string Workshop{ get;set; }		
				
		[DataMember]
		public string SupplierNum{ get;set; }		
				
		[DataMember]
		public string PartNo{ get;set; }		
				
		[DataMember]
		public string PartCname{ get;set; }		
				
		[DataMember]
		public string PartEname{ get;set; }		
				
		[DataMember]
		public string PartNickname{ get;set; }		
				
		[DataMember]
		public string PartUnits{ get;set; }		
				
		[DataMember]
		public decimal? PartWeight{ get;set; }		
				
		[DataMember]
		public string PartCls{ get;set; }		
				
		[DataMember]
		public int? PartState{ get;set; }		
				
		[DataMember]
		public string PartEngineer{ get;set; }		
				
		[DataMember]
		public string PartPurchaser{ get;set; }		
				
		[DataMember]
		public string Dock{ get;set; }		
				
		[DataMember]
		public string InhousePackageModel{ get;set; }		
				
		[DataMember]
		public int? InhousePackage{ get;set; }		
				
		[DataMember]
		public string InboundPackageModel{ get;set; }		
				
		[DataMember]
		public int? InboundPackage{ get;set; }		
				
		[DataMember]
		public string PackageModel{ get;set; }		
				
		[DataMember]
		public int? Package{ get;set; }		
				
		[DataMember]
		public string LogicalPk{ get;set; }		
				
		[DataMember]
		public string MrpType{ get;set; }		
				
		[DataMember]
		public string MrpControl{ get;set; }		
				
		[DataMember]
		public string MrpGroup{ get;set; }		
				
		[DataMember]
		public int? OrderBatch{ get;set; }		
				
		[DataMember]
		public int? OrderAdvance{ get;set; }		
				
		[DataMember]
		public string ReorderPoint{ get;set; }		
				
		[DataMember]
		public string PartGroup{ get;set; }		
				
		[DataMember]
		public string PullPerson{ get;set; }		
				
		[DataMember]
		public string InfoPerson{ get;set; }		
				
		[DataMember]
		public string TransStyle{ get;set; }		
				
		[DataMember]
		public string TransTruck{ get;set; }		
				
		[DataMember]
		public string TruckSize{ get;set; }		
				
		[DataMember]
		public decimal? PackageFee{ get;set; }		
				
		[DataMember]
		public decimal? TransFee{ get;set; }		
				
		[DataMember]
		public decimal? StockFee{ get;set; }		
				
		[DataMember]
		public string PurchaseStyle{ get;set; }		
				
		[DataMember]
		public string SupplyStyle{ get;set; }		
				
		[DataMember]
		public string Route{ get;set; }		
				
		[DataMember]
		public string TranType{ get;set; }		
				
		[DataMember]
		public string TranSizes{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			MaintainPartsInfo info = new MaintainPartsInfo();

			info.Id = this.Id;
			info.Plant = this.Plant;
			info.AssemblyLine = this.AssemblyLine;
			info.PlantZone = this.PlantZone;
			info.Workshop = this.Workshop;
			info.SupplierNum = this.SupplierNum;
			info.PartNo = this.PartNo;
			info.PartCname = this.PartCname;
			info.PartEname = this.PartEname;
			info.PartNickname = this.PartNickname;
			info.PartUnits = this.PartUnits;
			info.PartWeight = this.PartWeight;
			info.PartCls = this.PartCls;
			info.PartState = this.PartState;
			info.PartEngineer = this.PartEngineer;
			info.PartPurchaser = this.PartPurchaser;
			info.Dock = this.Dock;
			info.InhousePackageModel = this.InhousePackageModel;
			info.InhousePackage = this.InhousePackage;
			info.InboundPackageModel = this.InboundPackageModel;
			info.InboundPackage = this.InboundPackage;
			info.PackageModel = this.PackageModel;
			info.Package = this.Package;
			info.LogicalPk = this.LogicalPk;
			info.MrpType = this.MrpType;
			info.MrpControl = this.MrpControl;
			info.MrpGroup = this.MrpGroup;
			info.OrderBatch = this.OrderBatch;
			info.OrderAdvance = this.OrderAdvance;
			info.ReorderPoint = this.ReorderPoint;
			info.PartGroup = this.PartGroup;
			info.PullPerson = this.PullPerson;
			info.InfoPerson = this.InfoPerson;
			info.TransStyle = this.TransStyle;
			info.TransTruck = this.TransTruck;
			info.TruckSize = this.TruckSize;
			info.PackageFee = this.PackageFee;
			info.TransFee = this.TransFee;
			info.StockFee = this.StockFee;
			info.PurchaseStyle = this.PurchaseStyle;
			info.SupplyStyle = this.SupplyStyle;
			info.Route = this.Route;
			info.TranType = this.TranType;
			info.TranSizes = this.TranSizes;
			info.Comments = this.Comments;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			info.CreateUser = this.CreateUser;
			info.Fid = this.Fid;
			info.CreateDate = this.CreateDate;
			info.ValidFlag = this.ValidFlag;
			return info;			
		}
		 
		public MaintainPartsInfo Clone()
		{
			return ((ICloneable) this).Clone() as MaintainPartsInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// MaintainPartsInfoCollection对应表[TM_BAS_MAINTAIN_PARTS]
    /// </summary>
	public partial class MaintainPartsInfoCollection : BusinessObjectCollection<MaintainPartsInfo>
	{
		public MaintainPartsInfoCollection():base("TM_BAS_MAINTAIN_PARTS"){}	
	}
}
