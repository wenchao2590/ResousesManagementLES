#region Declaim
//---------------------------------------------------------------------------
// Name:		PlanPartBoxInfo
// Function: 	Expose data in table PlanPartBox from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月5日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// PlanPartBoxInfo对应表[TM_MPM_PLAN_PART_BOX]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class PlanPartBoxInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public PlanPartBoxInfo( 
					long aId,

					Guid aFid,

					string aPartBoxCode,

					string aPartBoxName,

					string aSupplierNum,

					string aSupplierName,

					string aPlant,

					string aWorkshop,

					string aAssemblyLine,

					string aSourceZoneNo,

					string aSourceWmNo,

					string aTargetZoneNo,

					string aTargetWmNo,

					int aPickUpTime,

					int aDeliveryTime,

					int aDelayTime,

					string aDock,

					int aStatus,

					string aComments,

					bool aValidFlag,

					string aCreateUser,

					DateTime aCreateDate,

					string aModifyUser,

					DateTime aModifyDate

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			PartBoxCode = aPartBoxCode;
		 
			PartBoxName = aPartBoxName;
		 
			SupplierNum = aSupplierNum;
		 
			SupplierName = aSupplierName;
		 
			Plant = aPlant;
		 
			Workshop = aWorkshop;
		 
			AssemblyLine = aAssemblyLine;
		 
			SourceZoneNo = aSourceZoneNo;
		 
			SourceWmNo = aSourceWmNo;
		 
			TargetZoneNo = aTargetZoneNo;
		 
			TargetWmNo = aTargetWmNo;
		 
			PickUpTime = aPickUpTime;
		 
			DeliveryTime = aDeliveryTime;
		 
			DelayTime = aDelayTime;
		 
			Dock = aDock;
		 
			Status = aStatus;
		 
			Comments = aComments;
		 
			ValidFlag = aValidFlag;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			ModifyUser = aModifyUser;
		 
			ModifyDate = aModifyDate;
		}
		
		public PlanPartBoxInfo():base("TM_MPM_PLAN_PART_BOX")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                       _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField PART_BOX_CODEField = new DataSchemaField();
			PART_BOX_CODEField.Name = "PART_BOX_CODE";
			PART_BOX_CODEField.Type = typeof(string).ToString();
			PART_BOX_CODEField.Index = 2;
			fields.Add(PART_BOX_CODEField);
			 
			DataSchemaField PART_BOX_NAMEField = new DataSchemaField();
			PART_BOX_NAMEField.Name = "PART_BOX_NAME";
			PART_BOX_NAMEField.Type = typeof(string).ToString();
			PART_BOX_NAMEField.Index = 3;
			fields.Add(PART_BOX_NAMEField);
			 
			DataSchemaField SUPPLIER_NUMField = new DataSchemaField();
			SUPPLIER_NUMField.Name = "SUPPLIER_NUM";
			SUPPLIER_NUMField.Type = typeof(string).ToString();
			SUPPLIER_NUMField.Index = 4;
			fields.Add(SUPPLIER_NUMField);
			 
			DataSchemaField SUPPLIER_NAMEField = new DataSchemaField();
			SUPPLIER_NAMEField.Name = "SUPPLIER_NAME";
			SUPPLIER_NAMEField.Type = typeof(string).ToString();
			SUPPLIER_NAMEField.Index = 5;
			fields.Add(SUPPLIER_NAMEField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 6;
			fields.Add(PLANTField);
			 
			DataSchemaField WORKSHOPField = new DataSchemaField();
			WORKSHOPField.Name = "WORKSHOP";
			WORKSHOPField.Type = typeof(string).ToString();
			WORKSHOPField.Index = 7;
			fields.Add(WORKSHOPField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 8;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField SOURCE_ZONE_NOField = new DataSchemaField();
			SOURCE_ZONE_NOField.Name = "SOURCE_ZONE_NO";
			SOURCE_ZONE_NOField.Type = typeof(string).ToString();
			SOURCE_ZONE_NOField.Index = 9;
			fields.Add(SOURCE_ZONE_NOField);
			 
			DataSchemaField SOURCE_WM_NOField = new DataSchemaField();
			SOURCE_WM_NOField.Name = "SOURCE_WM_NO";
			SOURCE_WM_NOField.Type = typeof(string).ToString();
			SOURCE_WM_NOField.Index = 10;
			fields.Add(SOURCE_WM_NOField);
			 
			DataSchemaField TARGET_ZONE_NOField = new DataSchemaField();
			TARGET_ZONE_NOField.Name = "TARGET_ZONE_NO";
			TARGET_ZONE_NOField.Type = typeof(string).ToString();
			TARGET_ZONE_NOField.Index = 11;
			fields.Add(TARGET_ZONE_NOField);
			 
			DataSchemaField TARGET_WM_NOField = new DataSchemaField();
			TARGET_WM_NOField.Name = "TARGET_WM_NO";
			TARGET_WM_NOField.Type = typeof(string).ToString();
			TARGET_WM_NOField.Index = 12;
			fields.Add(TARGET_WM_NOField);
			 
			DataSchemaField PICK_UP_TIMEField = new DataSchemaField();
			PICK_UP_TIMEField.Name = "PICK_UP_TIME";
			PICK_UP_TIMEField.Type = typeof(int).ToString();
			PICK_UP_TIMEField.Index = 13;
			fields.Add(PICK_UP_TIMEField);
			 
			DataSchemaField DELIVERY_TIMEField = new DataSchemaField();
			DELIVERY_TIMEField.Name = "DELIVERY_TIME";
			DELIVERY_TIMEField.Type = typeof(int).ToString();
			DELIVERY_TIMEField.Index = 14;
			fields.Add(DELIVERY_TIMEField);
			 
			DataSchemaField DELAY_TIMEField = new DataSchemaField();
			DELAY_TIMEField.Name = "DELAY_TIME";
			DELAY_TIMEField.Type = typeof(int).ToString();
			DELAY_TIMEField.Index = 15;
			fields.Add(DELAY_TIMEField);
			 
			DataSchemaField DOCKField = new DataSchemaField();
			DOCKField.Name = "DOCK";
			DOCKField.Type = typeof(string).ToString();
			DOCKField.Index = 16;
			fields.Add(DOCKField);
			 
			DataSchemaField STATUSField = new DataSchemaField();
			STATUSField.Name = "STATUS";
			STATUSField.Type = typeof(int).ToString();
			STATUSField.Index = 17;
			fields.Add(STATUSField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 18;
			fields.Add(COMMENTSField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 19;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 20;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 21;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 22;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 23;
			fields.Add(MODIFY_DATEField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public string PartBoxCode{ get;set; }		
				
		[DataMember]
		public string PartBoxName{ get;set; }		
				
		[DataMember]
		public string SupplierNum{ get;set; }		
				
		[DataMember]
		public string SupplierName{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string Workshop{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string SourceZoneNo{ get;set; }		
				
		[DataMember]
		public string SourceWmNo{ get;set; }		
				
		[DataMember]
		public string TargetZoneNo{ get;set; }		
				
		[DataMember]
		public string TargetWmNo{ get;set; }		
				
		[DataMember]
		public int? PickUpTime{ get;set; }		
				
		[DataMember]
		public int? DeliveryTime{ get;set; }		
				
		[DataMember]
		public int? DelayTime{ get;set; }		
				
		[DataMember]
		public string Dock{ get;set; }		
				
		[DataMember]
		public int? Status{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? CreateDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			PlanPartBoxInfo info = new PlanPartBoxInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.PartBoxCode = this.PartBoxCode;
			info.PartBoxName = this.PartBoxName;
			info.SupplierNum = this.SupplierNum;
			info.SupplierName = this.SupplierName;
			info.Plant = this.Plant;
			info.Workshop = this.Workshop;
			info.AssemblyLine = this.AssemblyLine;
			info.SourceZoneNo = this.SourceZoneNo;
			info.SourceWmNo = this.SourceWmNo;
			info.TargetZoneNo = this.TargetZoneNo;
			info.TargetWmNo = this.TargetWmNo;
			info.PickUpTime = this.PickUpTime;
			info.DeliveryTime = this.DeliveryTime;
			info.DelayTime = this.DelayTime;
			info.Dock = this.Dock;
			info.Status = this.Status;
			info.Comments = this.Comments;
			info.ValidFlag = this.ValidFlag;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.ModifyUser = this.ModifyUser;
			info.ModifyDate = this.ModifyDate;
			return info;			
		}
		 
		public PlanPartBoxInfo Clone()
		{
			return ((ICloneable) this).Clone() as PlanPartBoxInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// PlanPartBoxInfoCollection对应表[TM_MPM_PLAN_PART_BOX]
    /// </summary>
	public partial class PlanPartBoxInfoCollection : BusinessObjectCollection<PlanPartBoxInfo>
	{
		public PlanPartBoxInfoCollection():base("TM_MPM_PLAN_PART_BOX"){}	
	}
}
