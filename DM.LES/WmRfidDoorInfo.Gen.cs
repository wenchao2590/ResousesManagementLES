#region Declaim
//---------------------------------------------------------------------------
// Name:		WmRfidDoorInfo
// Function: 	Expose data in table WmRfidDoor from database as business object to MES system.
// Tool:		T4
// CreateDate:	2017年12月27日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// WmRfidDoorInfo对应表[TT_CMM_WM_RFID_DOOR]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class WmRfidDoorInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public WmRfidDoorInfo( 
					string aWmNo,

					string aZoneNo,

					string aRfidDoorNo,

					string aComments,

					int aId,

					string aPlant

				 
		) : this()
		{
			 
			WmNo = aWmNo;
		 
			ZoneNo = aZoneNo;
		 
			RfidDoorNo = aRfidDoorNo;
		 
			Comments = aComments;
		 
			Id = aId;
		 
			Plant = aPlant;
		}
		
		public WmRfidDoorInfo():base("TT_CMM_WM_RFID_DOOR")
		{
			List<string> keys = new List<string>();
			     			keys.Add("ID"); _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField WM_NOField = new DataSchemaField();
			WM_NOField.Name = "WM_NO";
			WM_NOField.Type = typeof(string).ToString();
			WM_NOField.Index = 0;
			fields.Add(WM_NOField);
			 
			DataSchemaField ZONE_NOField = new DataSchemaField();
			ZONE_NOField.Name = "ZONE_NO";
			ZONE_NOField.Type = typeof(string).ToString();
			ZONE_NOField.Index = 1;
			fields.Add(ZONE_NOField);
			 
			DataSchemaField RFID_DOOR_NOField = new DataSchemaField();
			RFID_DOOR_NOField.Name = "RFID_DOOR_NO";
			RFID_DOOR_NOField.Type = typeof(string).ToString();
			RFID_DOOR_NOField.Index = 2;
			fields.Add(RFID_DOOR_NOField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 3;
			fields.Add(COMMENTSField);
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(int).ToString();
			IDField.Index = 4;
			fields.Add(IDField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 5;
			fields.Add(PLANTField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public string WmNo{ get;set; }		
				
		[DataMember]
		public string ZoneNo{ get;set; }		
				
		[DataMember]
		public string RfidDoorNo{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public int Id{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			WmRfidDoorInfo info = new WmRfidDoorInfo();

			info.WmNo = this.WmNo;
			info.ZoneNo = this.ZoneNo;
			info.RfidDoorNo = this.RfidDoorNo;
			info.Comments = this.Comments;
			info.Id = this.Id;
			info.Plant = this.Plant;
			return info;			
		}
		 
		public WmRfidDoorInfo Clone()
		{
			return ((ICloneable) this).Clone() as WmRfidDoorInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// WmRfidDoorInfoCollection对应表[TT_CMM_WM_RFID_DOOR]
    /// </summary>
	public partial class WmRfidDoorInfoCollection : BusinessObjectCollection<WmRfidDoorInfo>
	{
		public WmRfidDoorInfoCollection():base("TT_CMM_WM_RFID_DOOR"){}	
	}
}
