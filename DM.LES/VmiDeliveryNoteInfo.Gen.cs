#region Declaim
//---------------------------------------------------------------------------
// Name:		VmiDeliveryNoteInfo
// Function: 	Expose data in table VmiDeliveryNote from database as business object to MES system.
// Tool:		T4
// CreateDate:	2018年7月12日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// VmiDeliveryNoteInfo对应表[IFM_SRM_VMI_DELIVERY_NOTE]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class VmiDeliveryNoteInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public VmiDeliveryNoteInfo( 
					long aId,

					Guid aFid,

					Guid aLogFid,

					string aOrdercode,

					string aPlant,

					int aSourceordertype,

					string aDock,

					DateTime aPublishtime,

					string aSuppliercode,

					string aSuppliername,

					string aSourcezoneno,

					string aTargetzoneno,

					string aKeeper,

					DateTime aPlanshippingtime,

					DateTime aPlandeliverytime,

					string aRemark,

					bool aEmergencyflag,

					bool aDeleteflag,

					int aProcessFlag,

					DateTime aProcessTime,

					bool aValidFlag,

					DateTime aCreateDate,

					string aCreateUser,

					DateTime aModifyDate,

					string aModifyUser,

					string aComments

				 
		) : this()
		{
			 
			Id = aId;
		 
			Fid = aFid;
		 
			LogFid = aLogFid;
		 
			Ordercode = aOrdercode;
		 
			Plant = aPlant;
		 
			Sourceordertype = aSourceordertype;
		 
			Dock = aDock;
		 
			Publishtime = aPublishtime;
		 
			Suppliercode = aSuppliercode;
		 
			Suppliername = aSuppliername;
		 
			Sourcezoneno = aSourcezoneno;
		 
			Targetzoneno = aTargetzoneno;
		 
			Keeper = aKeeper;
		 
			Planshippingtime = aPlanshippingtime;
		 
			Plandeliverytime = aPlandeliverytime;
		 
			Remark = aRemark;
		 
			Emergencyflag = aEmergencyflag;
		 
			Deleteflag = aDeleteflag;
		 
			ProcessFlag = aProcessFlag;
		 
			ProcessTime = aProcessTime;
		 
			ValidFlag = aValidFlag;
		 
			CreateDate = aCreateDate;
		 
			CreateUser = aCreateUser;
		 
			ModifyDate = aModifyDate;
		 
			ModifyUser = aModifyUser;
		 
			Comments = aComments;
		}
		
		public VmiDeliveryNoteInfo():base("IFM_SRM_VMI_DELIVERY_NOTE")
		{
			List<string> keys = new List<string>();
			 			keys.Add("ID");                         _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 0;
			fields.Add(IDField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 1;
			fields.Add(FIDField);
			 
			DataSchemaField LOG_FIDField = new DataSchemaField();
			LOG_FIDField.Name = "LOG_FID";
			LOG_FIDField.Type = typeof(Guid).ToString();
			LOG_FIDField.Index = 2;
			fields.Add(LOG_FIDField);
			 
			DataSchemaField ORDERCODEField = new DataSchemaField();
			ORDERCODEField.Name = "ORDERCODE";
			ORDERCODEField.Type = typeof(string).ToString();
			ORDERCODEField.Index = 3;
			fields.Add(ORDERCODEField);
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 4;
			fields.Add(PLANTField);
			 
			DataSchemaField SOURCEORDERTYPEField = new DataSchemaField();
			SOURCEORDERTYPEField.Name = "SOURCEORDERTYPE";
			SOURCEORDERTYPEField.Type = typeof(int).ToString();
			SOURCEORDERTYPEField.Index = 5;
			fields.Add(SOURCEORDERTYPEField);
			 
			DataSchemaField DOCKField = new DataSchemaField();
			DOCKField.Name = "DOCK";
			DOCKField.Type = typeof(string).ToString();
			DOCKField.Index = 6;
			fields.Add(DOCKField);
			 
			DataSchemaField PUBLISHTIMEField = new DataSchemaField();
			PUBLISHTIMEField.Name = "PUBLISHTIME";
			PUBLISHTIMEField.Type = typeof(DateTime).ToString();
			PUBLISHTIMEField.Index = 7;
			fields.Add(PUBLISHTIMEField);
			 
			DataSchemaField SUPPLIERCODEField = new DataSchemaField();
			SUPPLIERCODEField.Name = "SUPPLIERCODE";
			SUPPLIERCODEField.Type = typeof(string).ToString();
			SUPPLIERCODEField.Index = 8;
			fields.Add(SUPPLIERCODEField);
			 
			DataSchemaField SUPPLIERNAMEField = new DataSchemaField();
			SUPPLIERNAMEField.Name = "SUPPLIERNAME";
			SUPPLIERNAMEField.Type = typeof(string).ToString();
			SUPPLIERNAMEField.Index = 9;
			fields.Add(SUPPLIERNAMEField);
			 
			DataSchemaField SOURCEZONENOField = new DataSchemaField();
			SOURCEZONENOField.Name = "SOURCEZONENO";
			SOURCEZONENOField.Type = typeof(string).ToString();
			SOURCEZONENOField.Index = 10;
			fields.Add(SOURCEZONENOField);
			 
			DataSchemaField TARGETZONENOField = new DataSchemaField();
			TARGETZONENOField.Name = "TARGETZONENO";
			TARGETZONENOField.Type = typeof(string).ToString();
			TARGETZONENOField.Index = 11;
			fields.Add(TARGETZONENOField);
			 
			DataSchemaField KEEPERField = new DataSchemaField();
			KEEPERField.Name = "KEEPER";
			KEEPERField.Type = typeof(string).ToString();
			KEEPERField.Index = 12;
			fields.Add(KEEPERField);
			 
			DataSchemaField PLANSHIPPINGTIMEField = new DataSchemaField();
			PLANSHIPPINGTIMEField.Name = "PLANSHIPPINGTIME";
			PLANSHIPPINGTIMEField.Type = typeof(DateTime).ToString();
			PLANSHIPPINGTIMEField.Index = 13;
			fields.Add(PLANSHIPPINGTIMEField);
			 
			DataSchemaField PLANDELIVERYTIMEField = new DataSchemaField();
			PLANDELIVERYTIMEField.Name = "PLANDELIVERYTIME";
			PLANDELIVERYTIMEField.Type = typeof(DateTime).ToString();
			PLANDELIVERYTIMEField.Index = 14;
			fields.Add(PLANDELIVERYTIMEField);
			 
			DataSchemaField REMARKField = new DataSchemaField();
			REMARKField.Name = "REMARK";
			REMARKField.Type = typeof(string).ToString();
			REMARKField.Index = 15;
			fields.Add(REMARKField);
			 
			DataSchemaField EMERGENCYFLAGField = new DataSchemaField();
			EMERGENCYFLAGField.Name = "EMERGENCYFLAG";
			EMERGENCYFLAGField.Type = typeof(bool).ToString();
			EMERGENCYFLAGField.Index = 16;
			fields.Add(EMERGENCYFLAGField);
			 
			DataSchemaField DELETEFLAGField = new DataSchemaField();
			DELETEFLAGField.Name = "DELETEFLAG";
			DELETEFLAGField.Type = typeof(bool).ToString();
			DELETEFLAGField.Index = 17;
			fields.Add(DELETEFLAGField);
			 
			DataSchemaField PROCESS_FLAGField = new DataSchemaField();
			PROCESS_FLAGField.Name = "PROCESS_FLAG";
			PROCESS_FLAGField.Type = typeof(int).ToString();
			PROCESS_FLAGField.Index = 18;
			fields.Add(PROCESS_FLAGField);
			 
			DataSchemaField PROCESS_TIMEField = new DataSchemaField();
			PROCESS_TIMEField.Name = "PROCESS_TIME";
			PROCESS_TIMEField.Type = typeof(DateTime).ToString();
			PROCESS_TIMEField.Index = 19;
			fields.Add(PROCESS_TIMEField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(bool).ToString();
			VALID_FLAGField.Index = 20;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 21;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 22;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 23;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 24;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 25;
			fields.Add(COMMENTSField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		[DataMember]
		public Guid? LogFid{ get;set; }		
				
		[DataMember]
		public string Ordercode{ get;set; }		
				
		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public int? Sourceordertype{ get;set; }		
				
		[DataMember]
		public string Dock{ get;set; }		
				
		[DataMember]
		public DateTime? Publishtime{ get;set; }		
				
		[DataMember]
		public string Suppliercode{ get;set; }		
				
		[DataMember]
		public string Suppliername{ get;set; }		
				
		[DataMember]
		public string Sourcezoneno{ get;set; }		
				
		[DataMember]
		public string Targetzoneno{ get;set; }		
				
		[DataMember]
		public string Keeper{ get;set; }		
				
		[DataMember]
		public DateTime? Planshippingtime{ get;set; }		
				
		[DataMember]
		public DateTime? Plandeliverytime{ get;set; }		
				
		[DataMember]
		public string Remark{ get;set; }		
				
		[DataMember]
		public bool? Emergencyflag{ get;set; }		
				
		[DataMember]
		public bool? Deleteflag{ get;set; }		
				
		[DataMember]
		public int? ProcessFlag{ get;set; }		
				
		[DataMember]
		public DateTime? ProcessTime{ get;set; }		
				
		[DataMember]
		public bool? ValidFlag{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			VmiDeliveryNoteInfo info = new VmiDeliveryNoteInfo();

			info.Id = this.Id;
			info.Fid = this.Fid;
			info.LogFid = this.LogFid;
			info.Ordercode = this.Ordercode;
			info.Plant = this.Plant;
			info.Sourceordertype = this.Sourceordertype;
			info.Dock = this.Dock;
			info.Publishtime = this.Publishtime;
			info.Suppliercode = this.Suppliercode;
			info.Suppliername = this.Suppliername;
			info.Sourcezoneno = this.Sourcezoneno;
			info.Targetzoneno = this.Targetzoneno;
			info.Keeper = this.Keeper;
			info.Planshippingtime = this.Planshippingtime;
			info.Plandeliverytime = this.Plandeliverytime;
			info.Remark = this.Remark;
			info.Emergencyflag = this.Emergencyflag;
			info.Deleteflag = this.Deleteflag;
			info.ProcessFlag = this.ProcessFlag;
			info.ProcessTime = this.ProcessTime;
			info.ValidFlag = this.ValidFlag;
			info.CreateDate = this.CreateDate;
			info.CreateUser = this.CreateUser;
			info.ModifyDate = this.ModifyDate;
			info.ModifyUser = this.ModifyUser;
			info.Comments = this.Comments;
			return info;			
		}
		 
		public VmiDeliveryNoteInfo Clone()
		{
			return ((ICloneable) this).Clone() as VmiDeliveryNoteInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// VmiDeliveryNoteInfoCollection对应表[IFM_SRM_VMI_DELIVERY_NOTE]
    /// </summary>
	public partial class VmiDeliveryNoteInfoCollection : BusinessObjectCollection<VmiDeliveryNoteInfo>
	{
		public VmiDeliveryNoteInfoCollection():base("IFM_SRM_VMI_DELIVERY_NOTE"){}	
	}
}
