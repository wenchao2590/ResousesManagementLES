#region Declaim
//---------------------------------------------------------------------------
// Name:		RouteBoxPartsInfo
// Function: 	Expose data in table RouteBoxParts from database as business object to MES system.
// Tool:		T4
// CreateDate:	2017年11月7日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// RouteBoxPartsInfo对应表[TM_PCS_ROUTE_BOX_PARTS]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class RouteBoxPartsInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public RouteBoxPartsInfo( 
					string aPlant,

					string aAssemblyLine,

					string aBoxParts,

					string aBoxPartsName,

					string aPlantZone,

					string aWorkshop,

					string aSupplierNum,

					string aTransSupplierNum,

					int aAdvanceConsumeFootprint,

					int aDelayTime,

					int aTransportTime,

					int aOnlineTime,

					int aIsOrganizeSheet,

					int aRegionIdentity,

					int aBoxPartsState,

					string aComments,

					string aCreateUser,

					DateTime aCreateDate,

					string aUpdateUser,

					DateTime aUpdateDate,

					string aRoute,

					int aIsCreateTask

				 
		) : this()
		{
			 
			Plant = aPlant;
		 
			AssemblyLine = aAssemblyLine;
		 
			BoxParts = aBoxParts;
		 
			BoxPartsName = aBoxPartsName;
		 
			PlantZone = aPlantZone;
		 
			Workshop = aWorkshop;
		 
			SupplierNum = aSupplierNum;
		 
			TransSupplierNum = aTransSupplierNum;
		 
			AdvanceConsumeFootprint = aAdvanceConsumeFootprint;
		 
			DelayTime = aDelayTime;
		 
			TransportTime = aTransportTime;
		 
			OnlineTime = aOnlineTime;
		 
			IsOrganizeSheet = aIsOrganizeSheet;
		 
			RegionIdentity = aRegionIdentity;
		 
			BoxPartsState = aBoxPartsState;
		 
			Comments = aComments;
		 
			CreateUser = aCreateUser;
		 
			CreateDate = aCreateDate;
		 
			UpdateUser = aUpdateUser;
		 
			UpdateDate = aUpdateDate;
		 
			Route = aRoute;
		 
			IsCreateTask = aIsCreateTask;
		}
		
		public RouteBoxPartsInfo():base("TM_PCS_ROUTE_BOX_PARTS")
		{
			List<string> keys = new List<string>();
			 			keys.Add("PLANT"); 			keys.Add("ASSEMBLY_LINE"); 			keys.Add("BOX_PARTS");                   _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 0;
			fields.Add(PLANTField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 1;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField BOX_PARTSField = new DataSchemaField();
			BOX_PARTSField.Name = "BOX_PARTS";
			BOX_PARTSField.Type = typeof(string).ToString();
			BOX_PARTSField.Index = 2;
			fields.Add(BOX_PARTSField);
			 
			DataSchemaField BOX_PARTS_NAMEField = new DataSchemaField();
			BOX_PARTS_NAMEField.Name = "BOX_PARTS_NAME";
			BOX_PARTS_NAMEField.Type = typeof(string).ToString();
			BOX_PARTS_NAMEField.Index = 3;
			fields.Add(BOX_PARTS_NAMEField);
			 
			DataSchemaField PLANT_ZONEField = new DataSchemaField();
			PLANT_ZONEField.Name = "PLANT_ZONE";
			PLANT_ZONEField.Type = typeof(string).ToString();
			PLANT_ZONEField.Index = 4;
			fields.Add(PLANT_ZONEField);
			 
			DataSchemaField WORKSHOPField = new DataSchemaField();
			WORKSHOPField.Name = "WORKSHOP";
			WORKSHOPField.Type = typeof(string).ToString();
			WORKSHOPField.Index = 5;
			fields.Add(WORKSHOPField);
			 
			DataSchemaField SUPPLIER_NUMField = new DataSchemaField();
			SUPPLIER_NUMField.Name = "SUPPLIER_NUM";
			SUPPLIER_NUMField.Type = typeof(string).ToString();
			SUPPLIER_NUMField.Index = 6;
			fields.Add(SUPPLIER_NUMField);
			 
			DataSchemaField TRANS_SUPPLIER_NUMField = new DataSchemaField();
			TRANS_SUPPLIER_NUMField.Name = "TRANS_SUPPLIER_NUM";
			TRANS_SUPPLIER_NUMField.Type = typeof(string).ToString();
			TRANS_SUPPLIER_NUMField.Index = 7;
			fields.Add(TRANS_SUPPLIER_NUMField);
			 
			DataSchemaField ADVANCE_CONSUME_FOOTPRINTField = new DataSchemaField();
			ADVANCE_CONSUME_FOOTPRINTField.Name = "ADVANCE_CONSUME_FOOTPRINT";
			ADVANCE_CONSUME_FOOTPRINTField.Type = typeof(int).ToString();
			ADVANCE_CONSUME_FOOTPRINTField.Index = 8;
			fields.Add(ADVANCE_CONSUME_FOOTPRINTField);
			 
			DataSchemaField DELAY_TIMEField = new DataSchemaField();
			DELAY_TIMEField.Name = "DELAY_TIME";
			DELAY_TIMEField.Type = typeof(int).ToString();
			DELAY_TIMEField.Index = 9;
			fields.Add(DELAY_TIMEField);
			 
			DataSchemaField TRANSPORT_TIMEField = new DataSchemaField();
			TRANSPORT_TIMEField.Name = "TRANSPORT_TIME";
			TRANSPORT_TIMEField.Type = typeof(int).ToString();
			TRANSPORT_TIMEField.Index = 10;
			fields.Add(TRANSPORT_TIMEField);
			 
			DataSchemaField ONLINE_TIMEField = new DataSchemaField();
			ONLINE_TIMEField.Name = "ONLINE_TIME";
			ONLINE_TIMEField.Type = typeof(int).ToString();
			ONLINE_TIMEField.Index = 11;
			fields.Add(ONLINE_TIMEField);
			 
			DataSchemaField IS_ORGANIZE_SHEETField = new DataSchemaField();
			IS_ORGANIZE_SHEETField.Name = "IS_ORGANIZE_SHEET";
			IS_ORGANIZE_SHEETField.Type = typeof(int).ToString();
			IS_ORGANIZE_SHEETField.Index = 12;
			fields.Add(IS_ORGANIZE_SHEETField);
			 
			DataSchemaField REGION_IDENTITYField = new DataSchemaField();
			REGION_IDENTITYField.Name = "REGION_IDENTITY";
			REGION_IDENTITYField.Type = typeof(int).ToString();
			REGION_IDENTITYField.Index = 13;
			fields.Add(REGION_IDENTITYField);
			 
			DataSchemaField BOX_PARTS_STATEField = new DataSchemaField();
			BOX_PARTS_STATEField.Name = "BOX_PARTS_STATE";
			BOX_PARTS_STATEField.Type = typeof(int).ToString();
			BOX_PARTS_STATEField.Index = 14;
			fields.Add(BOX_PARTS_STATEField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 15;
			fields.Add(COMMENTSField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 16;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 17;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField UPDATE_USERField = new DataSchemaField();
			UPDATE_USERField.Name = "UPDATE_USER";
			UPDATE_USERField.Type = typeof(string).ToString();
			UPDATE_USERField.Index = 18;
			fields.Add(UPDATE_USERField);
			 
			DataSchemaField UPDATE_DATEField = new DataSchemaField();
			UPDATE_DATEField.Name = "UPDATE_DATE";
			UPDATE_DATEField.Type = typeof(DateTime).ToString();
			UPDATE_DATEField.Index = 19;
			fields.Add(UPDATE_DATEField);
			 
			DataSchemaField ROUTEField = new DataSchemaField();
			ROUTEField.Name = "ROUTE";
			ROUTEField.Type = typeof(string).ToString();
			ROUTEField.Index = 20;
			fields.Add(ROUTEField);
			 
			DataSchemaField IS_CREATE_TASKField = new DataSchemaField();
			IS_CREATE_TASKField.Name = "IS_CREATE_TASK";
			IS_CREATE_TASKField.Type = typeof(int).ToString();
			IS_CREATE_TASKField.Index = 21;
			fields.Add(IS_CREATE_TASKField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string BoxParts{ get;set; }		
				
		[DataMember]
		public string BoxPartsName{ get;set; }		
				
		[DataMember]
		public string PlantZone{ get;set; }		
				
		[DataMember]
		public string Workshop{ get;set; }		
				
		[DataMember]
		public string SupplierNum{ get;set; }		
				
		[DataMember]
		public string TransSupplierNum{ get;set; }		
				
		[DataMember]
		public int? AdvanceConsumeFootprint{ get;set; }		
				
		[DataMember]
		public int? DelayTime{ get;set; }		
				
		[DataMember]
		public int? TransportTime{ get;set; }		
				
		[DataMember]
		public int? OnlineTime{ get;set; }		
				
		[DataMember]
		public int? IsOrganizeSheet{ get;set; }		
				
		[DataMember]
		public int? RegionIdentity{ get;set; }		
				
		[DataMember]
		public int? BoxPartsState{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public string UpdateUser{ get;set; }		
				
		[DataMember]
		public DateTime? UpdateDate{ get;set; }		
				
		[DataMember]
		public string Route{ get;set; }		
				
		[DataMember]
		public int? IsCreateTask{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			RouteBoxPartsInfo info = new RouteBoxPartsInfo();

			info.Plant = this.Plant;
			info.AssemblyLine = this.AssemblyLine;
			info.BoxParts = this.BoxParts;
			info.BoxPartsName = this.BoxPartsName;
			info.PlantZone = this.PlantZone;
			info.Workshop = this.Workshop;
			info.SupplierNum = this.SupplierNum;
			info.TransSupplierNum = this.TransSupplierNum;
			info.AdvanceConsumeFootprint = this.AdvanceConsumeFootprint;
			info.DelayTime = this.DelayTime;
			info.TransportTime = this.TransportTime;
			info.OnlineTime = this.OnlineTime;
			info.IsOrganizeSheet = this.IsOrganizeSheet;
			info.RegionIdentity = this.RegionIdentity;
			info.BoxPartsState = this.BoxPartsState;
			info.Comments = this.Comments;
			info.CreateUser = this.CreateUser;
			info.CreateDate = this.CreateDate;
			info.UpdateUser = this.UpdateUser;
			info.UpdateDate = this.UpdateDate;
			info.Route = this.Route;
			info.IsCreateTask = this.IsCreateTask;
			return info;			
		}
		 
		public RouteBoxPartsInfo Clone()
		{
			return ((ICloneable) this).Clone() as RouteBoxPartsInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// RouteBoxPartsInfoCollection对应表[TM_PCS_ROUTE_BOX_PARTS]
    /// </summary>
	public partial class RouteBoxPartsInfoCollection : BusinessObjectCollection<RouteBoxPartsInfo>
	{
		public RouteBoxPartsInfoCollection():base("TM_PCS_ROUTE_BOX_PARTS"){}	
	}
}
