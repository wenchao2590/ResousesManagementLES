#region Declaim
//---------------------------------------------------------------------------
// Name:		MaintainInhouseLogisticStandardInfo
// Function: 	Expose data in table MaintainInhouseLogisticStandard from database as business object to MES system.
// Tool:		T4
// CreateDate:	2020年3月30日
// <auto-generated>
//     This code was generated by a tool. 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------
#endregion 

#region Imported Namespace

using Infrustructure.Data;
using Infrustructure.Data.Integration;
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

#endregion

namespace DM.LES 
{   
	/// <summary>
    /// MaintainInhouseLogisticStandardInfo对应表[TM_BAS_MAINTAIN_INHOUSE_LOGISTIC_STANDARD]
    /// </summary>	
	[Serializable] 
	[DataContract]	
    public partial class MaintainInhouseLogisticStandardInfo : BusinessObject, ICloneable 
	{		  
		#region Constructors
		
		public MaintainInhouseLogisticStandardInfo( 
					string aPlant,

					string aAssemblyLine,

					string aPlantZone,

					string aWorkshop,

					string aSupplierNum,

					string aTransSupplierNum,

					string aPartNo,

					string aPartCname,

					string aPartEname,

					string aPartNickname,

					string aWorkshopSection,

					string aLocation,

					string aInPlantLogisticMode,

					string aInPlantSystemMode,

					string aInPlantLogisticPartClass,

					string aInhouseMode,

					string aInhouseSystemMode,

					string aInhousePartClass,

					string aLogicalPk,

					string aStorageLocation,

					string aSequenceNo,

					int aIsActive,

					int aIsRepack,

					string aRepackRoute,

					bool aIsTriggerPull,

					string aWmNo,

					string aZoneNo,

					string aDloc,

					string aInboundPackageModel,

					int aInboundPackage,

					string aRoute,

					string aTranType,

					string aTranStyle,

					string aTranSizes,

					string aCardNo,

					int aEmgTime,

					string aEloc,

					string aBusinessPk,

					string aCountType,

					string aDock,

					string aComments,

					int aMin,

					int aMax,

					string aTWmNo,

					string aSWmNo,

					string aTZoneNo,

					string aSZoneNo,

					int aMinPullBox,

					int aBatchPullBox,

					int aStatus,

					int aKanbanCircleCnt,

					int aSettlementflag,

					string aModifyUser,

					string aCreateUser,

					long aId,

					DateTime aModifyDate,

					int aValidFlag,

					DateTime aCreateDate,

					Guid aFid

				 
		) : this()
		{
			 
			Plant = aPlant;
		 
			AssemblyLine = aAssemblyLine;
		 
			PlantZone = aPlantZone;
		 
			Workshop = aWorkshop;
		 
			SupplierNum = aSupplierNum;
		 
			TransSupplierNum = aTransSupplierNum;
		 
			PartNo = aPartNo;
		 
			PartCname = aPartCname;
		 
			PartEname = aPartEname;
		 
			PartNickname = aPartNickname;
		 
			WorkshopSection = aWorkshopSection;
		 
			Location = aLocation;
		 
			InPlantLogisticMode = aInPlantLogisticMode;
		 
			InPlantSystemMode = aInPlantSystemMode;
		 
			InPlantLogisticPartClass = aInPlantLogisticPartClass;
		 
			InhouseMode = aInhouseMode;
		 
			InhouseSystemMode = aInhouseSystemMode;
		 
			InhousePartClass = aInhousePartClass;
		 
			LogicalPk = aLogicalPk;
		 
			StorageLocation = aStorageLocation;
		 
			SequenceNo = aSequenceNo;
		 
			IsActive = aIsActive;
		 
			IsRepack = aIsRepack;
		 
			RepackRoute = aRepackRoute;
		 
			IsTriggerPull = aIsTriggerPull;
		 
			WmNo = aWmNo;
		 
			ZoneNo = aZoneNo;
		 
			Dloc = aDloc;
		 
			InboundPackageModel = aInboundPackageModel;
		 
			InboundPackage = aInboundPackage;
		 
			Route = aRoute;
		 
			TranType = aTranType;
		 
			TranStyle = aTranStyle;
		 
			TranSizes = aTranSizes;
		 
			CardNo = aCardNo;
		 
			EmgTime = aEmgTime;
		 
			Eloc = aEloc;
		 
			BusinessPk = aBusinessPk;
		 
			CountType = aCountType;
		 
			Dock = aDock;
		 
			Comments = aComments;
		 
			Min = aMin;
		 
			Max = aMax;
		 
			TWmNo = aTWmNo;
		 
			SWmNo = aSWmNo;
		 
			TZoneNo = aTZoneNo;
		 
			SZoneNo = aSZoneNo;
		 
			MinPullBox = aMinPullBox;
		 
			BatchPullBox = aBatchPullBox;
		 
			Status = aStatus;
		 
			KanbanCircleCnt = aKanbanCircleCnt;
		 
			Settlementflag = aSettlementflag;
		 
			ModifyUser = aModifyUser;
		 
			CreateUser = aCreateUser;
		 
			Id = aId;
		 
			ModifyDate = aModifyDate;
		 
			ValidFlag = aValidFlag;
		 
			CreateDate = aCreateDate;
		 
			Fid = aFid;
		}
		
		public MaintainInhouseLogisticStandardInfo():base("TM_BAS_MAINTAIN_INHOUSE_LOGISTIC_STANDARD")
		{
			List<string> keys = new List<string>();
			                                                       			keys.Add("ID");    _Keys = keys.ToArray();
			
			Schema = new DataSchema();
			List<DataSchemaField> fields = new List<DataSchemaField>();
			
			 
			DataSchemaField PLANTField = new DataSchemaField();
			PLANTField.Name = "PLANT";
			PLANTField.Type = typeof(string).ToString();
			PLANTField.Index = 0;
			fields.Add(PLANTField);
			 
			DataSchemaField ASSEMBLY_LINEField = new DataSchemaField();
			ASSEMBLY_LINEField.Name = "ASSEMBLY_LINE";
			ASSEMBLY_LINEField.Type = typeof(string).ToString();
			ASSEMBLY_LINEField.Index = 1;
			fields.Add(ASSEMBLY_LINEField);
			 
			DataSchemaField PLANT_ZONEField = new DataSchemaField();
			PLANT_ZONEField.Name = "PLANT_ZONE";
			PLANT_ZONEField.Type = typeof(string).ToString();
			PLANT_ZONEField.Index = 2;
			fields.Add(PLANT_ZONEField);
			 
			DataSchemaField WORKSHOPField = new DataSchemaField();
			WORKSHOPField.Name = "WORKSHOP";
			WORKSHOPField.Type = typeof(string).ToString();
			WORKSHOPField.Index = 3;
			fields.Add(WORKSHOPField);
			 
			DataSchemaField SUPPLIER_NUMField = new DataSchemaField();
			SUPPLIER_NUMField.Name = "SUPPLIER_NUM";
			SUPPLIER_NUMField.Type = typeof(string).ToString();
			SUPPLIER_NUMField.Index = 4;
			fields.Add(SUPPLIER_NUMField);
			 
			DataSchemaField TRANS_SUPPLIER_NUMField = new DataSchemaField();
			TRANS_SUPPLIER_NUMField.Name = "TRANS_SUPPLIER_NUM";
			TRANS_SUPPLIER_NUMField.Type = typeof(string).ToString();
			TRANS_SUPPLIER_NUMField.Index = 5;
			fields.Add(TRANS_SUPPLIER_NUMField);
			 
			DataSchemaField PART_NOField = new DataSchemaField();
			PART_NOField.Name = "PART_NO";
			PART_NOField.Type = typeof(string).ToString();
			PART_NOField.Index = 6;
			fields.Add(PART_NOField);
			 
			DataSchemaField PART_CNAMEField = new DataSchemaField();
			PART_CNAMEField.Name = "PART_CNAME";
			PART_CNAMEField.Type = typeof(string).ToString();
			PART_CNAMEField.Index = 7;
			fields.Add(PART_CNAMEField);
			 
			DataSchemaField PART_ENAMEField = new DataSchemaField();
			PART_ENAMEField.Name = "PART_ENAME";
			PART_ENAMEField.Type = typeof(string).ToString();
			PART_ENAMEField.Index = 8;
			fields.Add(PART_ENAMEField);
			 
			DataSchemaField PART_NICKNAMEField = new DataSchemaField();
			PART_NICKNAMEField.Name = "PART_NICKNAME";
			PART_NICKNAMEField.Type = typeof(string).ToString();
			PART_NICKNAMEField.Index = 9;
			fields.Add(PART_NICKNAMEField);
			 
			DataSchemaField WORKSHOP_SECTIONField = new DataSchemaField();
			WORKSHOP_SECTIONField.Name = "WORKSHOP_SECTION";
			WORKSHOP_SECTIONField.Type = typeof(string).ToString();
			WORKSHOP_SECTIONField.Index = 10;
			fields.Add(WORKSHOP_SECTIONField);
			 
			DataSchemaField LOCATIONField = new DataSchemaField();
			LOCATIONField.Name = "LOCATION";
			LOCATIONField.Type = typeof(string).ToString();
			LOCATIONField.Index = 11;
			fields.Add(LOCATIONField);
			 
			DataSchemaField IN_PLANT_LOGISTIC_MODEField = new DataSchemaField();
			IN_PLANT_LOGISTIC_MODEField.Name = "IN_PLANT_LOGISTIC_MODE";
			IN_PLANT_LOGISTIC_MODEField.Type = typeof(string).ToString();
			IN_PLANT_LOGISTIC_MODEField.Index = 12;
			fields.Add(IN_PLANT_LOGISTIC_MODEField);
			 
			DataSchemaField IN_PLANT_SYSTEM_MODEField = new DataSchemaField();
			IN_PLANT_SYSTEM_MODEField.Name = "IN_PLANT_SYSTEM_MODE";
			IN_PLANT_SYSTEM_MODEField.Type = typeof(string).ToString();
			IN_PLANT_SYSTEM_MODEField.Index = 13;
			fields.Add(IN_PLANT_SYSTEM_MODEField);
			 
			DataSchemaField IN_PLANT_LOGISTIC_PART_CLASSField = new DataSchemaField();
			IN_PLANT_LOGISTIC_PART_CLASSField.Name = "IN_PLANT_LOGISTIC_PART_CLASS";
			IN_PLANT_LOGISTIC_PART_CLASSField.Type = typeof(string).ToString();
			IN_PLANT_LOGISTIC_PART_CLASSField.Index = 14;
			fields.Add(IN_PLANT_LOGISTIC_PART_CLASSField);
			 
			DataSchemaField INHOUSE_MODEField = new DataSchemaField();
			INHOUSE_MODEField.Name = "INHOUSE_MODE";
			INHOUSE_MODEField.Type = typeof(string).ToString();
			INHOUSE_MODEField.Index = 15;
			fields.Add(INHOUSE_MODEField);
			 
			DataSchemaField INHOUSE_SYSTEM_MODEField = new DataSchemaField();
			INHOUSE_SYSTEM_MODEField.Name = "INHOUSE_SYSTEM_MODE";
			INHOUSE_SYSTEM_MODEField.Type = typeof(string).ToString();
			INHOUSE_SYSTEM_MODEField.Index = 16;
			fields.Add(INHOUSE_SYSTEM_MODEField);
			 
			DataSchemaField INHOUSE_PART_CLASSField = new DataSchemaField();
			INHOUSE_PART_CLASSField.Name = "INHOUSE_PART_CLASS";
			INHOUSE_PART_CLASSField.Type = typeof(string).ToString();
			INHOUSE_PART_CLASSField.Index = 17;
			fields.Add(INHOUSE_PART_CLASSField);
			 
			DataSchemaField LOGICAL_PKField = new DataSchemaField();
			LOGICAL_PKField.Name = "LOGICAL_PK";
			LOGICAL_PKField.Type = typeof(string).ToString();
			LOGICAL_PKField.Index = 18;
			fields.Add(LOGICAL_PKField);
			 
			DataSchemaField STORAGE_LOCATIONField = new DataSchemaField();
			STORAGE_LOCATIONField.Name = "STORAGE_LOCATION";
			STORAGE_LOCATIONField.Type = typeof(string).ToString();
			STORAGE_LOCATIONField.Index = 19;
			fields.Add(STORAGE_LOCATIONField);
			 
			DataSchemaField SEQUENCE_NOField = new DataSchemaField();
			SEQUENCE_NOField.Name = "SEQUENCE_NO";
			SEQUENCE_NOField.Type = typeof(string).ToString();
			SEQUENCE_NOField.Index = 20;
			fields.Add(SEQUENCE_NOField);
			 
			DataSchemaField IS_ACTIVEField = new DataSchemaField();
			IS_ACTIVEField.Name = "IS_ACTIVE";
			IS_ACTIVEField.Type = typeof(int).ToString();
			IS_ACTIVEField.Index = 21;
			fields.Add(IS_ACTIVEField);
			 
			DataSchemaField IS_REPACKField = new DataSchemaField();
			IS_REPACKField.Name = "IS_REPACK";
			IS_REPACKField.Type = typeof(int).ToString();
			IS_REPACKField.Index = 22;
			fields.Add(IS_REPACKField);
			 
			DataSchemaField REPACK_ROUTEField = new DataSchemaField();
			REPACK_ROUTEField.Name = "REPACK_ROUTE";
			REPACK_ROUTEField.Type = typeof(string).ToString();
			REPACK_ROUTEField.Index = 23;
			fields.Add(REPACK_ROUTEField);
			 
			DataSchemaField IS_TRIGGER_PULLField = new DataSchemaField();
			IS_TRIGGER_PULLField.Name = "IS_TRIGGER_PULL";
			IS_TRIGGER_PULLField.Type = typeof(bool).ToString();
			IS_TRIGGER_PULLField.Index = 24;
			fields.Add(IS_TRIGGER_PULLField);
			 
			DataSchemaField WM_NOField = new DataSchemaField();
			WM_NOField.Name = "WM_NO";
			WM_NOField.Type = typeof(string).ToString();
			WM_NOField.Index = 25;
			fields.Add(WM_NOField);
			 
			DataSchemaField ZONE_NOField = new DataSchemaField();
			ZONE_NOField.Name = "ZONE_NO";
			ZONE_NOField.Type = typeof(string).ToString();
			ZONE_NOField.Index = 26;
			fields.Add(ZONE_NOField);
			 
			DataSchemaField DLOCField = new DataSchemaField();
			DLOCField.Name = "DLOC";
			DLOCField.Type = typeof(string).ToString();
			DLOCField.Index = 27;
			fields.Add(DLOCField);
			 
			DataSchemaField INBOUND_PACKAGE_MODELField = new DataSchemaField();
			INBOUND_PACKAGE_MODELField.Name = "INBOUND_PACKAGE_MODEL";
			INBOUND_PACKAGE_MODELField.Type = typeof(string).ToString();
			INBOUND_PACKAGE_MODELField.Index = 28;
			fields.Add(INBOUND_PACKAGE_MODELField);
			 
			DataSchemaField INBOUND_PACKAGEField = new DataSchemaField();
			INBOUND_PACKAGEField.Name = "INBOUND_PACKAGE";
			INBOUND_PACKAGEField.Type = typeof(int).ToString();
			INBOUND_PACKAGEField.Index = 29;
			fields.Add(INBOUND_PACKAGEField);
			 
			DataSchemaField ROUTEField = new DataSchemaField();
			ROUTEField.Name = "ROUTE";
			ROUTEField.Type = typeof(string).ToString();
			ROUTEField.Index = 30;
			fields.Add(ROUTEField);
			 
			DataSchemaField TRAN_TYPEField = new DataSchemaField();
			TRAN_TYPEField.Name = "TRAN_TYPE";
			TRAN_TYPEField.Type = typeof(string).ToString();
			TRAN_TYPEField.Index = 31;
			fields.Add(TRAN_TYPEField);
			 
			DataSchemaField TRAN_STYLEField = new DataSchemaField();
			TRAN_STYLEField.Name = "TRAN_STYLE";
			TRAN_STYLEField.Type = typeof(string).ToString();
			TRAN_STYLEField.Index = 32;
			fields.Add(TRAN_STYLEField);
			 
			DataSchemaField TRAN_SIZESField = new DataSchemaField();
			TRAN_SIZESField.Name = "TRAN_SIZES";
			TRAN_SIZESField.Type = typeof(string).ToString();
			TRAN_SIZESField.Index = 33;
			fields.Add(TRAN_SIZESField);
			 
			DataSchemaField CARD_NOField = new DataSchemaField();
			CARD_NOField.Name = "CARD_NO";
			CARD_NOField.Type = typeof(string).ToString();
			CARD_NOField.Index = 34;
			fields.Add(CARD_NOField);
			 
			DataSchemaField EMG_TIMEField = new DataSchemaField();
			EMG_TIMEField.Name = "EMG_TIME";
			EMG_TIMEField.Type = typeof(int).ToString();
			EMG_TIMEField.Index = 35;
			fields.Add(EMG_TIMEField);
			 
			DataSchemaField ELOCField = new DataSchemaField();
			ELOCField.Name = "ELOC";
			ELOCField.Type = typeof(string).ToString();
			ELOCField.Index = 36;
			fields.Add(ELOCField);
			 
			DataSchemaField BUSINESS_PKField = new DataSchemaField();
			BUSINESS_PKField.Name = "BUSINESS_PK";
			BUSINESS_PKField.Type = typeof(string).ToString();
			BUSINESS_PKField.Index = 37;
			fields.Add(BUSINESS_PKField);
			 
			DataSchemaField COUNT_TYPEField = new DataSchemaField();
			COUNT_TYPEField.Name = "COUNT_TYPE";
			COUNT_TYPEField.Type = typeof(string).ToString();
			COUNT_TYPEField.Index = 38;
			fields.Add(COUNT_TYPEField);
			 
			DataSchemaField DOCKField = new DataSchemaField();
			DOCKField.Name = "DOCK";
			DOCKField.Type = typeof(string).ToString();
			DOCKField.Index = 39;
			fields.Add(DOCKField);
			 
			DataSchemaField COMMENTSField = new DataSchemaField();
			COMMENTSField.Name = "COMMENTS";
			COMMENTSField.Type = typeof(string).ToString();
			COMMENTSField.Index = 40;
			fields.Add(COMMENTSField);
			 
			DataSchemaField MINField = new DataSchemaField();
			MINField.Name = "MIN";
			MINField.Type = typeof(int).ToString();
			MINField.Index = 41;
			fields.Add(MINField);
			 
			DataSchemaField MAXField = new DataSchemaField();
			MAXField.Name = "MAX";
			MAXField.Type = typeof(int).ToString();
			MAXField.Index = 42;
			fields.Add(MAXField);
			 
			DataSchemaField T_WM_NOField = new DataSchemaField();
			T_WM_NOField.Name = "T_WM_NO";
			T_WM_NOField.Type = typeof(string).ToString();
			T_WM_NOField.Index = 43;
			fields.Add(T_WM_NOField);
			 
			DataSchemaField S_WM_NOField = new DataSchemaField();
			S_WM_NOField.Name = "S_WM_NO";
			S_WM_NOField.Type = typeof(string).ToString();
			S_WM_NOField.Index = 44;
			fields.Add(S_WM_NOField);
			 
			DataSchemaField T_ZONE_NOField = new DataSchemaField();
			T_ZONE_NOField.Name = "T_ZONE_NO";
			T_ZONE_NOField.Type = typeof(string).ToString();
			T_ZONE_NOField.Index = 45;
			fields.Add(T_ZONE_NOField);
			 
			DataSchemaField S_ZONE_NOField = new DataSchemaField();
			S_ZONE_NOField.Name = "S_ZONE_NO";
			S_ZONE_NOField.Type = typeof(string).ToString();
			S_ZONE_NOField.Index = 46;
			fields.Add(S_ZONE_NOField);
			 
			DataSchemaField MIN_PULL_BOXField = new DataSchemaField();
			MIN_PULL_BOXField.Name = "MIN_PULL_BOX";
			MIN_PULL_BOXField.Type = typeof(int).ToString();
			MIN_PULL_BOXField.Index = 47;
			fields.Add(MIN_PULL_BOXField);
			 
			DataSchemaField BATCH_PULL_BOXField = new DataSchemaField();
			BATCH_PULL_BOXField.Name = "BATCH_PULL_BOX";
			BATCH_PULL_BOXField.Type = typeof(int).ToString();
			BATCH_PULL_BOXField.Index = 48;
			fields.Add(BATCH_PULL_BOXField);
			 
			DataSchemaField STATUSField = new DataSchemaField();
			STATUSField.Name = "STATUS";
			STATUSField.Type = typeof(int).ToString();
			STATUSField.Index = 49;
			fields.Add(STATUSField);
			 
			DataSchemaField KANBAN_CIRCLE_CNTField = new DataSchemaField();
			KANBAN_CIRCLE_CNTField.Name = "KANBAN_CIRCLE_CNT";
			KANBAN_CIRCLE_CNTField.Type = typeof(int).ToString();
			KANBAN_CIRCLE_CNTField.Index = 50;
			fields.Add(KANBAN_CIRCLE_CNTField);
			 
			DataSchemaField SETTLEMENTFLAGField = new DataSchemaField();
			SETTLEMENTFLAGField.Name = "SETTLEMENTFLAG";
			SETTLEMENTFLAGField.Type = typeof(int).ToString();
			SETTLEMENTFLAGField.Index = 51;
			fields.Add(SETTLEMENTFLAGField);
			 
			DataSchemaField MODIFY_USERField = new DataSchemaField();
			MODIFY_USERField.Name = "MODIFY_USER";
			MODIFY_USERField.Type = typeof(string).ToString();
			MODIFY_USERField.Index = 52;
			fields.Add(MODIFY_USERField);
			 
			DataSchemaField CREATE_USERField = new DataSchemaField();
			CREATE_USERField.Name = "CREATE_USER";
			CREATE_USERField.Type = typeof(string).ToString();
			CREATE_USERField.Index = 53;
			fields.Add(CREATE_USERField);
			 
			DataSchemaField IDField = new DataSchemaField();
			IDField.Name = "ID";
			IDField.Type = typeof(long).ToString();
			IDField.Index = 54;
			fields.Add(IDField);
			 
			DataSchemaField MODIFY_DATEField = new DataSchemaField();
			MODIFY_DATEField.Name = "MODIFY_DATE";
			MODIFY_DATEField.Type = typeof(DateTime).ToString();
			MODIFY_DATEField.Index = 55;
			fields.Add(MODIFY_DATEField);
			 
			DataSchemaField VALID_FLAGField = new DataSchemaField();
			VALID_FLAGField.Name = "VALID_FLAG";
			VALID_FLAGField.Type = typeof(int).ToString();
			VALID_FLAGField.Index = 56;
			fields.Add(VALID_FLAGField);
			 
			DataSchemaField CREATE_DATEField = new DataSchemaField();
			CREATE_DATEField.Name = "CREATE_DATE";
			CREATE_DATEField.Type = typeof(DateTime).ToString();
			CREATE_DATEField.Index = 57;
			fields.Add(CREATE_DATEField);
			 
			DataSchemaField FIDField = new DataSchemaField();
			FIDField.Name = "FID";
			FIDField.Type = typeof(Guid).ToString();
			FIDField.Index = 58;
			fields.Add(FIDField);
						
			Schema.Fields = fields.ToArray();
		}
		
		#endregion

		#region Attributes

		[DataMember]
		public string Plant{ get;set; }		
				
		[DataMember]
		public string AssemblyLine{ get;set; }		
				
		[DataMember]
		public string PlantZone{ get;set; }		
				
		[DataMember]
		public string Workshop{ get;set; }		
				
		[DataMember]
		public string SupplierNum{ get;set; }		
				
		[DataMember]
		public string TransSupplierNum{ get;set; }		
				
		[DataMember]
		public string PartNo{ get;set; }		
				
		[DataMember]
		public string PartCname{ get;set; }		
				
		[DataMember]
		public string PartEname{ get;set; }		
				
		[DataMember]
		public string PartNickname{ get;set; }		
				
		[DataMember]
		public string WorkshopSection{ get;set; }		
				
		[DataMember]
		public string Location{ get;set; }		
				
		[DataMember]
		public string InPlantLogisticMode{ get;set; }		
				
		[DataMember]
		public string InPlantSystemMode{ get;set; }		
				
		[DataMember]
		public string InPlantLogisticPartClass{ get;set; }		
				
		[DataMember]
		public string InhouseMode{ get;set; }		
				
		[DataMember]
		public string InhouseSystemMode{ get;set; }		
				
		[DataMember]
		public string InhousePartClass{ get;set; }		
				
		[DataMember]
		public string LogicalPk{ get;set; }		
				
		[DataMember]
		public string StorageLocation{ get;set; }		
				
		[DataMember]
		public string SequenceNo{ get;set; }		
				
		[DataMember]
		public int? IsActive{ get;set; }		
				
		[DataMember]
		public int? IsRepack{ get;set; }		
				
		[DataMember]
		public string RepackRoute{ get;set; }		
				
		[DataMember]
		public bool? IsTriggerPull{ get;set; }		
				
		[DataMember]
		public string WmNo{ get;set; }		
				
		[DataMember]
		public string ZoneNo{ get;set; }		
				
		[DataMember]
		public string Dloc{ get;set; }		
				
		[DataMember]
		public string InboundPackageModel{ get;set; }		
				
		[DataMember]
		public int? InboundPackage{ get;set; }		
				
		[DataMember]
		public string Route{ get;set; }		
				
		[DataMember]
		public string TranType{ get;set; }		
				
		[DataMember]
		public string TranStyle{ get;set; }		
				
		[DataMember]
		public string TranSizes{ get;set; }		
				
		[DataMember]
		public string CardNo{ get;set; }		
				
		[DataMember]
		public int? EmgTime{ get;set; }		
				
		[DataMember]
		public string Eloc{ get;set; }		
				
		[DataMember]
		public string BusinessPk{ get;set; }		
				
		[DataMember]
		public string CountType{ get;set; }		
				
		[DataMember]
		public string Dock{ get;set; }		
				
		[DataMember]
		public string Comments{ get;set; }		
				
		[DataMember]
		public int? Min{ get;set; }		
				
		[DataMember]
		public int? Max{ get;set; }		
				
		[DataMember]
		public string TWmNo{ get;set; }		
				
		[DataMember]
		public string SWmNo{ get;set; }		
				
		[DataMember]
		public string TZoneNo{ get;set; }		
				
		[DataMember]
		public string SZoneNo{ get;set; }		
				
		[DataMember]
		public int? MinPullBox{ get;set; }		
				
		[DataMember]
		public int? BatchPullBox{ get;set; }		
				
		[DataMember]
		public int? Status{ get;set; }		
				
		[DataMember]
		public int? KanbanCircleCnt{ get;set; }		
				
		[DataMember]
		public int? Settlementflag{ get;set; }		
				
		[DataMember]
		public string ModifyUser{ get;set; }		
				
		[DataMember]
		public string CreateUser{ get;set; }		
				
		[DataMember]
		public long Id{ get;set; }		
				
		[DataMember]
		public DateTime? ModifyDate{ get;set; }		
				
		[DataMember]
		public int? ValidFlag{ get;set; }		
				
		[DataMember]
		public DateTime CreateDate{ get;set; }		
				
		[DataMember]
		public Guid? Fid{ get;set; }		
				
		#endregion

	 
		#region ICloneable Members

		object ICloneable.Clone()
		{
			MaintainInhouseLogisticStandardInfo info = new MaintainInhouseLogisticStandardInfo();

			info.Plant = this.Plant;
			info.AssemblyLine = this.AssemblyLine;
			info.PlantZone = this.PlantZone;
			info.Workshop = this.Workshop;
			info.SupplierNum = this.SupplierNum;
			info.TransSupplierNum = this.TransSupplierNum;
			info.PartNo = this.PartNo;
			info.PartCname = this.PartCname;
			info.PartEname = this.PartEname;
			info.PartNickname = this.PartNickname;
			info.WorkshopSection = this.WorkshopSection;
			info.Location = this.Location;
			info.InPlantLogisticMode = this.InPlantLogisticMode;
			info.InPlantSystemMode = this.InPlantSystemMode;
			info.InPlantLogisticPartClass = this.InPlantLogisticPartClass;
			info.InhouseMode = this.InhouseMode;
			info.InhouseSystemMode = this.InhouseSystemMode;
			info.InhousePartClass = this.InhousePartClass;
			info.LogicalPk = this.LogicalPk;
			info.StorageLocation = this.StorageLocation;
			info.SequenceNo = this.SequenceNo;
			info.IsActive = this.IsActive;
			info.IsRepack = this.IsRepack;
			info.RepackRoute = this.RepackRoute;
			info.IsTriggerPull = this.IsTriggerPull;
			info.WmNo = this.WmNo;
			info.ZoneNo = this.ZoneNo;
			info.Dloc = this.Dloc;
			info.InboundPackageModel = this.InboundPackageModel;
			info.InboundPackage = this.InboundPackage;
			info.Route = this.Route;
			info.TranType = this.TranType;
			info.TranStyle = this.TranStyle;
			info.TranSizes = this.TranSizes;
			info.CardNo = this.CardNo;
			info.EmgTime = this.EmgTime;
			info.Eloc = this.Eloc;
			info.BusinessPk = this.BusinessPk;
			info.CountType = this.CountType;
			info.Dock = this.Dock;
			info.Comments = this.Comments;
			info.Min = this.Min;
			info.Max = this.Max;
			info.TWmNo = this.TWmNo;
			info.SWmNo = this.SWmNo;
			info.TZoneNo = this.TZoneNo;
			info.SZoneNo = this.SZoneNo;
			info.MinPullBox = this.MinPullBox;
			info.BatchPullBox = this.BatchPullBox;
			info.Status = this.Status;
			info.KanbanCircleCnt = this.KanbanCircleCnt;
			info.Settlementflag = this.Settlementflag;
			info.ModifyUser = this.ModifyUser;
			info.CreateUser = this.CreateUser;
			info.Id = this.Id;
			info.ModifyDate = this.ModifyDate;
			info.ValidFlag = this.ValidFlag;
			info.CreateDate = this.CreateDate;
			info.Fid = this.Fid;
			return info;			
		}
		 
		public MaintainInhouseLogisticStandardInfo Clone()
		{
			return ((ICloneable) this).Clone() as MaintainInhouseLogisticStandardInfo;	
		}
		#endregion

		public override string ToString()
		{
			return base.ToString();
		} 
	}

	/// <summary>
    /// MaintainInhouseLogisticStandardInfoCollection对应表[TM_BAS_MAINTAIN_INHOUSE_LOGISTIC_STANDARD]
    /// </summary>
	public partial class MaintainInhouseLogisticStandardInfoCollection : BusinessObjectCollection<MaintainInhouseLogisticStandardInfo>
	{
		public MaintainInhouseLogisticStandardInfoCollection():base("TM_BAS_MAINTAIN_INHOUSE_LOGISTIC_STANDARD"){}	
	}
}
