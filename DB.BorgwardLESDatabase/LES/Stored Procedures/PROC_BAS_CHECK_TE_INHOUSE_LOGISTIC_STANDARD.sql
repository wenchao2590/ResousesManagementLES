/********************************************************************/
/*   Project Name:  Production Pull System                          */
/*   Program Name:  PROC_BAS_CHECK_TE_INHOUSE_LOGISTIC_STANDARD     */
/*   Called By:     by the Page										*/
/*   Purpose:       This is the main stored procedure for the       */
/*   author:        Andy Liu	2015-06-17   						*/
/********************************************************************/
CREATE PROCEDURE [LES].[PROC_BAS_CHECK_TE_INHOUSE_LOGISTIC_STANDARD]
AS
BEGIN
	BEGIN TRANSACTION
	BEGIN TRY
		--2017-11-2 UPDATE XinPengZhang 需求编号：Task 650
	    --TWD不能根据LOGICAL_PK验证主键重复，历史数据的主键是由工厂+流水线+零件号+零件类构成，新主键是由工厂+产线+零件号+供应商+工位+目标仓库+目标存储区构成。
		--2017-11-7 UPDATE XinPengZhang 工厂+产线+零件号+零件类唯一（需求编号：Task 662）
		UPDATE [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD]
		SET [VALID_FLAG] = 0, [ERROR_MSG] = [ERROR_MSG] + '主键重复'
		FROM [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD] A
		JOIN (
			SELECT PLANT,ASSEMBLY_LINE,PART_NO,INHOUSE_PART_CLASS,LOCATION
			FROM [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD] WITH (NOLOCK)
			WHERE INHOUSE_SYSTEM_MODE = 'TWD'
			GROUP BY PLANT,ASSEMBLY_LINE,PART_NO,INHOUSE_PART_CLASS,LOCATION
			HAVING(COUNT(*)) > 1
		)B ON A.PLANT=B.PLANT AND A.ASSEMBLY_LINE=B.ASSEMBLY_LINE AND A.PART_NO=B.PART_NO AND A.INHOUSE_PART_CLASS=B.INHOUSE_PART_CLASS AND  A.LOCATION=B.LOCATION 
		WHERE INHOUSE_SYSTEM_MODE = 'TWD' 	
		
		--2017-11-7 UPDATE XinPengZhang TWD拉动模式不可同时存在工位为空和工位不为的数据（需求编号：Task 662）
		UPDATE A SET A.[VALID_FLAG] = 0, A.[ERROR_MSG] = A.[ERROR_MSG] + 'TWD拉动模式不可同时存在工位为空和工位不为的数据' 
		FROM [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD] A
		JOIN [LES].[TM_BAS_MAINTAIN_INHOUSE_LOGISTIC_STANDARD] B ON A.PLANT=B.PLANT AND A.ASSEMBLY_LINE=B.ASSEMBLY_LINE AND A.PART_NO=B.PART_NO AND A.INHOUSE_PART_CLASS = B.INHOUSE_PART_CLASS
		WHERE A.INHOUSE_SYSTEM_MODE = 'TWD' AND A.VALID_FLAG = 1 	
		AND ((ISNULL(B.LOCATION,'')='' AND LEN(A.LOCATION)>0) OR (LEN(B.LOCATION)>0 AND ISNULL(A.LOCATION,'')=''))

		--2017-11-7 UPDATE XinPengZhang 校验零件类对应的供应商、目标仓库、目标存储区、拉动仓库、拉动存储区是否与零件类维护的数据相同（需求编号：Task 662）
		UPDATE A SET  A.[VALID_FLAG] = 0, A.[ERROR_MSG] = A.[ERROR_MSG] + '零件类对应的供应商、目标仓库、目标存储区、拉动仓库或拉动存储区与零件类维护的数据不同' 
		FROM [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD] A
		LEFT JOIN [LES].[TM_TWD_BOX_PARTS] B ON A.INHOUSE_PART_CLASS = B.BOX_PARTS 
		AND A.SUPPLIER_NUM = B.SUPPLIER_NUM AND A.WAREHOUSE = B.WAREHOUSE AND A.PLANT_ZONE=B.ZONE_NO  
		AND (A.S_WM_NO = B.S_WM_NO OR (ISNULL(A.S_WM_NO,'') ='' AND ISNULL(B.S_WM_NO,'')=''))
		AND (A.S_ZONE_NO = B.S_ZONE_NO OR (ISNULL(A.S_ZONE_NO,'')='' AND ISNULL(B.S_ZONE_NO,'')=''))
		WHERE A.INHOUSE_SYSTEM_MODE = 'TWD' AND A.VALID_FLAG = 1 AND B.PLANT IS NULL

		UPDATE [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD]
		SET [VALID_FLAG] = 0, [ERROR_MSG] = [ERROR_MSG] + '主键重复'
		WHERE INHOUSE_SYSTEM_MODE <> 'TWD' 
		AND [LOGICAL_PK] IN (SELECT [LOGICAL_PK] FROM [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD] WITH (NOLOCK) GROUP BY [LOGICAL_PK] HAVING(COUNT(*)) > 1)	

		UPDATE [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD]
		SET [VALID_FLAG] = 0, [ERROR_MSG] = [ERROR_MSG] + '删除标记不正确'
		WHERE [DELETE_FLAG] NOT IN (SELECT [DETAIL_VALUE] FROM [LES].[TC_SYS_CODE_DETAIL] WITH (NOLOCK) WHERE [CODE_NAME] = 'delete_flag')
		
		UPDATE MainTable
		SET MainTable.[VALID_FLAG] = 0, MainTable.[ERROR_MSG] = [ERROR_MSG] + '对应工厂的零件编号不存在'
		FROM [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD] MainTable
		WHERE NOT  EXISTS(SELECT * FROM [LES].[TM_BAS_MAINTAIN_PARTS] WITH (NOLOCK) WHERE MainTable.[PLANT]=[PLANT] 
		AND MainTable.[PART_NO]=[PART_NO])

		UPDATE [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD]
		SET [VALID_FLAG] = 0, [ERROR_MSG] = [ERROR_MSG] + '拉动供应商不正确'
		WHERE [SUPPLIER_NUM] NOT IN (SELECT [SUPPLIER_NUM] FROM [LES].[TM_BAS_SUPPLIER] WITH (NOLOCK))

		--UPDATE [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD]
		--SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '层级拉动仓库不正确'
		--WHERE IS_TRIGGER_PULL = '是' AND [WM_NO] NOT IN (SELECT [WM_NO] FROM [LES].TM_BAS_WAREHOUSE)
		--select * from [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD]
		--UPDATE [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD]
		--SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '层级拉动存储区不正确'
		--WHERE IS_TRIGGER_PULL = '是' AND [ZONE_NO] NOT IN (SELECT [ZONE_NO] FROM [LES].TM_WMM_ZONES)

		UPDATE [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD]
		SET [VALID_FLAG] = 0, [ERROR_MSG] = [ERROR_MSG] + '是否触发层级拉动不正确'
		WHERE [IS_TRIGGER_PULL] NOT IN (SELECT [DETAIL_VALUE] FROM [LES].[TC_SYS_CODE_DETAIL] WITH (NOLOCK) WHERE [CODE_NAME] = 'is_trigger_pull')

		UPDATE [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD]
		SET [VALID_FLAG] = 0,
		[ERROR_MSG] = [ERROR_MSG] + '上线系统拉动标记只允许JIS、EPS、TWD、PCS、SPS'
		WHERE [INHOUSE_SYSTEM_MODE] <>'' AND  [INHOUSE_SYSTEM_MODE] NOT IN( 'JIS','EPS','TWD','PCS', 'SPS')

		UPDATE A
		SET [VALID_FLAG] = 0,
		[ERROR_MSG] = [ERROR_MSG] + '指定的工厂流水线零件类供应商找不到对应的TWD零件类'
		FROM [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD] A
		LEFT JOIN [LES].[TM_TWD_BOX_PARTS] B WITH (NOLOCK) ON A.[PLANT]=B.[PLANT] AND A.[ASSEMBLY_LINE]=B.[ASSEMBLY_LINE] AND A.[INHOUSE_PART_CLASS]=B.[BOX_PARTS] AND A.[SUPPLIER_NUM]=B.[SUPPLIER_NUM]
		WHERE [INHOUSE_SYSTEM_MODE] ='TWD' and B.[PLANT] IS NULL

		UPDATE A
		SET [VALID_FLAG] = 0,
		[ERROR_MSG] = [ERROR_MSG] + '指定的工厂流水线零件类供应商找不到对应的SPS零件类'
		FROM [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD] A
		LEFT JOIN [LES].[TM_SPS_BOX_PARTS] B WITH (NOLOCK) ON A.[PLANT]=B.[PLANT] AND A.[ASSEMBLY_LINE]=B.[ASSEMBLY_LINE] AND A.[INHOUSE_PART_CLASS]=B.[BOX_PARTS] AND A.[SUPPLIER_NUM]=B.[SUPPLIER_NUM]
		WHERE [INHOUSE_SYSTEM_MODE] ='SPS' and B.[PLANT] IS NULL

		UPDATE [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD]
		SET [VALID_FLAG] = 0, [ERROR_MSG] = [ERROR_MSG] + '目标存储区不正确'
		WHERE [PLANT_ZONE] NOT IN (SELECT [ZONE_NO] FROM [LES].[TM_WMM_ZONES] WITH (NOLOCK))

		UPDATE A
		SET [VALID_FLAG] = 0,
		[ERROR_MSG] = [ERROR_MSG] + '目标仓库不正确'
		FROM [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD] A
		WHERE NOT EXISTS (SELECT 1 FROM [LES].[TM_WMM_ZONES] B WITH (NOLOCK) WHERE A.[WAREHOUSE] = B.[WM_NO] AND A.[PLANT_ZONE] = B.[ZONE_NO])

		UPDATE A
		SET [VALID_FLAG] = 0,
		[ERROR_MSG] = [ERROR_MSG] + '目标仓库存储区零件的入库包装器具编号未设置'
		FROM [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD] A
		WHERE NOT EXISTS (SELECT 1 FROM [LES].[TM_BAS_PARTS_STOCK] B WITH (NOLOCK) WHERE A.[PLANT] = B.[PLANT] AND A.[WAREHOUSE] = B.[WM_NO] AND A.[PLANT_ZONE] = B.[ZONE_NO] AND A.[PART_NO] = B.[PART_NO] AND ISNULL(B.[INBOUND_PACKAGE_MODEL], '') <> '')

		--根据目标仓库存储区零件的入库包装器具编号设置拉动包装器具编号--jinmiao
		--UPDATE A
		--SET A.[INBOUND_PACKAGE_MODEL] = B.[INBOUND_PACKAGE_MODEL]
		--FROM [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD] A WITH (ROWLOCK)
		--INNER JOIN [LES].[TM_BAS_PARTS_STOCK] B WITH (NOLOCK) ON A.[PLANT] = B.[PLANT] AND A.[WAREHOUSE] = B.[WM_NO] AND A.[PLANT_ZONE] = B.[ZONE_NO] AND A.[PART_NO] = B.[PART_NO]
		--WHERE ISNULL(B.[INBOUND_PACKAGE_MODEL], '') <> ''

		UPDATE A
		SET [VALID_FLAG] = 0,
		[ERROR_MSG] = [ERROR_MSG] + '目标仓库存储区零件的入库包装数未设置'
		FROM [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD] A
		WHERE NOT EXISTS (SELECT 1 FROM [LES].[TM_BAS_PARTS_STOCK] B WITH (NOLOCK) WHERE A.[PLANT] = B.[PLANT] AND A.[WAREHOUSE] = B.[WM_NO] AND A.[PLANT_ZONE] = B.[ZONE_NO] AND A.[PART_NO] = B.[PART_NO] AND ISNULL(B.[INBOUND_PACKAGE], 0) <> 0)

		--根据目标仓库存储区零件的入库包装数设置拉动包装数--jinmiao
		--UPDATE A
		--SET A.[INBOUND_PACKAGE] = B.[INBOUND_PACKAGE]
		--FROM [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD] A WITH (ROWLOCK)
		--INNER JOIN [LES].[TM_BAS_PARTS_STOCK] B WITH (NOLOCK) ON A.[PLANT] = B.[PLANT] AND A.[WAREHOUSE] = B.[WM_NO] AND A.[PLANT_ZONE] = B.[ZONE_NO] AND A.[PART_NO] = B.[PART_NO]
		--WHERE ISNULL(B.[INBOUND_PACKAGE], 0) <> 0

		UPDATE A
		SET [VALID_FLAG] = 0,
		[ERROR_MSG] = [ERROR_MSG] + '拉动仓库或拉动存储区不正确'
		FROM [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD] A
		WHERE ISNULL(A.[S_WM_NO], '') <> '' AND ISNULL(A.[S_ZONE_NO], '') <> '' AND  NOT EXISTS (SELECT 1 FROM [LES].[TM_WMM_ZONES] B WITH (NOLOCK) WHERE A.[S_WM_NO] = B.[WM_NO] AND A.[S_ZONE_NO] = B.[ZONE_NO])

		UPDATE A
		SET [VALID_FLAG] = 0,
		[ERROR_MSG] = [ERROR_MSG] + '层级拉动仓库或层级拉动存储区不正确'
		FROM [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD] A
		WHERE ISNULL(A.[WM_NO], '') <> '' AND ISNULL(A.[ZONE_NO], '') <> '' AND  NOT EXISTS (SELECT 1 FROM [LES].[TM_WMM_ZONES] B WITH (NOLOCK) WHERE A.[WM_NO] = B.[WM_NO] AND A.[ZONE_NO] = B.[ZONE_NO])
	
		UPDATE A
		SET [VALID_FLAG] = 0, [ERROR_MSG] = [ERROR_MSG] + '同一工厂流水线供应商零件类的目的存储区不同【' + D.[PLANT_ZONE] + '】'
		FROM [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD] A
		JOIN (
			SELECT DISTINCT
				[PLANT], [ASSEMBLY_LINE], [SUPPLIER_NUM], [INHOUSE_PART_CLASS], [PLANT_ZONE]
			FROM [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD] WITH (NOLOCK)
			WHERE DELETE_FLAG='否'
		) D	
		ON A.[PLANT] = D.[PLANT] AND A.[ASSEMBLY_LINE] = D.[ASSEMBLY_LINE]
		AND A.[SUPPLIER_NUM] = D.[SUPPLIER_NUM] AND A.[INHOUSE_PART_CLASS] = D.[INHOUSE_PART_CLASS]
		WHERE A.[PLANT_ZONE] <> D.[PLANT_ZONE]
	
		UPDATE A
		SET [VALID_FLAG] = 0, [ERROR_MSG] = [ERROR_MSG] + '同一工厂流水线供应商零件类的目的存储区不同【'+F.[PLANT_ZONE]+'】'
		FROM [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD] A
		JOIN
		(
			SELECT DISTINCT
				[PLANT], [ASSEMBLY_LINE], [SUPPLIER_NUM], [INHOUSE_PART_CLASS], [PLANT_ZONE]
			FROM [LES].[TM_BAS_MAINTAIN_INHOUSE_LOGISTIC_STANDARD] WITH (NOLOCK)
			WHERE [DELETE_FLAG] = 0 AND [LOGICAL_PK] NOT IN (SELECT [LOGICAL_PK] FROM [LES].[TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD])
		) F
		ON A.[PLANT] = F.[PLANT] AND A.[ASSEMBLY_LINE] = F.[ASSEMBLY_LINE]
		AND A.[SUPPLIER_NUM] = F.[SUPPLIER_NUM] AND A.[INHOUSE_PART_CLASS] = F.[INHOUSE_PART_CLASS]
		WHERE A.[PLANT_ZONE] <> F.[PLANT_ZONE]
	
		COMMIT TRANSACTION
	END TRY
	BEGIN CATCH
		SELECT 
			ERROR_NUMBER() AS ErrorNumber,
			ERROR_SEVERITY() AS ErrorSeverity,
			ERROR_STATE() AS ErrorState,
			ERROR_PROCEDURE() AS ErrorProcedure,
			ERROR_LINE() AS ErrorLine,
			ERROR_MESSAGE() AS ErrorMessage
		ROLLBACK TRANSACTION
	END CATCH
END