CREATE PROCEDURE [LES].[PROC_WMM_NOTIFICATION_IMPORT]
AS
BEGIN
	--INSERT INTO [LES].[TE_WMM_NOTIFICATION_TEMP]
	--SELECT 
	--	T.[NOTIFICATION_NO],
	--	T.[PLANT],
	--	T.[WM_NO],
	--	T.[ZONE_NO],
	--	T.[EMERGENCY_TYPE],
	--	T.[COUNT_TYPE],
	--	NULL AS [COUNT_TIME],
	--	T.[APPLY_KEEPER],
	--	T.[BOOK_KEEPER],
	--	D.[PART_NO],
	--	D.[PACK_NUM],
	--	D.[NUM],
	--	T.COUNT_REASON,
	--	T.[COMMENTS],
	--	T.[CREATE_USER],
	--	T.[CREATE_DATE],
	--	'' AS [ERROR_MSG],
	--	'1'AS [VALID_FLAG],
	--	'' AS [EMERGENCY_TYPE_TEXT],
	--	'' AS [COUNT_TYPE_TEXT],
	--	D.[SUPPLIER_NUM]
	--  FROM [LES].[TT_WMM_NOTIFICATION_HEAD] M WITH (NOLOCK)
	--  INNER JOIN [LES].[TT_WMM_NOTIFICATION_DETAIL] D WITH (NOLOCK)
	--  ON M.[NOTIFICATION_ID] = D.[NOTIFICATIONID]
	--  INNER JOIN [LES].[TE_WMM_NOTIFICATION_TEMP] T WITH (NOLOCK)
	--  ON T.[NOTIFICATION_NO] = M.[NOTIFICATION_NO]
	--  WHERE d.[PART_NO] IS NOT NULL 
	--  AND EXISTS
	--  (
	--		SELECT 1 FROM 
	--		[LES].[TE_WMM_NOTIFICATION_TEMP] T WITH (NOLOCK) 
	--		WHERE T.[NOTIFICATION_NO] = M.[NOTIFICATION_NO]
	--		AND T.[PART_NO] <>	D.PART_NO AND M.[COUNT_STATUS] = 0
	--  )

	--DELETE FROM [LES].[TT_WMM_NOTIFICATION_HEAD] WITH (ROWLOCK) WHERE [COUNT_STATUS] = 0 OR [COUNT_STATUS] IS NULL
	--AND NOTIFICATION_NO IN
	--(
	--	SELECT DISTINCT [NOTIFICATION_NO] FROM [LES].[TE_WMM_NOTIFICATION_TEMP] (NOLOCK)
	--)

	DECLARE @COUNTPARTITION NVARCHAR(100)	--盘点分区
	SELECT TOP 1
		@COUNTPARTITION = ST.[COUNT_PARTITION]
	FROM [LES].[TE_WMM_NOTIFICATION_TEMP] TE WITH (NOLOCK)
	LEFT JOIN [LES].[V_WMM_PART_STOCKS_VIEW] ST WITH (NOLOCK)
	ON TE.[PLANT] = ST.[PLANT] AND TE.[WM_NO] = ST.[WM_NO] AND TE.[ZONE_NO] = ST.[ZONE_NO] AND TE.[PART_NO] = ST.[PART_NO]

	INSERT INTO [LES].[TT_WMM_NOTIFICATION_HEAD]
	(
		[NOTIFICATION_NO],
		[PLANT],
		[WM_NO],
		[ZONE_NO],
		[EMERGENCY_TYPE],
		[COUNT_TYPE],
		[COUNT_STATUS],
		[APPLY_KEEPER],
		[CREATE_USER],
		[CREATE_DATE],
		[COUNT_PARTITION]
	)
	SELECT 
		[NOTIFICATION_NO],
		MAX([PLANT]) AS [PLANT],
		MAX([WM_NO]) AS [WM_NO],
		MAX([ZONE_NO]) AS [ZONE_NO],
		MAX(EMERGENCY_TYPE) AS [EMERGENCY_TYPE],
		MAX(COUNT_TYPE)  AS [COUNT_TYPE],
		'0' AS [COUNT_STATUS],
		MAX([APPLY_KEEPER]) AS [APPLY_KEEPER],
		MAX([CREATE_USER]) AS [CREATE_USER],
		MAX([CREATE_DATE]) AS [CREATE_DATE],
		ISNULL(@COUNTPARTITION, '') AS [COUNT_PARTITION]
	FROM [LES].[TE_WMM_NOTIFICATION_TEMP] WITH (NOLOCK)
	GROUP BY [NOTIFICATION_NO]

	INSERT INTO [LES].[TT_WMM_NOTIFICATION_DETAIL]
	(
		[STOCK_IDENTITY],
		[NOTIFICATIONID],
		[PLANT],
		[WM_NO],
		[ZONE_NO],
		[PART_NO],
		[PART_CNAME],
		[DLOC],
		[PART_TYPE],
		[NUM],
		[PACK_NUM],
		[FREEZE_NUM],
		[SUPPLIER_NUM],
		[VALUE_SORT],
		[PARTS_ATTRIBUTE],
		[COUNT_PARTITION],
		[COMMENTS],
		[CREATE_USER],
		[CREATE_DATE]
	)
	SELECT
		ST.[STOCK_IDENTITY],
		TT.[NOTIFICATION_ID],
		TT.[PLANT],
		TT.[WM_NO],
		TT.[ZONE_NO],
		TE.[PART_NO],
		ST.[PART_CNAME],
		ST.[DLOC],
		ST.[PART_CLS],
		ISNULL(ST.[STOCKS_NUM], 0),
		ISNULL(ST.[STOCKS], 0),
		ISNULL(ST.[FROZEN_STOCKS], 0),
		TE.[SUPPLIER_NUM],
		ST.[VALUE_SORT],
		ST.[PARTS_ATTRIBUTE],
		ST.[COUNT_PARTITION],
		TE.[COMMENTS] ,
		TE.[CREATE_USER] ,
		TE.[CREATE_DATE]
	FROM [LES].[TE_WMM_NOTIFICATION_TEMP] TE WITH (NOLOCK)
	JOIN [LES].[TT_WMM_NOTIFICATION_HEAD] TT WITH (NOLOCK) ON TE.[NOTIFICATION_NO] = TT.[NOTIFICATION_NO]
	LEFT JOIN [LES].[V_WMM_PART_STOCKS_VIEW] ST WITH (NOLOCK)
	ON TT.[PLANT] = ST.[PLANT] AND TT.[WM_NO] = ST.[WM_NO] AND TT.[ZONE_NO] = ST.[ZONE_NO] AND TE.[PART_NO] = ST.[PART_NO]
END