
/********************************************************************/
/*                                                                  */
/*   Project Name:  Foton LES System                          */
/*   Program Name:  PROC_RPM_PACKAGE_OUT                */
/*   Called By:     by the Page							*/
/*   Purpose:      1、根据退货单信息，创建包装器具出库单，并完成出库信息。
				   2、只针对退货单；对于用户自行创建的出库单，不作处理。       
				   3、只针对循环的器具，非循环的器具不做器具入库	*/
/*   author:       Andy Liu	2015-10-20  				       */
/********************************************************************/
CREATE PROCEDURE [LES].[PROC_RPM_PACKAGE_OUT]
@RETURN_ID INT
AS
BEGIN
	DECLARE @IDENTITY INT	
	DECLARE @PART_NO NVARCHAR(20);
	DECLARE @RUNSHEET_NO NVARCHAR(50)
	DECLARE @PLANT NVARCHAR(5);
	DECLARE @ASSEMBLY_LINE NVARCHAR(10);
	DECLARE @SUPPLIER_NUM NVARCHAR(12);
	DECLARE @PACKAGE_MODEL NVARCHAR(30);
	DECLARE @PACKAGE_CNAME NVARCHAR(100);
	DECLARE @PACKAGE_ENAME NVARCHAR(100);
	DECLARE @WM_NO NVARCHAR(10);

	DECLARE @Result INT
	DECLARE @ResultMessage nvarchar(1000);
	BEGIN TRY	
		BEGIN TRANSACTION
			--主表
			SELECT @WM_NO=WM_NO, @RUNSHEET_NO = [RUNSHEET_CODE] FROM  LES.[TT_WMM_RETURN] WHERE [RETURN_ID]=@RETURN_ID
			IF @RUNSHEET_NO IS NULL 
			BEGIN
				SET @RUNSHEET_NO = ''
			END

			--当供应商退货信息是从退货单下发的情况，则进行出包装器具功能
			IF @RUNSHEET_NO <> ''
			BEGIN
				IF EXISTS(SELECT TOP 1 *
				FROM LES.[TT_WMM_RETURN_DETAIL] A 
				INNER JOIN LES.TM_RPM_PACKAGE_APPLIANCE B ON B.PLANT = A.PLANT AND B.PACKAGE_NO = A.PACKAGE_MODEL AND B.IS_REPEAT = 1
				WHERE [RETURN_ID]=@RETURN_ID)  --存在循环的器具时，创建器具出库单
				BEGIN						
					INSERT INTO LES.TT_RPM_PACKAGE_TRAN
						(TRAN_NO,ASN_NO,WM_NO,ZONE_NO,RECEIVE_TYPE,TRAN_TIME,PLANT,ASSEMBLY_LINE,PLANT_ZONE,
						WORKSHOP,SUPPLIER_NUM,TRANS_SUPPLIER_NUM,SUPPLIER_TYPE,CONFIRM_FLAG,TRAN_TYPE,PACKAGE_TYPE,CREATE_USER,CREATE_DATE)
					SELECT @RUNSHEET_NO,@RUNSHEET_NO,WM_NO,ZONE_NO,2,GETDATE(),PLANT,ASSEMBLY_LINE,PLANT_ZONE,
						WORKSHOP,SUPPLIER_NUM,TRANS_SUPPLIER_NUM,SUPPLIER_TYPE,1,2,1,'admin',GETDATE() 
					FROM LES.[TT_WMM_RETURN]
					WHERE [RETURN_ID]=@RETURN_ID

					SET @IDENTITY=SCOPE_IDENTITY();				
	
					--增加器具子表
					INSERT INTO LES.TT_RPM_PACKAGE_TRAN_DETAIL(
						TRAN_ID,PLANT,SUPPLIER_NUM,WM_NO,ZONE_NO,DLOC,
						PACKAGE,NUM,PACKAGE_NO,PACKAGE_CNAME,PACKAGE_ENAME,
						PACK_COUNT,REQUIRED_PACKAGE,REQUIRED_PACKAGE_QTY,ACTUAL_PACKAGE,ACTUAL_PACKAGE_QTY,
						BARCODE_DATA)
					SELECT @IDENTITY,A.PLANT,A.SUPPLIER_NUM,A.WM_NO,A.ZONE_NO,A.DLOC,
						'',0,A.PACKAGE_MODEL,B.PACKAGE_CNAME,B.PACKAGE_ENAME,
						0,0,0,0,0,--ISNULL(A.ACTUAL_BOX_NUM,0),
						''
					FROM LES.[TT_WMM_RETURN_DETAIL] A 
					INNER JOIN LES.TM_RPM_PACKAGE_APPLIANCE B ON B.PLANT = A.PLANT AND B.PACKAGE_NO = A.PACKAGE_MODEL AND B.IS_REPEAT = 1
					WHERE [RETURN_ID]=@RETURN_ID

					--添加托号信息
					DECLARE @Tray_Num nvarchar(1000)					
					select @Tray_Num = parameter1 from LES.TM_SYS_APPLICATION_CONFIGURATION
					where application = 'tray_num'

					exec('INSERT INTO LES.TT_RPM_PACKAGE_TRAN_DETAIL(
						TRAN_ID,PLANT,SUPPLIER_NUM,WM_NO,ZONE_NO,DLOC,
						PACKAGE,NUM,PACKAGE_NO,PACKAGE_CNAME,PACKAGE_ENAME,
						PACK_COUNT,REQUIRED_PACKAGE,REQUIRED_PACKAGE_QTY,ACTUAL_PACKAGE,ACTUAL_PACKAGE_QTY,
						BARCODE_DATA)
					SELECT ' + @IDENTITY + ',A.PLANT,A.SUPPLIER_NUM,A.WM_NO,A.ZONE_NO,A.DLOC,
						0,0,B.PACKAGE_NO,B.PACKAGE_CNAME,B.PACKAGE_ENAME,
						0,0,0,0,0,--ISNULL(A.ACTUAL_BOX_NUM,0),
						NULL
					FROM  LES.TM_RPM_PACKAGE_APPLIANCE B
					INNER JOIN (SELECT TOP 1 * FROM LES.[TT_WMM_RETURN_DETAIL] WHERE [RETURN_ID]=' + @RETURN_ID + ') A ON B.PLANT = A.PLANT AND B.SUPPLIER_NUM = A.SUPPLIER_NUM 
					WHERE LEFT(B.PACKAGE_NO,6) IN (' + @Tray_Num +')')

					--减少库存
					--EXEC [LES].[PROC_RPM_PACKAGE_TRAN_STOCKS] @IDENTITY,1,@Result OUTPUT,@ResultMessage OUTPUT;
				END

				--更新送货单状态，完成送货单
				--移动至程序中实现
				--UPDATE LES.TT_SPM_DELIVERY_RUNSHEET
				--SET SHEET_STATUS = 9,ACTUAL_ARRIVAL_TIME=GETDATE()
				--WHERE PLAN_RUNSHEET_NO = @RUNSHEET_NO
			END
		COMMIT TRANSACTION
	END TRY
	BEGIN CATCH
		--出错，则返回执行不成功，回滚事务
		ROLLBACK TRANSACTION
		--记录错误信息
		INSERT INTO [LES].[TS_SYS_EXCEPTION] (time_stamp, [application], [METHOD], class,  exception_message, error_code)
		SELECT GETDATE(),'INTERFACE','LES.PROC_RPM_PACKAGE_TRAN','Procedure',ERROR_MESSAGE(),ERROR_LINE()
		IF(@Result=0)
			BEGIN
			INSERT INTO [LES].[TS_SYS_EXCEPTION] (time_stamp, [application], [METHOD], class,  exception_message, error_code)
			SELECT GETDATE(),'INTERFACE','[LES].[PROC_RPM_PACKAGE_TRAN_STOCKS]','Procedure',@ResultMessage,ERROR_LINE()
			END
	END CATCH
END