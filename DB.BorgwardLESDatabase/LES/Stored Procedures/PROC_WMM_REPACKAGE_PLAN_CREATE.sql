


-- =============================================
-- Author:		houpeng
-- Create date: 2016-10-20
-- Description:	根据窗口时间，生成翻包计划
-- =============================================
CREATE PROCEDURE [LES].[PROC_WMM_REPACKAGE_PLAN_CREATE]
	@R_PLANT NVARCHAR(5),
	@R_ASSEMBLY_LINE NVARCHAR(10),
	@ROUTE NVARCHAR(30),
	@PROCESS_DATETIME DATETIME = NULL
AS
BEGIN
	--参数处理：默认当前时间
	IF(@PROCESS_DATETIME IS NULL)
	BEGIN
		SET @PROCESS_DATETIME = GETDATE()
	END

	--翻包完成延时时间
	DECLARE @REPACKAGE_MINUTES INT = NULL
	BEGIN TRY
		SET @REPACKAGE_MINUTES = (SELECT CAST([PARAMETER_VALUE] AS INT) FROM [LES].[TS_SYS_CONFIG] WHERE PARAMETER_NAME='RepackageEndTime')
	END TRY
	BEGIN CATCH
		SET @REPACKAGE_MINUTES = NULL
	END CATCH
	SET @REPACKAGE_MINUTES = ISNULL(@REPACKAGE_MINUTES,0)

	DECLARE @ProcessTable Table (
		ID BIGINT
	)

	DECLARE @PLANT NVARCHAR(5) = NULL
	DECLARE @WM_NO NVARCHAR(10) = NULL
	DECLARE @ZONE_NO NVARCHAR(20) = NULL

	DECLARE ZONE_CURS1 CURSOR FOR
		SELECT PLANT,WM_NO,ZONE_NO FROM [LES].[TT_WMM_REPACKAGE_REQUEST]
			WHERE ISNULL(DEAL_FLAG,0)=0 AND PLANT=@R_PLANT AND ASSEMBLY_LINE=@R_ASSEMBLY_LINE AND REPACKAGE_ROUTE=@ROUTE
			GROUP BY PLANT,WM_NO,ZONE_NO
	OPEN ZONE_CURS1
	FETCH NEXT FROM ZONE_CURS1 INTO @PLANT,@WM_NO,@ZONE_NO
	WHILE(@@FETCH_STATUS=0)
	BEGIN	--存储区
			
		IF(@ZONE_NO IS NULL)
		BEGIN
			FETCH NEXT FROM ZONE_CURS1 INTO @PLANT,@WM_NO,@ZONE_NO
			CONTINUE
		END

		BEGIN TRANSACTION
		BEGIN TRY


			DELETE FROM @ProcessTable

			INSERT INTO @ProcessTable (ID)
				SELECT ID FROM [LES].[TT_WMM_REPACKAGE_REQUEST]
					WHERE ISNULL(DEAL_FLAG,0)=0 AND PLANT=@PLANT AND ASSEMBLY_LINE=@R_ASSEMBLY_LINE AND WM_NO=@WM_NO AND ZONE_NO=@ZONE_NO AND REPACKAGE_ROUTE=@ROUTE

			IF(NOT EXISTS(SELECT * FROM @ProcessTable))
			BEGIN
				COMMIT TRANSACTION
				--若不存在符合条件的，则跳过
				FETCH NEXT FROM ZONE_CURS1 INTO @PLANT,@WM_NO,@ZONE_NO
				CONTINUE
			END
					
			--生成翻包计划
			DECLARE @REPACKAGE_ETIME DATETIME = DATEADD(MINUTE,@REPACKAGE_MINUTES,@PROCESS_DATETIME)
			DECLARE @REPACKAGE_NO NVARCHAR(50)
			DECLARE @SEQ INT
			EXEC @SEQ = [LES].[PROC_SYS_GET_NEXT_SEQUENCE] 'RepackageSeq'
			SET  @REPACKAGE_NO = 'JH'+CONVERT(VARCHAR(2), GETDATE(),2)+REPLICATE('0',8-LEN(@SEQ))+RTRIM(@SEQ)
					
			INSERT INTO [LES].[TT_WMM_REPACKAGE_HEAD] (
						REPACKAGE_NO
					,[PLANT]
					,[WM_NO]
					,[ZONE_NO]
					,[REPACKAGE_TYPE]
					,[REPACKAGE_TIME]
					,[REPACKAGE_BTIME]
					,[REPACKAGE_ETIME]
					,[REPACKAGE_PICKUP_TIME]
					,[REPACKAGE_ROUTE]
					,[APPLY_KEEPER]
					,[BOOK_KEEPER]
					,[PUBLISH_KEEPER]
					,[PUBLISH_TIME]
					,[COUNT_STATUS]
					,[REPACKAGE_COUNT]
					,[EMERGENCY_TYPE]
					,[COUNT_REASON]
					,[ASSEMBLY_LINE]
					,[PLANT_ZONE]
					,[WORKSHOP]
					,[COMMENTS]
					,[CREATE_USER]
					,[CREATE_DATE]
					,[UPDATE_USER]
					,[UPDATE_DATE]
					,[REPACKAGE_PICKUP_ETIME]
				)
				SELECT
					@REPACKAGE_NO			--REPACKAGE_NO
					,@PLANT					--,[PLANT]
					,@WM_NO					--,[WM_NO]
					,@ZONE_NO				--,[ZONE_NO]
					,1						--,[REPACKAGE_TYPE]   1：翻包计划； 2：补货计划
					,@PROCESS_DATETIME		--,[REPACKAGE_TIME]
					,@PROCESS_DATETIME		--,[REPACKAGE_BTIME]
					,@REPACKAGE_ETIME		--,[REPACKAGE_ETIME]
					,NULL					--,[REPACKAGE_PICKUP_TIME]
					,@ROUTE					--,[REPACKAGE_ROUTE]
					,NULL					--,[APPLY_KEEPER]
					,NULL					--,[BOOK_KEEPER]
					,NULL					--,[PUBLISH_KEEPER]
					,@PROCESS_DATETIME		--,[PUBLISH_TIME]
					,0						--,[COUNT_STATUS]
					,1						--,[REPACKAGE_COUNT]
					,NULL					--,[EMERGENCY_TYPE]
					,NULL					--,[COUNT_REASON]
					,@R_ASSEMBLY_LINE		--,[ASSEMBLY_LINE]
					,NULL					--,[PLANT_ZONE]
					,NULL					--,[WORKSHOP]
					,NULL					--,[COMMENTS]
					,'admin'				--,[CREATE_USER]
					,GETDATE()				--,[CREATE_DATE]
					,NULL					--,[UPDATE_USER]
					,NULL					--,[UPDATE_DATE]
					,NULL					--,[REPACKAGE_PICKUP_ETIME]

			DECLARE @REPACKAGE_ID BIGINT
    		SET @REPACKAGE_ID = SCOPE_IDENTITY()
INSERT INTO [LES].[TT_WMM_REPACKAGE_DETAIL] (
						[REPACKAGE_ID]
						,[REPACKAGE_NO]
						,[NOTIFICATIONID]
						,[WM_NO]
						,[PART_NO]
						,[PART_NICKNAME]
						,[PART_CNAME]
						,[ZONE_NO]
						,[ULOC]
						,[LOCATION]
						,[PART_TYPE]
						,[NUM]
						,[INHOUSE_PACKAGE_MODEL]
						,[INHOUSE_PACKAGE]
						,[INBOUND_PACKAGE_MODEL]
						,[INBOUND_PACKAGE]
						,[PACKAGE_MODEL]
						,[PACKAGE]
						,[REPACKGE_STATE]
						,[REPACKGE_DATE]
						,[COMMENTS]
						,[CREATE_USER]
						,[CREATE_DATE]
						,[UPDATE_USER]
						,[UPDATE_DATE]
						,[ACTUAL_QTY]
						,[REQUIRED_QTY]
				)
				SELECT
						@REPACKAGE_ID			  --,[REPACKAGE_ID]		
						,@REPACKAGE_NO			  --,[REPACKAGE_NO]		
						,NULL					  --,[NOTIFICATIONID]		
						,WM_NO					  --,[WM_NO]		
						,PART_NO				  --,[PART_NO]		
						,PART_NICKNAME			  --,[PART_NICKNAME]		
						,PART_CNAME			      --,[PART_CNAME]		
						,ZONE_NO			      --,[ZONE_NO]		
						,DLOC					  --,[ULOC]		
						,NULL					  --,[LOCATION]		
						,NULL					  --,[PART_TYPE]		
						,RE_QTY/INHOUSE_PACKAGE   --,[NUM]		
						,INHOUSE_PACKAGE_MODEL	  --,[INHOUSE_PACKAGE_MODEL]		
						,INHOUSE_PACKAGE		  --,[INHOUSE_PACKAGE]		
						,PACKAGE_MODEL			  --,[INBOUND_PACKAGE_MODEL]		
						,PACKAGE				  --,[INBOUND_PACKAGE]		
						,PACKAGE_MODEL			  --,[PACKAGE_MODEL]		
						,PACKAGE				  --,[PACKAGE]		
						,NULL					  --,[REPACKGE_STATE]		
						,NULL					  --,[REPACKGE_DATE]		
						,NULL					  --,[COMMENTS]		
						,'admin'				  --,[CREATE_USER]		
						,GETDATE()				  --,[CREATE_DATE]		
						,NULL					  --,[UPDATE_USER]		
						,NULL					  --,[UPDATE_DATE]		
						,NULL					  --,[ACTUAL_QTY]		
						,RE_QTY					  --,[REQUIRED_QTY]
					FROM (
						--SELECT	*,(
						--		CASE WHEN REQUIRED_QTY%INHOUSE_PACKAGE=0 THEN [LES].[Func_LCM](REQUIRED_QTY,PACKAGE)
						--			ELSE [LES].[Func_LCM]((REQUIRED_QTY/INHOUSE_PACKAGE+1)*INHOUSE_PACKAGE,PACKAGE)
						--			END
						--		) RE_QTY
						--	FROM (
						--		SELECT R.PLANT,R.WM_NO,R.ZONE_NO,R.PART_NO,R.PART_CNAME,R.PART_NICKNAME,R.DLOC,R.PACKAGE_MODEL
						--			,SUM(R.REQUIRED_QTY) REQUIRED_QTY
						--			,R.PACKAGE,R.INHOUSE_PACKAGE_MODEL,R.INHOUSE_PACKAGE
						--			FROM [LES].[TT_WMM_REPACKAGE_REQUEST] R INNER JOIN @ProcessTable P ON R.ID=P.ID
						--			WHERE R.REQUIRED_BOX_NUM>0 and R.INHOUSE_PACKAGE>0 and R.PACKAGE>0
						--			GROUP BY R.PLANT,R.WM_NO,R.ZONE_NO,R.PART_NO,R.PART_CNAME,R.PART_NICKNAME,R.DLOC,R.PACKAGE_MODEL,R.PACKAGE,R.INHOUSE_PACKAGE_MODEL,R.INHOUSE_PACKAGE
						--	) T
						SELECT	*,(
									CASE WHEN REQUIRED_QTY%INHOUSE_PACKAGE=0 THEN REQUIRED_QTY
									ELSE (REQUIRED_QTY/INHOUSE_PACKAGE+1)*INHOUSE_PACKAGE
									END
								) RE_QTY
							FROM (
								SELECT R.PLANT,R.WM_NO,R.ZONE_NO,R.PART_NO,R.PART_CNAME,R.PART_NICKNAME,R.DLOC,R.PACKAGE_MODEL
									,SUM(R.REQUIRED_QTY) REQUIRED_QTY
									,R.PACKAGE,R.INHOUSE_PACKAGE_MODEL,R.INHOUSE_PACKAGE
									FROM [LES].[TT_WMM_REPACKAGE_REQUEST] R INNER JOIN @ProcessTable P ON R.ID=P.ID
									WHERE R.REQUIRED_BOX_NUM>0 and R.INHOUSE_PACKAGE>0 and R.PACKAGE>0
									GROUP BY R.PLANT,R.WM_NO,R.ZONE_NO,R.PART_NO,R.PART_CNAME,R.PART_NICKNAME,R.DLOC,R.PACKAGE_MODEL,R.PACKAGE,R.INHOUSE_PACKAGE_MODEL,R.INHOUSE_PACKAGE
							) T
					) TT
					WHERE RE_QTY IS NOT NULL
			--更新翻包需求表
			UPDATE R SET
						R.DEAL_FLAG=1
					,R.DEAL_DATE=GETDATE()
					,R.REPACKAGE_NO=@REPACKAGE_NO
					,R.UPDATE_USER='admin'
					,R.UPDATE_DATE=GETDATE()
				FROM [LES].[TT_WMM_REPACKAGE_REQUEST] R
				INNER JOIN @ProcessTable P ON R.ID=P.ID
					
			--生成补货计划
			EXEC  [LES].[PROC_WMM_REFILL_REQUEST_CREATE] @REPACKAGE_ID

			COMMIT TRANSACTION
		END TRY
		BEGIN CATCH
			--回滚事务
			ROLLBACK TRANSACTION
			--记录错误日志
			INSERT INTO [LES].[TS_SYS_EXCEPTION] (time_stamp, [application], [METHOD], class,  exception_message, error_code)
				SELECT getdate(),'WMM','PROC_WMM_REPACKAGE_PLAN_CREATE','Procedure',ISNULL(error_message(),''),ERROR_LINE()
			--标记错误数据
			UPDATE R SET
						R.DEAL_FLAG=9
					,R.DEAL_DATE=GETDATE()
					,R.UPDATE_USER='admin'
					,R.UPDATE_DATE=GETDATE()
				FROM [LES].[TT_WMM_REPACKAGE_REQUEST] R
					INNER JOIN @ProcessTable P ON R.ID=P.ID
		END CATCH
		FETCH NEXT FROM ZONE_CURS1 INTO @PLANT,@WM_NO,@ZONE_NO
	END	--存储区
	CLOSE  ZONE_CURS1
	DEALLOCATE ZONE_CURS1

END