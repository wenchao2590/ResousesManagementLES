

/********************************************************************/
/*                                                                  */
/*   Project Name:  Production Pull System                          */
/*   Program Name:  PROC_BAS_CHECK_TE_INHOUSE_PULL_LOGISTIC_STANDARD                        */
/*   Called By:     by the Page							*/
/*   Purpose:       This is the main stored procedure for the       */
/*   author:       wangchanghong	2011-06-20   				       */
/********************************************************************/

CREATE PROC [LES].[PROC_BAS_CHECK_TE_INHOUSE_PULL_LOGISTIC_STANDARD]
(@batch_no nvarchar(20)
)
AS
	BEGIN TRANSACTION;

	
	BEGIN TRY

	UPDATE [LES].TE_BAS_TMP_INHOUSE_PULL_LOGISTIC_STANDARD
	SET VALID_FLAG = 0,
	ERROR_MSG = ERROR_MSG + '主键重复;'
	WHERE 
	BATCH_NO =@batch_no  AND
	LOGICAL_PK+TERMAL_PK IN(
	SELECT LOGICAL_PK+TERMAL_PK  FROM [LES].TE_BAS_TMP_INHOUSE_PULL_LOGISTIC_STANDARD WHERE BATCH_NO =@batch_no  GROUP BY LOGICAL_PK,TERMAL_PK HAVING COUNT(1) > 1)

	UPDATE [LES].TE_BAS_TMP_INHOUSE_PULL_LOGISTIC_STANDARD
	SET VALID_FLAG = 0
	WHERE 
	BATCH_NO <> @batch_no AND
	LOGICAL_PK IN(
	SELECT LOGICAL_PK FROM [LES].TE_BAS_TMP_INHOUSE_PULL_LOGISTIC_STANDARD WHERE BATCH_NO = @batch_no  AND VALID_FLAG IS NULL)

	UPDATE [LES].TE_BAS_TMP_INHOUSE_PULL_LOGISTIC_STANDARD
	SET VALID_FLAG = 0
	WHERE 
	BATCH_NO =  @batch_no AND ERROR_MSG <> ''
	
		UPDATE [LES].TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD
	SET VALID_FLAG = 0,
	ERROR_MSG = ERROR_MSG + '上线系统模块与零件类必须同时为空;'
	WHERE  INHOUSE_SYSTEM_MODE ='' AND  INHOUSE_PART_CLASS <> ''
	
	UPDATE [LES].TE_BAS_TMP_MAINTAIN_INHOUSE_LOGISTIC_STANDARD
	SET VALID_FLAG = 0,
	ERROR_MSG = ERROR_MSG + '厂内系统模块与零件类必须同时为空;'
	WHERE  IN_PLANT_SYSTEM_MODE ='' AND  IN_PLANT_LOGISTIC_PART_CLASS <> ''
	
		UPDATE [LES].TE_BAS_TMP_INHOUSE_PULL_LOGISTIC_STANDARD
	SET VALID_FLAG = 0,
	ERROR_MSG = ERROR_MSG + '上线系统模块只允许JIS与SPS;'
	WHERE  INHOUSE_SYSTEM_MODE <>'' AND INHOUSE_SYSTEM_MODE NOT IN( 'JIS','SPS')
	
	UPDATE [LES].TE_BAS_TMP_INHOUSE_PULL_LOGISTIC_STANDARD
	SET VALID_FLAG = 0,
	ERROR_MSG = ERROR_MSG + '厂内系统模块只允许JIS,SPS,PCS;'
	WHERE  IN_PLANT_SYSTEM_MODE <>'' AND IN_PLANT_SYSTEM_MODE NOT IN( 'JIS','SPS','PCS')

	--零件类
	
	UPDATE [LES].TE_BAS_TMP_INHOUSE_PULL_LOGISTIC_STANDARD
	SET VALID_FLAG = 0,
	ERROR_MSG = ERROR_MSG + '上线系统模块与厂内系统模块相同;'
	WHERE 	LOGICAL_PK IN(
	SELECT LOGICAL_PK FROM [LES].TE_BAS_TMP_INHOUSE_PULL_LOGISTIC_STANDARD
	WHERE  INHOUSE_SYSTEM_MODE = IN_PLANT_SYSTEM_MODE AND INHOUSE_SYSTEM_MODE <> '' AND IN_PLANT_SYSTEM_MODE <> '')
	--不为空且两者相等，为有误数据
	
	
   	UPDATE [LES].TE_BAS_TMP_INHOUSE_PULL_LOGISTIC_STANDARD
	SET VALID_FLAG = 0,
	ERROR_MSG = ERROR_MSG + '上线JIS零件类为空或不存在;'
	WHERE 	LOGICAL_PK IN(
	SELECT LOGICAL_PK FROM [LES].TE_BAS_TMP_INHOUSE_PULL_LOGISTIC_STANDARD AS INHOUSE
                         LEFT JOIN LES.TM_JIS_RACK AS BOX ON 
                                    INHOUSE.INHOUSE_PART_CLASS = BOX.RACK 
                                AND INHOUSE.PLANT = BOX.PLANT 
                                AND INHOUSE.ASSEMBLY_LINE = BOX.ASSEMBLY_LINE
	WHERE  INHOUSE_SYSTEM_MODE = 'JIS' AND BOX.RACK IS NULL)  -- 有JIS标记但在JIS零件类中未找到	
	
	
    UPDATE [LES].TE_BAS_TMP_INHOUSE_PULL_LOGISTIC_STANDARD
	SET VALID_FLAG = 0,
	ERROR_MSG = ERROR_MSG + '厂内JIS零件类为空或不存在;'
	WHERE 	LOGICAL_PK IN(
	SELECT LOGICAL_PK FROM [LES].TE_BAS_TMP_INHOUSE_PULL_LOGISTIC_STANDARD AS INHOUSE
                         LEFT JOIN LES.TM_JIS_RACK AS BOX ON 
                                    INHOUSE.IN_PLANT_LOGISTIC_PART_CLASS = BOX.RACK 
                                AND INHOUSE.PLANT = BOX.PLANT 
                                AND INHOUSE.ASSEMBLY_LINE = BOX.ASSEMBLY_LINE
	WHERE  IN_PLANT_SYSTEM_MODE = 'JIS' AND BOX.RACK IS NULL)  -- 有JIS标记但在JIS零件类中未找到
	
	
	UPDATE [LES].TE_BAS_TMP_INHOUSE_PULL_LOGISTIC_STANDARD
	SET VALID_FLAG = 0,
	ERROR_MSG = ERROR_MSG + '厂内PCS零件类为空或不存在;'
	WHERE 	LOGICAL_PK IN(
	SELECT LOGICAL_PK FROM [LES].TE_BAS_TMP_INHOUSE_PULL_LOGISTIC_STANDARD AS INHOUSE
                         LEFT JOIN LES.TM_PCS_ROUTE_BOX_PARTS AS BOX ON 
                                    INHOUSE.IN_PLANT_LOGISTIC_PART_CLASS = BOX.BOX_PARTS 
                                AND INHOUSE.PLANT = BOX.PLANT 
                                AND INHOUSE.ASSEMBLY_LINE = BOX.ASSEMBLY_LINE
	WHERE  IN_PLANT_SYSTEM_MODE = 'PCS' AND BOX.BOX_PARTS IS NULL)  -- 有PCS标记但在PCS零件类中未找到

	UPDATE [LES].TE_BAS_TMP_INHOUSE_PULL_LOGISTIC_STANDARD
	SET MEASURING_UNIT_NO = U.MEASURING_UNIT_NO
	FROM [LES].TE_BAS_TMP_INHOUSE_PULL_LOGISTIC_STANDARD AS T
	INNER JOIN LES.TM_BAS_MEASURING_UNIT AS U ON T.MEASURING_UNIT_NO = U.MEASURING_UNIT_NAME


	END TRY
	BEGIN CATCH
		SELECT 
			ERROR_NUMBER() AS ErrorNumber
			,ERROR_SEVERITY() AS ErrorSeverity
			,ERROR_STATE() AS ErrorState
			,ERROR_PROCEDURE() AS ErrorProcedure
			,ERROR_LINE() AS ErrorLine
			,ERROR_MESSAGE() AS ErrorMessage;

		IF @@TRANCOUNT > 0
			ROLLBACK TRANSACTION;
	END CATCH;

	IF @@TRANCOUNT > 0
		COMMIT TRANSACTION;