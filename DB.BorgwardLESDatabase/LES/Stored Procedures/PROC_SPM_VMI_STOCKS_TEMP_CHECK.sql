/********************************************************************/
/*                                                                  */
/*   Project Name:  LES System                          */
/*   Program Name:  [PROC_SPM_VMI_STOCKS_TEMP_CHECK]                       */
/*   Called By:     by the Page							*/
/*   Purpose:       VMI库存导入临时表数据检查       */
/*   author:       Scott  				       */
/*   更新时间:       2017-09-12   				       */
/********************************************************************/
CREATE PROC [LES].[PROC_SPM_VMI_STOCKS_TEMP_CHECK]
@UserLoginName nvarchar(50)
AS
BEGIN
	BEGIN TRANSACTION;

	BEGIN TRY

	declare @UserId int;

	select @UserId=[USER_ID] from [LES].[TS_SYS_USER] where USER_LOGIN_NAME=@UserLoginName;

	--如果是初始化或者盘点差异调整，那么先更新当前库存中调整前的零件件数到列STOCKS_NUM_BEFORE
	update [LES].[TE_SPM_VMI_STOCKS_TEMP] 
	set [STOCKS_NUM_BEFORE]=TS.STOCKS_NUM
	from [LES].[TE_SPM_VMI_STOCKS_TEMP] as TE
	inner join 
	[LES].[TT_WMS_STOCKS] as TS
	on TE.D_PLANT=TS.PLANT
	and TE.D_WM_NO=TS.WM_NO
	and TE.D_ZONE_NO=TS.ZONE_NO
	and TE.SUPPLIER_NUM=TS.SUPPLIER_NUM
	and TE.PART_NO=TS.PART_NO
	and TE.MODIFICATION_CODE in (N'InventoryAdjustment',N'Initialize')

	IF EXISTS (select 1 from [LES].TE_SPM_VMI_STOCKS_TEMP where MODIFICATION_CODE=N'InternalTran' group by PLANT,WM_NO,ZONE_NO,SUPPLIER_NUM,PART_NO,D_ZONE_NO having count(1)>1)
	BEGIN
		select null as PART_NO,N'导入文件中，相同源存储区、目的存储区、经销商和零件号，只能有一条数据' as ERROR_MSG
		return
	END

	IF EXISTS (select 1 from [LES].TE_SPM_VMI_STOCKS_TEMP where MODIFICATION_CODE<>N'InternalTran' group by PLANT,WM_NO,D_ZONE_NO,SUPPLIER_NUM,PART_NO having count(1)>1)
	BEGIN
		select null as PART_NO,N'导入文件中，相同目的存储区、经销商和零件号，只能有一条数据' as ERROR_MSG
		return
	END

	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '用户:【'+@UserLoginName+'】没有权限设置目的存储区:【'+[D_ZONE_NO]+'】的库存数据;'
	WHERE [D_ZONE_NO] NOT IN (SELECT [ZONE_NO] FROM [LES].[TR_SYS_USER_WMS] WHERE [USER_ID]=@UserId) and VALID_FLAG!=0

	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '用户:【'+@UserLoginName+'】没有权限设置源存储区:【'+[ZONE_NO]+'】的库存数据;'
	WHERE MODIFICATION_CODE=N'InternalTran' and [ZONE_NO] NOT IN (SELECT [ZONE_NO] FROM [LES].[TR_SYS_USER_WMS] WHERE [USER_ID]=@UserId) and VALID_FLAG!=0

	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '用户:【'+@UserLoginName+'】没有权限设置供应商:【'+[SUPPLIER_NUM]+'】的库存数据;'
	WHERE [SUPPLIER_NUM] NOT IN (SELECT [SUPPLIER_NUM] FROM [LES].[TR_SYS_USER_SUPPLIER] WHERE [USER_ID]=@UserId) and VALID_FLAG!=0

	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '调整类型代码:【'+[MODIFICATION_CODE]+'】设置不正确, 该设置只能是【Initialize】(导入初始化),【InventoryAdjustment】(盘点差异调整),【InternalTran】(内部移库),【DefectOuptput】(不合格品出库)'
	WHERE [MODIFICATION_CODE] NOT IN (N'Initialize',N'InventoryAdjustment',N'InternalTran',N'DefectOuptput') and VALID_FLAG!=0

	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '调整类型代码是:【'+[MODIFICATION_CODE]+'】的时候, 零件号【'+PART_NO+'】的调整件数【'+CAST(ISNULL(STOCKS_NUM,0) as nvarchar(50))+'】只能小于当前库存件数【'+CAST(ISNULL(STOCKS_NUM_BEFORE,0) as nvarchar(50))+'】'
	WHERE [MODIFICATION_CODE] IN (N'Initialize',N'InventoryAdjustment') 
	and STOCKS_NUM_BEFORE is not null 
	and ISNULL(STOCKS_NUM,0)>=STOCKS_NUM_BEFORE

	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '调整件数:【'+cast(STOCKS_NUM as nvarchar(50))+'】不能小于0'
	WHERE [MODIFICATION_CODE] in (N'InternalTran',N'DefectOuptput') and STOCKS_NUM<0

	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '总件数:【'+cast(STOCKS_NUM as nvarchar(50))+'】不能小于0'
	WHERE [MODIFICATION_CODE] in (N'Initialize',N'InventoryAdjustment') and STOCKS_NUM<0 and exists(select 1 from TM_WMM_ZONES where TE_SPM_VMI_STOCKS_TEMP.D_ZONE_NO=TM_WMM_ZONES.ZONE_NO and TM_WMM_ZONES.IS_NEGATIVE=0)

	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '总件数:【'+cast(STOCKS_NUM as nvarchar(50))+'】不能小于冻结件数:【'+cast(FROZEN_STOCKS as nvarchar(50))+'】'
	WHERE [MODIFICATION_CODE] in (N'Initialize',N'InventoryAdjustment') and STOCKS_NUM<ISNULL(FROZEN_STOCKS,0) and exists(select 1 from TM_WMM_ZONES where TE_SPM_VMI_STOCKS_TEMP.D_ZONE_NO=TM_WMM_ZONES.ZONE_NO and TM_WMM_ZONES.IS_NEGATIVE=0)

	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '冻结件数:【'+cast(FRAGMENT_NUM as nvarchar(50))+'】不能小于0'
	WHERE [MODIFICATION_CODE] in (N'Initialize',N'InventoryAdjustment') and ISNULL(FRAGMENT_NUM,0)<0

	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '出库件数:【'+cast([STOCKS_NUM] as nvarchar(50))+'】大于了目的存储区:【'+D_ZONE_NO+'】的零件:【'+PART_NO+'】可用库存;'
	WHERE MODIFICATION_CODE=N'DefectOuptput' and  EXISTS (SELECT 1 FROM 
    [LES].[TT_WMS_STOCKS] Z WHERE TE_SPM_VMI_STOCKS_TEMP.D_PLANT=Z.PLANT AND TE_SPM_VMI_STOCKS_TEMP.D_WM_NO=Z.WM_NO AND TE_SPM_VMI_STOCKS_TEMP.D_ZONE_NO=Z.ZONE_NO AND TE_SPM_VMI_STOCKS_TEMP.PART_NO=Z.PART_NO AND TE_SPM_VMI_STOCKS_TEMP.STOCKS_NUM>(Z.STOCKS_NUM-ISNULL(Z.FROZEN_STOCKS,0))) and VALID_FLAG!=0 
	and 
	exists(select 1 from LES.TM_WMM_ZONES where TE_SPM_VMI_STOCKS_TEMP.D_ZONE_NO=TM_WMM_ZONES.ZONE_NO and TM_WMM_ZONES.IS_NEGATIVE=0)

	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '移库件数:【'+cast([STOCKS_NUM] as nvarchar(50))+'】大于了当前源存储区:【'+ZONE_NO+'】的零件:【'+PART_NO+'】可用库存;'
	WHERE MODIFICATION_CODE=N'InternalTran' and  EXISTS (SELECT 1 FROM 
    [LES].[TT_WMS_STOCKS] Z WHERE TE_SPM_VMI_STOCKS_TEMP.PLANT=Z.PLANT AND TE_SPM_VMI_STOCKS_TEMP.WM_NO=Z.WM_NO AND TE_SPM_VMI_STOCKS_TEMP.ZONE_NO=Z.ZONE_NO AND TE_SPM_VMI_STOCKS_TEMP.PART_NO=Z.PART_NO AND TE_SPM_VMI_STOCKS_TEMP.STOCKS_NUM>(Z.STOCKS_NUM-ISNULL(Z.FROZEN_STOCKS,0))) and VALID_FLAG!=0 
	and 
	exists(select 1 from LES.TM_WMM_ZONES where TE_SPM_VMI_STOCKS_TEMP.ZONE_NO=TM_WMM_ZONES.ZONE_NO and TM_WMM_ZONES.IS_NEGATIVE=0)

	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '供应商不正确:【'+[SUPPLIER_NUM]+'】;'
	WHERE [SUPPLIER_NUM] NOT IN (SELECT [SUPPLIER_NUM] FROM [LES].[TM_BAS_SUPPLIER])

	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '工厂不正确:【'+[D_PLANT]+'】;'
	WHERE [PLANT] NOT IN (SELECT [D_PLANT] FROM [LES].[TM_BAS_PLANT])

	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '仓库不正确:【'+[D_WM_NO]+'】;'
	WHERE [D_WM_NO] NOT IN (SELECT [WAREHOUSE] FROM [LES].[TM_BAS_WAREHOUSE]) and VALID_FLAG!=0

	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '仓库与工厂关联不正确:【'+[D_WM_NO]+'】;'
	WHERE STOCK_IDENTITY NOT IN (SELECT  STOCK_IDENTITY FROM [LES].[TE_SPM_VMI_STOCKS_TEMP] M JOIN 
    LES.[TM_BAS_WAREHOUSE] Z ON M.D_PLANT=Z.PLANT AND M.D_WM_NO=Z.WAREHOUSE) and VALID_FLAG!=0
	
	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '目的存储区不正确:【'+[D_ZONE_NO]+'】;'
	WHERE [D_ZONE_NO] NOT IN (SELECT [ZONE_NO] FROM [LES].[TM_WMM_ZONES]) and VALID_FLAG!=0

	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '源存储区不正确:【'+[ZONE_NO]+'】;'
	WHERE MODIFICATION_CODE=N'InternalTran' and  [ZONE_NO] NOT IN (SELECT [ZONE_NO] FROM [LES].[TM_WMM_ZONES]) and VALID_FLAG!=0

	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '目的存储区与仓库关联不正确:【'+[D_ZONE_NO]+'】;'
	WHERE STOCK_IDENTITY NOT IN (SELECT STOCK_IDENTITY FROM [LES].[TE_SPM_VMI_STOCKS_TEMP] M INNER JOIN 
    LES.TM_WMM_ZONES Z ON M.D_WM_NO=Z.WM_NO AND M.D_ZONE_NO=Z.ZONE_NO) and VALID_FLAG!=0

	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '源存储区与仓库关联不正确:【'+[ZONE_NO]+'】;'
	WHERE MODIFICATION_CODE=N'InternalTran' and  STOCK_IDENTITY NOT IN (SELECT STOCK_IDENTITY FROM [LES].[TE_SPM_VMI_STOCKS_TEMP] M INNER JOIN 
    LES.TM_WMM_ZONES Z ON M.WM_NO=Z.WM_NO AND M.ZONE_NO=Z.ZONE_NO) and VALID_FLAG!=0

	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '无法找到源存储区:【'+ZONE_NO+'】中零件:【'+PART_NO+'】的库存记录;'
	WHERE MODIFICATION_CODE=N'InternalTran' and  NOT EXISTS (SELECT 1 FROM 
    [LES].[TT_WMS_STOCKS] Z WHERE TE_SPM_VMI_STOCKS_TEMP.PLANT=Z.PLANT AND TE_SPM_VMI_STOCKS_TEMP.WM_NO=Z.WM_NO AND TE_SPM_VMI_STOCKS_TEMP.ZONE_NO=Z.ZONE_NO) and VALID_FLAG!=0

	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '没有在工厂【'+D_PLANT+'】仓库【'+D_WM_NO+'】目的存储区【'+D_ZONE_NO+'】,下找到VMI供应商【'+SUPPLIER_NUM+'】的基础数据设置;'
	WHERE not exists 
	(select 1 
	 from [LES].[TM_BAS_VMI_SUPPLIER] 
	 where 
		TE_SPM_VMI_STOCKS_TEMP.D_PLANT=[TM_BAS_VMI_SUPPLIER].PLANT
		and
		TE_SPM_VMI_STOCKS_TEMP.D_WM_NO=[TM_BAS_VMI_SUPPLIER].WM_NO
		and
		TE_SPM_VMI_STOCKS_TEMP.D_ZONE_NO=[TM_BAS_VMI_SUPPLIER].ZONE_NO
		and
		TE_SPM_VMI_STOCKS_TEMP.SUPPLIER_NUM=[TM_BAS_VMI_SUPPLIER].SUPPLIER_NUM
	) 
	and VALID_FLAG!=0

	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '没有在工厂【'+PLANT+'】仓库【'+WM_NO+'】存储区【'+ZONE_NO+'】,下找到VMI供应商【'+SUPPLIER_NUM+'】的基础数据设置;'
	WHERE 
	MODIFICATION_CODE=N'InternalTran'
	and 
	not exists 
	(select 1 
	 from [LES].[TM_BAS_VMI_SUPPLIER] 
	 where 
		TE_SPM_VMI_STOCKS_TEMP.PLANT=[TM_BAS_VMI_SUPPLIER].PLANT
		and
		TE_SPM_VMI_STOCKS_TEMP.WM_NO=[TM_BAS_VMI_SUPPLIER].WM_NO
		and
		TE_SPM_VMI_STOCKS_TEMP.ZONE_NO=[TM_BAS_VMI_SUPPLIER].ZONE_NO
		and
		TE_SPM_VMI_STOCKS_TEMP.SUPPLIER_NUM=[TM_BAS_VMI_SUPPLIER].SUPPLIER_NUM
	) 
	and VALID_FLAG!=0


	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '零件仓库存储区:【'+D_ZONE_NO+'】不存在此物料号:【'+PART_NO+'】;'
	WHERE STOCK_IDENTITY NOT IN (SELECT M.STOCK_IDENTITY FROM [LES].TE_SPM_VMI_STOCKS_TEMP M JOIN 
    LES.[TM_BAS_PARTS_STOCK] Z ON M.D_PLANT=Z.PLANT AND M.D_WM_NO=Z.WM_NO AND M.D_ZONE_NO=Z.ZONE_NO AND M.PART_NO=Z.PART_NO) and VALID_FLAG!=0
	
	UPDATE [LES].TE_SPM_VMI_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '零件仓库源存储区:【'+ZONE_NO+'】不存在此物料号:【'+PART_NO+'】;'
	WHERE MODIFICATION_CODE=N'InternalTran' and STOCK_IDENTITY NOT IN (SELECT M.STOCK_IDENTITY FROM [LES].TE_SPM_VMI_STOCKS_TEMP M JOIN 
    LES.[TM_BAS_PARTS_STOCK] Z ON M.PLANT=Z.PLANT AND M.WM_NO=Z.WM_NO AND M.ZONE_NO=Z.ZONE_NO AND M.PART_NO=Z.PART_NO) and VALID_FLAG!=0
	
	UPDATE TE
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '零件仓库中对应的标准包装数不能为零;'
	from 
		[LES].TE_SPM_VMI_STOCKS_TEMP TE,
		LES.[TM_BAS_PARTS_STOCK] TS
	WHERE TS.PLANT=TE.D_PLANT AND TS.WM_NO=TE.D_WM_NO AND TS.ZONE_NO=TE.D_ZONE_NO AND TS.PART_NO=TE.PART_NO
			AND TS.PACKAGE=0 and VALID_FLAG!=0
			
	UPDATE TE
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '零件仓库中对应的标准包装数不能为空;'
	from 
		[LES].TE_SPM_VMI_STOCKS_TEMP TE,
		LES.[TM_BAS_PARTS_STOCK] TS
	WHERE TS.PLANT=TE.D_PLANT AND TS.WM_NO=TE.D_WM_NO AND TS.ZONE_NO=TE.D_ZONE_NO AND TS.PART_NO=TE.PART_NO
			AND TS.PACKAGE is null and VALID_FLAG!=0

	--返回错误数据
	select PART_NO,ERROR_MSG from [LES].TE_SPM_VMI_STOCKS_TEMP where VALID_FLAG=0
	END TRY
	BEGIN CATCH
		SELECT 
			ERROR_NUMBER() AS ErrorNumber
			,ERROR_SEVERITY() AS ErrorSeverity
			,ERROR_STATE() AS ErrorState
			,ERROR_PROCEDURE() AS ErrorProcedure
			,ERROR_LINE() AS ErrorLine
			,ERROR_MESSAGE() AS ErrorMessage;

		IF @@TRANCOUNT > 0
			ROLLBACK TRANSACTION;
	END CATCH;

	IF @@TRANCOUNT > 0
		COMMIT TRANSACTION;


END