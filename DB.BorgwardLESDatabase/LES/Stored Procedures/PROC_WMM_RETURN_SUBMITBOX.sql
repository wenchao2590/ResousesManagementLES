



create PROC  [LES].[PROC_WMM_RETURN_SUBMITBOX] 
	@RETURN_ID int,
	@PART_NO nvarchar(50),
	@BARCODE_DATA NVARCHAR(50),
	@ActualQty DECIMAL(18,2),
	@Create_User NVARCHAR(50)
AS
BEGIN
BEGIN TRAN
BEGIN TRY
	set @ActualQty = isnull(@ActualQty,0)
	IF EXISTS(SELECT 1 FROM LES.TM_WMM_TRAN_DETAILS WHERE BARCODE_DATA=@BARCODE_DATA AND TRAN_TYPE=3 AND TRAN_STATE=0)
	BEGIN
		DECLARE @LASTNUM DECIMAL,@DETAILS_ID INT
		SELECT @DETAILS_ID= TRAN_ID,@LASTNUM=NUM FROM LES.TM_WMM_TRAN_DETAILS WHERE BARCODE_DATA=@BARCODE_DATA AND TRAN_TYPE=3 AND TRAN_STATE=0
		
		UPDATE LES.TT_WMM_RETURN_DETAIL SET PART_COUNT=isnull(PART_COUNT,0)-isnull(@LASTNUM,0)+@ActualQty 
		WHERE RETURN_ID=@RETURN_ID AND PART_NO=@PART_NO
		
		UPDATE LES.TM_WMM_TRAN_DETAILS SET NUM=@ActualQty WHERE TRAN_ID=@DETAILS_ID
	END
	ELSE
	BEGIN
		UPDATE LES.TT_WMM_RETURN_DETAIL SET PART_COUNT=isnull(PART_COUNT,0)+@ActualQty,
		PACK_COUNT = isnull(PART_COUNT,0)+1
		WHERE RETURN_ID=@RETURN_ID AND PART_NO=@PART_NO

		INSERT INTO LES.TM_WMM_TRAN_DETAILS (
		BARCODE_DATA ,
		PART_NO,
		BOX_NUM,
		Num,
		Plant,
		WM_NO,
		ZONE_NO,
		Dloc,
		PACKAGE_MODEL,
		PACKAGE,
		Tran_State,
		Supplier_Num,
		Part_Cname,
		MEASURING_UNIT_NO,
		Tran_Type,
		Tran_No,
		Create_Date,
		Create_User,
		Tran_Date)
		select
		@BARCODE_DATA,--BARCODE_DATA
		@PART_NO,--PART_NO
		1,--BOX_NUM
		@ActualQty,--Num
		A.PLANT,--Plant
		A.WM_NO,--WM_NO
		A.ZONE_NO,--ZONE_NO
		B.DLOC,--Dloc
		B.PACKAGE_MODEL,--PACKAGE_MODEL
		B.PACKAGE,--PACKAGE
		0,--Tran_State
		A.SUPPLIER_NUM,--Supplier_Num
		B.PART_CNAME,--Part_Cname
		B.PART_UNITS,--MEASURING_UNIT_NO
		3,--Tran_Type
		A.RETURN_NO,--Tran_No
		GETDATE(),--Create_Date
		@Create_User,--Create_User
		GETDATE()--Tran_Date
		from les.TT_WMM_RETURN A
		inner join LES.TM_BAS_PARTS_STOCK B ON A.PLANT=B.PLANT AND A.ZONE_NO=B.ZONE_NO AND B.PART_NO=@PART_NO
		where A.RETURN_ID=@RETURN_ID
	END
END TRY   
BEGIN CATCH   
IF @@trancount > 0   
ROLLBACK TRAN   
END CATCH  
if @@trancount > 0   
COMMIT TRAN  
END