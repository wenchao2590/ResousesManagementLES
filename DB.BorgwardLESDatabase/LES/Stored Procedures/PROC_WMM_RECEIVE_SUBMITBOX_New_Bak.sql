



create PROC [LES].[PROC_WMM_RECEIVE_SUBMITBOX_New_Bak] 
	@RECEIVE_ID int,
	@PART_NO nvarchar(50),
	@BARCODE_DATA NVARCHAR(50),
	@ActualQty int,
	@Create_User NVARCHAR(50)
AS
BEGIN
BEGIN TRAN
BEGIN TRY
	SET @ActualQty = ISNULL(@ActualQty, 0)
	IF EXISTS(SELECT 1 FROM [LES].[TM_WMM_TRAN_DETAILS] WHERE BARCODE_DATA=@BARCODE_DATA  AND TRAN_TYPE=1 AND TRAN_STATE=0)
	BEGIN
		DECLARE @LASTNUM DECIMAL(18,2)
		
		SELECT @LASTNUM=ISNULL(NUM, 0) FROM [LES].[TM_WMM_TRAN_DETAILS] WHERE BARCODE_DATA=@BARCODE_DATA  AND TRAN_TYPE=1 AND TRAN_STATE=0
			
		UPDATE LES.TT_WMM_RECEIVE_DETAIL 
		SET Current_QTY =ISNULL(Current_QTY, 0)-@LASTNUM+@ActualQty
		WHERE RECEIVE_ID=@RECEIVE_ID AND PART_NO=@PART_NO

		DECLARE @RECEIVE_NO NVARCHAR(50)
		SELECT @RECEIVE_NO=RECEIVE_NO FROM LES.TT_WMM_RECEIVE WHERE RECEIVE_ID=@RECEIVE_ID
	
		UPDATE LES.TM_WMM_TRAN_DETAILS SET NUM=@ActualQty WHERE TRAN_NO=@RECEIVE_NO AND BARCODE_DATA=@BARCODE_DATA
	END
	ELSE
	BEGIN
		UPDATE LES.TT_WMM_RECEIVE_DETAIL 
		SET Current_QTY =ISNULL(Current_QTY, 0)+@ActualQty,
			Current_BOX_NUM =ISNULL(Current_BOX_NUM, 0)+1 
		WHERE RECEIVE_ID=@RECEIVE_ID AND PART_NO=@PART_NO
			
		INSERT INTO LES.TM_WMM_TRAN_DETAILS (
		BARCODE_DATA ,
		PART_NO,
		BOX_NUM,
		Num,
		Plant,
		WM_NO,
		ZONE_NO,
		Dloc,
		PACKAGE_MODEL,
		PACKAGE,
		Tran_State,
		Supplier_Num,
		BOX_PARTS,
		Part_Cname,
		MEASURING_UNIT_NO,
		Tran_Type,
		Tran_No,
		Create_Date,
		Create_User,
		Tran_Date)
		select
		@BARCODE_DATA,--BARCODE_DATA
		@PART_NO,--PART_NO
		1,--BOX_NUM
		@ActualQty,--Num
		A.PLANT,--Plant
		A.WM_NO,--WM_NO
		A.ZONE_NO,--ZONE_NO
		B.DLOC,--Dloc
		B.PACKAGE_MODEL,--PACKAGE_MODEL
		B.PACKAGE,--PACKAGE
		0,--Tran_State
		A.SUPPLIER_NUM,--Supplier_Num
		B.BOX_PARTS,
		B.PART_CNAME,--Part_Cname
		B.MEASURING_UNIT_NO,--MEASURING_UNIT_NO
		1,--Tran_Type
		A.RECEIVE_NO,--Tran_No
		GETDATE(),--Create_Date
		@Create_User,--Create_User
		GETDATE()--Tran_Date
		from les.TT_WMM_RECEIVE A
		inner join les.TT_WMM_RECEIVE_DETAIL B on A.RECEIVE_ID=B.RECEIVE_ID AND B.PART_NO=@PART_NO
		where A.RECEIVE_ID=@RECEIVE_ID
	END
END TRY   
BEGIN CATCH   
IF @@trancount > 0   
ROLLBACK TRAN   
END CATCH  
if @@trancount > 0   
COMMIT TRAN  
END