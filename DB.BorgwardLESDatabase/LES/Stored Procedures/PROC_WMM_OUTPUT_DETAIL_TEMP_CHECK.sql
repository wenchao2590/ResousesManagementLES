/********************************************************************/
/*                                                                  */
/*   Project Name:  LES System										*/
/*   Program Name:  [PROC_WMM_OUTPUT_DETAIL_TEMP_CHECK]             */
/*   Called By:     by the Page										*/
/*   Purpose:       This is the main stored procedure for the       */
/*   author:       andy	2015-06-09   								*/
/********************************************************************/
CREATE PROC [LES].[PROC_WMM_OUTPUT_DETAIL_TEMP_CHECK]
AS
	BEGIN TRANSACTION
	BEGIN TRY

	UPDATE [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] WITH (ROWLOCK)
	SET [VALID_FLAG] = 0,
		[ERROR_MSG] = [ERROR_MSG] + '出库单号为空'
	WHERE [OUTPUT_NO] IS NULL OR LEN([OUTPUT_NO]) < 1

	UPDATE [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] WITH (ROWLOCK)
	SET [VALID_FLAG] = 0,
		[ERROR_MSG] = [ERROR_MSG] + '零件号长度超出'
	WHERE LEN([PART_NO]) > 20

	UPDATE [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] WITH (ROWLOCK)
	SET [VALID_FLAG] = 0,
		[ERROR_MSG] = [ERROR_MSG] + '出库单已被确认不可再修改'
	WHERE EXISTS
	(
		SELECT 1 FROM [LES].[TT_WMM_OUTPUT] R WITH (NOLOCK)
		WHERE R.[OUTPUT_NO] = [LES].[TE_WMM_OUTPUT_DETAIL_TEMP].[OUTPUT_NO]
		AND R.[CONFIRM_FLAG] IN (1,2)
	)

	UPDATE [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] WITH (ROWLOCK)
	SET [VALID_FLAG] = 0,
		[ERROR_MSG] = [ERROR_MSG] + '在指定区域未检索到该零件'
	WHERE [PART_NO] NOT IN
	(
		SELECT
			T.[PART_NO]
		FROM [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] T WITH (NOLOCK)
		INNER JOIN [LES].[TT_WMM_OUTPUT] TT WITH (NOLOCK) ON T.[OUTPUT_NO] = TT.[OUTPUT_NO]
		INNER JOIN [LES].[TM_BAS_PARTS_STOCK] S WITH (NOLOCK)
		ON S.[PART_NO] = T.[PART_NO] AND S.[PLANT] = TT.[PLANT] AND S.[WM_NO] = TT.[WM_NO] AND S.[ZONE_NO] = TT.[ZONE_NO]
	)

	UPDATE [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] WITH (ROWLOCK)
	SET [VALID_FLAG] = 0,
		[ERROR_MSG] = [ERROR_MSG] + '在目的存储区未检索到该零件'
	WHERE [PART_NO] NOT IN
	(
		SELECT
			T.[PART_NO]
		FROM [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] T WITH (NOLOCK)
		INNER JOIN [LES].[TT_WMM_OUTPUT] TT WITH (NOLOCK) ON T.[OUTPUT_NO] = TT.[OUTPUT_NO]
		JOIN [LES].[TM_WMM_ZONES] Z WITH (NOLOCK) ON Z.[ZONE_NO] = TT.[PLANT_ZONE]
		JOIN [LES].[TM_BAS_PARTS_STOCK] S WITH (NOLOCK)
		ON S.[PART_NO] = T.[PART_NO] AND S.[PLANT] = Z.[PLANT] AND S.[WM_NO] = Z.[WM_NO] AND S.[ZONE_NO] = Z.[ZONE_NO]
	)

	UPDATE [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] WITH (ROWLOCK)
	SET [VALID_FLAG] = 0,
		[ERROR_MSG] = [ERROR_MSG] + '源仓库对应的零件仓库信息中入库包装数为空或者为零' 
	WHERE PART_NO IN 
	(
		SELECT
			S.[PART_NO]
		FROM [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] T WITH (NOLOCK)
		INNER JOIN [LES].[TT_WMM_OUTPUT] TT WITH (NOLOCK) ON TT.[OUTPUT_NO] = T.[OUTPUT_NO]
	    INNER JOIN [LES].[TM_BAS_PARTS_STOCK] S WITH (NOLOCK) ON TT.[PLANT] = S.[PLANT] AND TT.[WM_NO] = S.[WM_NO] AND TT.[ZONE_NO] = S.[ZONE_NO]
		WHERE ISNULL(S.[INBOUND_PACKAGE], 0) = 0
	)

	UPDATE [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] WITH (ROWLOCK)
	SET [VALID_FLAG] = 0,
		[ERROR_MSG] = [ERROR_MSG] + '目的存储区对应的零件仓库信息中入库包装数为空或者为零' 
	WHERE [PART_NO] IN
	(
		SELECT
			S.[PART_NO]
		FROM [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] T WITH (NOLOCK)
		INNER JOIN [LES].[TT_WMM_OUTPUT] TT WITH (NOLOCK) ON TT.[OUTPUT_NO] = T.[OUTPUT_NO]
	    INNER JOIN [LES].[TM_BAS_PARTS_STOCK] S WITH (NOLOCK) ON TT.[PLANT] = S.[PLANT] AND TT.[PLANT_ZONE] = S.[ZONE_NO]
		WHERE ISNULL(S.[INBOUND_PACKAGE], 0) = 0
	)

	UPDATE [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] WITH (ROWLOCK)
	SET [VALID_FLAG] = 0,
		[ERROR_MSG] = [ERROR_MSG] + '零件号重复'
	WHERE [PART_NO] IN
	(
		SELECT
			tmp.[PART_NO]
		FROM (SELECT [OUTPUT_NO], [PART_NO], COUNT(*) AS [NUM] FROM [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] WITH (NOLOCK) WHERE [PART_NO] IS NOT NULL GROUP BY [OUTPUT_NO], [PART_NO]) tmp 
		WHERE tmp.NUM > 1
	)

	UPDATE [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] WITH (ROWLOCK) SET [VALID_FLAG] = 0, [ERROR_MSG] = [ERROR_MSG] + '需求箱数不能为空' WHERE ISNULL([REQUIRED_BOX_NUM], '') = ''
	UPDATE [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] WITH (ROWLOCK) SET [VALID_FLAG] = 0, [ERROR_MSG] = [ERROR_MSG] + '需求件数不能为空' WHERE ISNULL([REQUIRED_QTY], '') = ''
	--UPDATE [LES].TE_WMM_OUTPUT_DETAIL_TEMP SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '实际箱数不能为空' WHERE ISNULL(ACTUAL_BOX_NUM, '') = ''
	--UPDATE [LES].TE_WMM_OUTPUT_DETAIL_TEMP SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '实际件数不能为空' WHERE ISNULL(ACTUAL_QTY, '') = ''
	UPDATE [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] WITH (ROWLOCK) SET [VALID_FLAG] = 0, [ERROR_MSG] = [ERROR_MSG] + '需求箱数应该是大于0的整数' WHERE [REQUIRED_BOX_NUM] <= 0
	UPDATE [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] WITH (ROWLOCK) SET [VALID_FLAG] = 0, [ERROR_MSG] = [ERROR_MSG] + '需求件数应该是大于0的整数' WHERE [REQUIRED_QTY] <= 0
	UPDATE [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] WITH (ROWLOCK) SET [VALID_FLAG] = 0, [ERROR_MSG] = [ERROR_MSG] + '实际箱数不能为负数' WHERE [ACTUAL_BOX_NUM] < 0 AND ISNULL([ACTUAL_BOX_NUM], '') <> ''
	UPDATE [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] WITH (ROWLOCK) SET [VALID_FLAG] = 0, [ERROR_MSG] = [ERROR_MSG] + '实际件数不能为负数' WHERE [ACTUAL_QTY] < 0 AND ISNULL([ACTUAL_QTY], '') <> ''
	UPDATE [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] WITH (ROWLOCK) SET [VALID_FLAG] = 0, [ERROR_MSG] = [ERROR_MSG] + '需求箱数格式不对或超出范围' WHERE ISNUMERIC([REQUIRED_BOX_NUM]) = 0 AND ISNULL([REQUIRED_BOX_NUM], '') <> ''
	UPDATE [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] WITH (ROWLOCK) SET [VALID_FLAG] = 0, [ERROR_MSG] = [ERROR_MSG] + '需求件数格式不对或超出范围' WHERE ISNUMERIC([REQUIRED_QTY]) = 0 AND ISNULL([REQUIRED_QTY], '') <> ''
	UPDATE [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] WITH (ROWLOCK) SET [VALID_FLAG] = 0, [ERROR_MSG] = [ERROR_MSG] + '实际箱数格式不对或超出范围' WHERE ISNUMERIC([ACTUAL_BOX_NUM]) = 0 AND ISNULL([ACTUAL_BOX_NUM], '') <> ''
	UPDATE [LES].[TE_WMM_OUTPUT_DETAIL_TEMP] WITH (ROWLOCK) SET [VALID_FLAG] = 0, [ERROR_MSG] = [ERROR_MSG] + '实际件数格式不对或超出范围' WHERE ISNUMERIC([ACTUAL_QTY]) = 0 AND ISNULL([ACTUAL_QTY], '') <> ''

	END TRY
	BEGIN CATCH
		SELECT
			ERROR_NUMBER() AS ErrorNumber,
			ERROR_SEVERITY() AS ErrorSeverity,
			ERROR_STATE() AS ErrorState,
			ERROR_PROCEDURE() AS ErrorProcedure,
			ERROR_LINE() AS ErrorLine,
			ERROR_MESSAGE() AS ErrorMessage

		IF @@TRANCOUNT > 0
			ROLLBACK TRANSACTION
	END CATCH

	IF @@TRANCOUNT > 0
		COMMIT TRANSACTION