






/********************************************************************/
/*                                                                  */
/*   Project Name:  LES System                          */
/*   Program Name:  [PROC_WMS_STOCKS_TEMP_CHECK]                       */
/*   Called By:     by the Page							*/
/*   Purpose:       This is the main stored procedure for the       */
/*   author:       andy	2015-06-09   				       */
/*   更新人:     zhangheng							*/
/*   更新原因:       之前判断不正确       */
/*   更新时间:       2016-04-27   				       */
/********************************************************************/
CREATE PROC [LES].[PROC_WMS_STOCKS_TEMP_CHECK]
AS
	BEGIN TRANSACTION;

	
	BEGIN TRY

	UPDATE [LES].TE_WMS_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '工厂不正确:【'+[PLANT]+'】;'
	WHERE [PLANT] NOT IN (SELECT [PLANT] FROM [LES].[TM_BAS_PLANT])

	UPDATE [LES].TE_WMS_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '仓库不正确:【'+[WM_NO]+'】;'
	WHERE [WM_NO] NOT IN (SELECT [WAREHOUSE] FROM [LES].[TM_BAS_WAREHOUSE]) and VALID_FLAG!=0

	UPDATE [LES].TE_WMS_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '仓库与工厂关联不正确:【'+[WM_NO]+'】;'
	WHERE STOCK_IDENTITY NOT IN (SELECT  STOCK_IDENTITY FROM [LES].TE_WMS_STOCKS_TEMP M JOIN 
    LES.[TM_BAS_WAREHOUSE] Z ON M.PLANT=Z.PLANT AND M.WM_NO=Z.WAREHOUSE) and VALID_FLAG!=0
	
	UPDATE [LES].TE_WMS_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '存储区不正确:【'+[ZONE_NO]+'】;'
	WHERE [ZONE_NO] NOT IN (SELECT [ZONE_NO] FROM [LES].[TM_WMM_ZONES]) and VALID_FLAG!=0

	UPDATE [LES].TE_WMS_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '存储区与仓库关联不正确:【'+[ZONE_NO]+'】;'
	WHERE STOCK_IDENTITY NOT IN (SELECT STOCK_IDENTITY FROM [LES].TE_WMS_STOCKS_TEMP M JOIN 
    LES.TM_WMM_ZONES Z ON M.WM_NO=Z.WM_NO AND M.ZONE_NO=Z.ZONE_NO) and VALID_FLAG!=0

	--UPDATE [LES].TE_WMS_STOCKS_TEMP
	--SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '库位不正确;'
	--WHERE [DLOC] NOT IN (SELECT [DLOC] FROM [LES].[TM_BAS_WAREHOUSE_LOCATION])

	--UPDATE [LES].TE_WMS_STOCKS_TEMP
	--SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '库位与存储区关联不正确;'
	--WHERE STOCK_IDENTITY NOT IN (SELECT STOCK_IDENTITY FROM [LES].TE_WMS_STOCKS_TEMP M JOIN 
 --   LES.[TM_BAS_WAREHOUSE_LOCATION] Z ON M.[PLANT]=Z.[PLANT] AND M.[WM_NO]=Z.[WM_NO] 
	--		AND M.[ZONE_NO]=Z.[ZONE_NO] AND M.[DLOC]=Z.[DLOC] )

	UPDATE [LES].TE_WMS_STOCKS_TEMP
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '零件仓库不存在此物料号:【'+PART_NO+'】;'
	WHERE STOCK_IDENTITY NOT IN (SELECT M.STOCK_IDENTITY FROM [LES].TE_WMS_STOCKS_TEMP M JOIN 
   LES.[TM_BAS_PARTS_STOCK] Z ON M.PLANT=Z.PLANT AND M.WM_NO=Z.WM_NO AND M.ZONE_NO=Z.ZONE_NO AND M.PART_NO=Z.PART_NO) and VALID_FLAG!=0
	
	UPDATE TE
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '零件批次与零件仓库中信息不一致:【'+TE.PART_NO+'】;'
	FROM 
		[LES].TE_WMS_STOCKS_TEMP TE,
		LES.[TM_BAS_PARTS_STOCK] TS
	WHERE TS.PLANT=TE.PLANT AND TS.WM_NO=TE.WM_NO AND TS.ZONE_NO=TE.ZONE_NO AND TS.PART_NO=TE.PART_NO
			AND TS.IS_BATCH<>TE.IS_BATCH  AND VALID_FLAG!=0
	
	UPDATE TE
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '零件仓库中对应的标准包装数不能为零;'
	FROM 
		[LES].TE_WMS_STOCKS_TEMP TE,
		LES.[TM_BAS_PARTS_STOCK] TS
	WHERE TS.PLANT=TE.PLANT AND TS.WM_NO=TE.WM_NO AND TS.ZONE_NO=TE.ZONE_NO AND TS.PART_NO=TE.PART_NO
			AND TS.PACKAGE=0 AND VALID_FLAG!=0
			
	UPDATE TE
	SET VALID_FLAG = 0, ERROR_MSG = ERROR_MSG + '零件仓库中对应的标准包装数不能为空;'
	FROM 
		[LES].TE_WMS_STOCKS_TEMP TE,
		LES.[TM_BAS_PARTS_STOCK] TS
	WHERE TS.PLANT=TE.PLANT AND TS.WM_NO=TE.WM_NO AND TS.ZONE_NO=TE.ZONE_NO AND TS.PART_NO=TE.PART_NO
			AND TS.PACKAGE IS NULL AND VALID_FLAG!=0

	--返回错误数据
	SELECT PART_NO,ERROR_MSG FROM [LES].TE_WMS_STOCKS_TEMP WHERE VALID_FLAG=0
	END TRY
	BEGIN CATCH
		SELECT 
			ERROR_NUMBER() AS ErrorNumber
			,ERROR_SEVERITY() AS ErrorSeverity
			,ERROR_STATE() AS ErrorState
			,ERROR_PROCEDURE() AS ErrorProcedure
			,ERROR_LINE() AS ErrorLine
			,ERROR_MESSAGE() AS ErrorMessage;

		IF @@TRANCOUNT > 0
			ROLLBACK TRANSACTION;
	END CATCH;

	IF @@TRANCOUNT > 0
		COMMIT TRANSACTION;