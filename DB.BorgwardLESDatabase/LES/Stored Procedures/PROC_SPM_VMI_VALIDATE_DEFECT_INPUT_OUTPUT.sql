
-- =============================================
-- Author:		Scott
-- Create date: 2017/9/14
-- Description:	不合格品VMI入库出库数据验证存储过程
-- =============================================
CREATE PROCEDURE [LES].[PROC_SPM_VMI_VALIDATE_DEFECT_INPUT_OUTPUT]
	@RETURN_ID int,
	@ACTION_TYPE int, --1:VMI不合格品退货入库,2:VMI不合格品退货出库
	@LOGIN_USER_NAME nvarchar(50)
AS
BEGIN
begin tran

update [LES].[TE_SPM_VMI_STOCKS_TEMP] WITH(TABLOCK,XLOCK) set CREATE_USER=CREATE_USER where 1<>1;
TRUNCATE TABLE [LES].[TE_SPM_VMI_STOCKS_TEMP];

declare @RETURN_NO nvarchar(50);
select @RETURN_NO=[RETURN_NO] from [LES].[TT_WMM_RETURN]
where [RETURN_ID]=@RETURN_ID

--首先检查退货单中的每一个零件号是否能够找相应的库存库位信息
INSERT INTO [LES].[TE_SPM_VMI_STOCKS_TEMP] 
(
[D_PLANT],
[D_WM_NO],
[D_ZONE_NO],
[D_DLOC],
[SUPPLIER_NUM],
[PART_NO],
[STOCKS_NUM],
[VALID_FLAG],
[CREATE_DATE],
[CREATE_USER]
)
SELECT
VW.PLANT,
VW.WM_NO,
VW.ZONE_NO,
VW.DLOC,
TS.SUPPLIER_NUM,
TS.PART_NO,
NULL,
1,
GETDATE(),
@LOGIN_USER_NAME
from [LES].[TT_WMM_RETURN_DETAIL] as TS with(nolock)
                left join
                (
	                select VS.SUPPLIER_NUM,WZ.ZONE_NO,WZ.PLANT,WZ.WM_NO,PS.PART_NO,PS.DLOC
	                from [LES].[TM_BAS_VMI_SUPPLIER] as VS with(nolock) 
	                inner join
	                [LES].[TM_WMM_ZONES] as WZ with(nolock)
	                on VS.ZONE_NO=WZ.ZONE_NO and WZ.IS_MANAGE=120 --不合格品区
	                inner join 
	                [LES].[TM_BAS_PARTS_STOCK] as PS with(nolock)
	                on PS.ZONE_NO=WZ.ZONE_NO and VS.SUPPLIER_NUM=PS.SUPPLIER_NUM
                ) as VW on TS.SUPPLIER_NUM=VW.SUPPLIER_NUM AND VW.PART_NO=TS.PART_NO

WHERE
[RETURN_ID]=@RETURN_ID

UPDATE [LES].[TE_SPM_VMI_STOCKS_TEMP] 
SET [ERROR_MSG]='无法找到零件:【'+PART_NO+'】在VMI仓库中的不合格品区库位;'
	,[VALID_FLAG]=0
WHERE D_DLOC IS NULL AND VALID_FLAG=1

--将该退货单中的零件号按照相应的库存库位信息做聚合
IF (SELECT COUNT(1) FROM [LES].[TE_SPM_VMI_STOCKS_TEMP] WHERE VALID_FLAG=0)=0
BEGIN
	TRUNCATE TABLE [LES].[TE_SPM_VMI_STOCKS_TEMP];

	INSERT INTO [LES].[TE_SPM_VMI_STOCKS_TEMP] 
	(
	[D_PLANT],
	[D_WM_NO],
	[D_ZONE_NO],
	[D_DLOC],
	[SUPPLIER_NUM],
	[PART_NO],
	[STOCKS_NUM],
	[VALID_FLAG],
	[CREATE_DATE],
	[CREATE_USER]
	)
	SELECT
	VW.PLANT,
	VW.WM_NO,
	VW.ZONE_NO,
	VW.DLOC,
	VW.SUPPLIER_NUM,
	VW.PART_NO,
	SUM([PACK_SIZE]),
	1,
	GETDATE(),
	@LOGIN_USER_NAME
	from  [LES].[TT_WMM_RETURN_DETAIL] as TS with(nolock)
					inner join
					(
						select VS.SUPPLIER_NUM,WZ.ZONE_NO,WZ.PLANT,WZ.WM_NO,PS.PART_NO,PS.DLOC
						from [LES].[TM_BAS_VMI_SUPPLIER] as VS with(nolock) 
						inner join
						[LES].[TM_WMM_ZONES] as WZ with(nolock)
						on VS.ZONE_NO=WZ.ZONE_NO and WZ.IS_MANAGE=120 --不合格品区
						inner join 
						[LES].[TM_BAS_PARTS_STOCK] as PS with(nolock)
						on PS.ZONE_NO=WZ.ZONE_NO and VS.SUPPLIER_NUM=PS.SUPPLIER_NUM
					) as VW on TS.SUPPLIER_NUM=VW.SUPPLIER_NUM AND VW.PART_NO=TS.PART_NO

	WHERE
	[RETURN_ID]=@RETURN_ID
	GROUP BY VW.PLANT,VW.WM_NO,VW.ZONE_NO,VW.DLOC,VW.PART_NO,VW.SUPPLIER_NUM

	UPDATE 
	[LES].[TE_SPM_VMI_STOCKS_TEMP]
	SET STOCKS_NUM=0
	WHERE STOCKS_NUM IS NULL

	--如果是不合格品出库，首先检查是否能找到当前库存信息
	IF @ACTION_TYPE=2
	BEGIN
		UPDATE [LES].[TE_SPM_VMI_STOCKS_TEMP]
		SET STOCKS_NUM=-STOCKS_NUM;

		
		UPDATE [LES].[TE_SPM_VMI_STOCKS_TEMP] 
		SET [ERROR_MSG]=CASE WHEN WS.STOCK_IDENTITY IS NULL THEN N'无法找到零件号【'+TE.PART_NO+N'】在库存中的信息，无法出库' ELSE N'' END
		,[VALID_FLAG]=CASE WHEN WS.STOCK_IDENTITY IS NULL THEN 0 ELSE [VALID_FLAG] END
		FROM [LES].[TE_SPM_VMI_STOCKS_TEMP] AS TE
			 LEFT JOIN 
			 [LES].[TT_WMS_STOCKS] AS WS WITH(NOLOCK)
			 ON TE.D_PLANT=WS.PLANT AND TE.D_WM_NO=WS.WM_NO AND TE.D_ZONE_NO=WS.ZONE_NO AND TE.D_DLOC=WS.DLOC AND TE.PART_NO=WS.PART_NO
	END

	--接着检查库存是否允许负库存
	IF (SELECT COUNT(1) FROM [LES].[TE_SPM_VMI_STOCKS_TEMP] WHERE VALID_FLAG=0)=0
	BEGIN
		UPDATE [LES].[TE_SPM_VMI_STOCKS_TEMP] 
		SET [ERROR_MSG]=CASE WHEN WS.STOCK_IDENTITY IS NULL OR (ISNULL(WS.STOCKS_NUM,0)+TE.STOCKS_NUM-ISNULL(WS.FRAGMENT_NUM,0)<0 AND WZ.IS_NEGATIVE=0) THEN N'零件号【'+TE.PART_NO+N'】更新到对应仓库后，仓库数据将出现可用库存小于0，但是仓库存储区【'+TE.D_ZONE_NO+N'】是不允许有负库存的' ELSE N'' END
		,[VALID_FLAG]=CASE WHEN WS.STOCK_IDENTITY IS NULL OR (ISNULL(WS.STOCKS_NUM,0)+TE.STOCKS_NUM-ISNULL(WS.FRAGMENT_NUM,0)<0 AND WZ.IS_NEGATIVE=0) THEN 0 ELSE [VALID_FLAG] END
		FROM [LES].[TE_SPM_VMI_STOCKS_TEMP] AS TE
		LEFT JOIN 
		[LES].[TT_WMS_STOCKS] AS WS WITH(NOLOCK)
		ON TE.D_PLANT=WS.PLANT AND TE.D_WM_NO=WS.WM_NO AND TE.D_ZONE_NO=WS.ZONE_NO AND TE.D_DLOC=WS.DLOC AND TE.PART_NO=WS.PART_NO AND TE.SUPPLIER_NUM=WS.SUPPLIER_NUM
		INNER JOIN
		[LES].[TM_WMM_ZONES] AS WZ WITH(NOLOCK)
		ON TE.ZONE_NO=WZ.ZONE_NO
	END
END

--返回错误数据
select PART_NO,ERROR_MSG from [LES].TE_SPM_VMI_STOCKS_TEMP where VALID_FLAG=0

commit
END