--SAP接口_APO_断点计划
CREATE PROCEDURE [LES].[PROC_INTERFACE_BAS_SAP_LES_BREAKPOINT] 
AS
BEGIN
	BEGIN TRY
		BEGIN TRANSACTION

			--如果已经存在的数据，则先删除数据，再插入数据
			DELETE FROM LES.TM_BAS_INHOUSE_BREAKPOINT_PART  WHERE  EXISTS(SELECT * FROM LES.TI_BAS_EWO_BREAKPOINT_IN t_BREAKPOINT WHERE ISNULL(t_BREAKPOINT.PROCESS_FLAG,0) = 0 AND t_BREAKPOINT.ZWERKS=PLANT AND EWO=t_BREAKPOINT.ZAENNR AND PART_NO=t_BREAKPOINT.ZMAT1)

			--插入数据
			DECLARE @BREAKPOINT_ID BIGINT;
			DECLARE BREAKPOINT_CURS0  CURSOR FOR
			SELECT t_BREAKPOINT.SEQ_ID FROM LES.TI_BAS_EWO_BREAKPOINT_IN t_BREAKPOINT
				WHERE ISNULL(t_BREAKPOINT.PROCESS_FLAG,0) = 0  
				AND NOT EXISTS(SELECT * FROM LES.TM_BAS_INHOUSE_BREAKPOINT_PART T_PART WHERE t_BREAKPOINT.ZWERKS=T_PART.PLANT AND T_PART.EWO=t_BREAKPOINT.ZAENNR AND T_PART.PART_NO=t_BREAKPOINT.ZMAT1) 
			OPEN BREAKPOINT_CURS0
			FETCH NEXT FROM BREAKPOINT_CURS0 INTO @BREAKPOINT_ID
			WHILE( @@fetch_status = 0 )
			BEGIN
				--生成断点标示
				DECLARE @SEQ_ID int
				EXEC @SEQ_ID = [LES].[PROC_SYS_GET_NEXT_SEQUENCE] 'InhousePartsBreakpoint'
				--插入数据
				INSERT INTO LES.TM_BAS_INHOUSE_BREAKPOINT_PART(INHOUSE_BREAKPOINT_NO,EWO,PLANT,MODEL,PART_NO,PART_CNAME,NEW_PART_NO,NEW_PART_CNAME,BREAK_TIME,CREATE_USER,CREATE_DATE,ASSEMBLY_LINE,BREAKPOINT_STATUS,BREAKPOINT_TYPE,INHOUSE_SYSTEM_MODE)
				SELECT @SEQ_ID,ZAENNR,ZWERKS,ZMATNR,IsNull(ZMAT1,''),ZMAT1_DES,ZMAT2,ZMAT2_DES,CASE WHEN ZDATUV='00000000' THEN NULL else ZDATUV end				,'admin',getdate(),'AS',0,1,'PCS'
							FROM LES.TI_BAS_EWO_BREAKPOINT_IN i
							WHERE  i.SEQ_ID=@BREAKPOINT_ID
				--更改当前记录处理状态
				UPDATE i SET i.PROCESS_FLAG = 1,i.PROCESS_TIME = getdate()
							FROM LES.TI_BAS_EWO_BREAKPOINT_IN i 
							WHERE  i.SEQ_ID=@BREAKPOINT_ID

			FETCH NEXT FROM BREAKPOINT_CURS0 INTO @BREAKPOINT_ID
			END
			CLOSE  BREAKPOINT_CURS0
			DEALLOCATE BREAKPOINT_CURS0

			COMMIT TRANSACTION
	END TRY
	BEGIN CATCH
		--出错，则返回执行不成功，回滚事务
	ROLLBACK TRANSACTION
--记录错误信息
	INSERT INTO [LES].[TS_SYS_EXCEPTION] (time_stamp, [application], [METHOD], class,  exception_message, error_code)
select getdate(),'INTERFACE','PROC_INTERFACE_BAS_SAP_LES_BREAKPOINT','Procedure',error_message(),ERROR_LINE()

	END CATCH
END