CREATE PROCEDURE [LES].[PROC_WMM_RECEIVE_SUBMIT_TRAY]
(
	@RECEIVE_ID INT,
	@TRAY_NO NVARCHAR(50),
	@LOGIN_NAME NVARCHAR(50)
)
AS
BEGIN
	BEGIN TRY
		BEGIN TRANSACTION

		DECLARE @RECEIVE_NO NVARCHAR(50)
		SELECT @RECEIVE_NO = [RECEIVE_NO] FROM [LES].[TT_WMM_RECEIVE] WITH (NOLOCK) WHERE [RECEIVE_ID] = @RECEIVE_ID

		IF EXISTS(SELECT 1 FROM [LES].[TT_SPM_TRAY_INFO] WITH (NOLOCK) WHERE [TRAY_NO] = @TRAY_NO AND [BILL_NO] = @RECEIVE_NO AND [TRAY_STATUS] = 2)
			BEGIN
				UPDATE A
				SET A.[Current_QTY] = ISNULL(A.[Current_QTY], 0) + C.[NUM],
					A.[Current_BOX_NUM] = (ISNULL(A.[Current_QTY], 0) + C.[NUM]) / A.[PACKAGE],
					A.[UPDATE_DATE] = GETDATE(),
					A.[UPDATE_USER] = @LOGIN_NAME
				FROM [LES].[TT_WMM_RECEIVE_DETAIL] A WITH (ROWLOCK)
				INNER JOIN [LES].[TT_SPM_TRAY_INFO] B WITH (NOLOCK) ON A.[TWD_RUNSHEET_NO] = B.[TWD_RUNSHEET_NO]
				INNER JOIN [LES].[TT_SPM_TRAY_DETAIL] C WITH (NOLOCK) ON C.[TRAY_NO] = B.[TRAY_NO] AND C.[PART_NO] = A.[PART_NO] AND C.[BIND_FLAG] = 1 AND C.[VALID_FLAG] = 1
				WHERE A.[RECEIVE_ID] = @RECEIVE_ID AND B.[TRAY_NO] = @TRAY_NO AND B.[BILL_NO] = @RECEIVE_NO AND B.[TRAY_STATUS] = 2

				UPDATE [LES].[TT_SPM_TRAY_INFO] WITH (ROWLOCK) SET [TRAY_STATUS] = 5 WHERE [TRAY_NO] = @TRAY_NO AND [BILL_NO] = @RECEIVE_NO AND [TRAY_STATUS] = 2
			END

		COMMIT TRANSACTION
	END TRY   
	BEGIN CATCH
		ROLLBACK TRANSACTION
	END CATCH
END